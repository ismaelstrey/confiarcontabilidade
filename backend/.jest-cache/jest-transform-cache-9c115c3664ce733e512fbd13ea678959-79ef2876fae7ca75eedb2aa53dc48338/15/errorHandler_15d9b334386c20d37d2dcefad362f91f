95f5086c1d6e6e26bd5db75eff21dbf0
"use strict";

/* istanbul ignore next */
function cov_1nb9g0ko8q() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\errorHandler.ts";
  var hash = "7dfe6b437b81da1557d138d97c8217634e47826a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\errorHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 296
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "9": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 28
        }
      },
      "10": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "12": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "13": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "14": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "15": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "16": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 48
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "18": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "19": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "20": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "22": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 66
        }
      },
      "23": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 58
        }
      },
      "25": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "26": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 67
        }
      },
      "27": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "28": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 62
        }
      },
      "29": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "30": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 90
        }
      },
      "31": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 18
        }
      },
      "32": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 67
        }
      },
      "33": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "34": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 60
        }
      },
      "35": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 18
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "37": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 73
        }
      },
      "38": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 47
        }
      },
      "39": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 36
        }
      },
      "40": {
        start: {
          line: 92,
          column: 21
        },
        end: {
          line: 96,
          column: 1
        }
      },
      "41": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "42": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 56
        }
      },
      "43": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 97,
          column: 36
        }
      },
      "44": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 101,
          column: 1
        }
      },
      "45": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "46": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 102,
          column: 54
        }
      },
      "47": {
        start: {
          line: 103,
          column: 32
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "48": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 54
        }
      },
      "49": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 106,
          column: 58
        }
      },
      "50": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "51": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "52": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 110,
          column: 52
        }
      },
      "53": {
        start: {
          line: 111,
          column: 28
        },
        end: {
          line: 113,
          column: 1
        }
      },
      "54": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "55": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 114,
          column: 50
        }
      },
      "56": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "57": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 59
        }
      },
      "58": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 118,
          column: 50
        }
      },
      "59": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 121,
          column: 1
        }
      },
      "60": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "61": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 50
        }
      },
      "62": {
        start: {
          line: 123,
          column: 35
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "63": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "64": {
        start: {
          line: 126,
          column: 0
        },
        end: {
          line: 126,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 99
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 92,
            column: 22
          }
        },
        loc: {
          start: {
            line: 92,
            column: 29
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 92
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 93,
            column: 11
          },
          end: {
            line: 93,
            column: 12
          }
        },
        loc: {
          start: {
            line: 93,
            column: 31
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 93
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 30
          },
          end: {
            line: 99,
            column: 31
          }
        },
        loc: {
          start: {
            line: 99,
            column: 52
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 33
          }
        },
        loc: {
          start: {
            line: 103,
            column: 71
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 103
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 107,
            column: 30
          }
        },
        loc: {
          start: {
            line: 107,
            column: 60
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 107
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 111,
            column: 28
          },
          end: {
            line: 111,
            column: 29
          }
        },
        loc: {
          start: {
            line: 111,
            column: 68
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 111
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 115,
            column: 28
          },
          end: {
            line: 115,
            column: 29
          }
        },
        loc: {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 115
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 29
          }
        },
        loc: {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 35
          },
          end: {
            line: 123,
            column: 36
          }
        },
        loc: {
          start: {
            line: 123,
            column: 70
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 123
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 11,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 38
          },
          end: {
            line: 11,
            column: 41
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 43
          },
          end: {
            line: 11,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 11,
            column: 66
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 77
          },
          end: {
            line: 11,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 93
          },
          end: {
            line: 11,
            column: 97
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 39
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 46
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 27
          }
        }, {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 47
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 43,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 43,
            column: 34
          }
        }, {
          start: {
            line: 43,
            column: 38
          },
          end: {
            line: 43,
            column: 64
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 18
          }
        }, {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 18
          }
        }, {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 18
          }
        }, {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 18
          }
        }, {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 18
          }
        }, {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 18
          }
        }, {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 18
          }
        }, {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 13
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 43
          },
          end: {
            line: 103,
            column: 66
          }
        }],
        line: 103
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 107,
            column: 55
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 111,
            column: 29
          },
          end: {
            line: 111,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 39
          },
          end: {
            line: 111,
            column: 63
          }
        }],
        line: 111
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 36
          },
          end: {
            line: 123,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 123,
            column: 46
          },
          end: {
            line: 123,
            column: 65
          }
        }],
        line: 123
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0, 0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0]
    },
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\errorHandler.ts",
      mappings: ";;;AACA,qCAAkC;AASlC,iCAAiC;AACjC,MAAa,QAAS,SAAQ,KAAK;IACjB,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,OAAO,CAAO;IACd,aAAa,CAAU;IAEvC,YACE,OAAe,EACf,aAAqB,GAAG,EACxB,OAAe,gBAAgB,EAC/B,OAAa,EACb,gBAAyB,IAAI;QAE7B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;CACF;AArBD,4BAqBC;AAED,oCAAoC;AAC7B,MAAM,YAAY,GAAG,CAC1B,KAAkB,EAClB,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,cAAc;IACd,eAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE;QAC9B,OAAO,EAAE,KAAK,CAAC,OAAO;QACtB,KAAK,EAAE,KAAK,CAAC,KAAK;QAClB,UAAU,EAAE,KAAK,CAAC,UAAU;QAC5B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,GAAG,EAAE,GAAG,CAAC,GAAG;QACZ,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,EAAE,EAAE,GAAG,CAAC,EAAE;QACV,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC;QAChC,OAAO,EAAE,KAAK,CAAC,OAAO;KACvB,CAAC,CAAC;IAEH,6BAA6B;IAC7B,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC;IAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,gBAAgB,CAAC;IAE5C,wBAAwB;IACxB,MAAM,aAAa,GAAQ;QACzB,OAAO,EAAE,KAAK;QACd,KAAK,EAAE;YACL,IAAI;YACJ,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,0BAA0B;SACrD;QACD,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,IAAI,EAAE,GAAG,CAAC,GAAG;QACb,MAAM,EAAE,GAAG,CAAC,MAAM;KACnB,CAAC;IAEF,wCAAwC;IACxC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE,CAAC;QAC3C,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACxC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9C,CAAC;IACH,CAAC;IAED,sDAAsD;IACtD,QAAQ,IAAI,EAAE,CAAC;QACb,KAAK,kBAAkB;YACrB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC3D,MAAM;QACR,KAAK,cAAc;YACjB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,uBAAuB,CAAC;YACtD,MAAM;QACR,KAAK,WAAW;YACd,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC;YAC9C,MAAM;QACR,KAAK,WAAW;YACd,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,wBAAwB,CAAC;YACvD,MAAM;QACR,KAAK,UAAU;YACb,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,mBAAmB,CAAC;YAClD,MAAM;QACR,KAAK,mBAAmB;YACtB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,+CAA+C,CAAC;YAC9E,MAAM;QACR,KAAK,gBAAgB;YACnB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,wBAAwB,CAAC;YACvD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;gBAC1C,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC9C,CAAC;YACD,MAAM;QACR;YACE,IAAI,UAAU,IAAI,GAAG,EAAE,CAAC;gBACtB,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,0BAA0B,CAAC;YAC3D,CAAC;IACL,CAAC;IAED,0BAA0B;IAC1B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC7C,CAAC,CAAC;AA7EW,QAAA,YAAY,gBA6EvB;AAEF,6CAA6C;AACtC,MAAM,YAAY,GAAG,CAC1B,EAAqE,EACrE,EAAE;IACF,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACzD,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC;AACJ,CAAC,CAAC;AANW,QAAA,YAAY,gBAMvB;AAEF,mDAAmD;AAC5C,MAAM,qBAAqB,GAAG,CAAC,OAAe,EAAE,OAAa,EAAE,EAAE;IACtE,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC,CAAC;AAFW,QAAA,qBAAqB,yBAEhC;AAEK,MAAM,uBAAuB,GAAG,CAAC,UAAkB,uBAAuB,EAAE,EAAE;IACnF,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;AACpD,CAAC,CAAC;AAFW,QAAA,uBAAuB,2BAElC;AAEK,MAAM,oBAAoB,GAAG,CAAC,UAAkB,eAAe,EAAE,EAAE;IACxE,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;AACjD,CAAC,CAAC;AAFW,QAAA,oBAAoB,wBAE/B;AAEK,MAAM,mBAAmB,GAAG,CAAC,UAAkB,wBAAwB,EAAE,EAAE;IAChF,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;AACjD,CAAC,CAAC;AAFW,QAAA,mBAAmB,uBAE9B;AAEK,MAAM,mBAAmB,GAAG,CAAC,OAAe,EAAE,OAAa,EAAE,EAAE;IACpE,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC,CAAC;AAFW,QAAA,mBAAmB,uBAE9B;AAEK,MAAM,mBAAmB,GAAG,CAAC,OAAe,EAAE,OAAa,EAAE,EAAE;IACpE,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AAC/D,CAAC,CAAC;AAFW,QAAA,mBAAmB,uBAE9B;AAEK,MAAM,0BAA0B,GAAG,CAAC,UAAkB,mBAAmB,EAAE,EAAE;IAClF,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;AACzD,CAAC,CAAC;AAFW,QAAA,0BAA0B,8BAErC",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\errorHandler.ts"],
      sourcesContent: ["import type { Request, Response, NextFunction } from 'express';\r\nimport { logger } from './logger';\r\n\r\n// Interface para erros customizados\r\nexport interface CustomError extends Error {\r\n  statusCode?: number;\r\n  code?: string;\r\n  details?: any;\r\n}\r\n\r\n// Classe para erros da aplica\xE7\xE3o\r\nexport class AppError extends Error {\r\n  public readonly statusCode: number;\r\n  public readonly code: string;\r\n  public readonly details?: any;\r\n  public readonly isOperational: boolean;\r\n\r\n  constructor(\r\n    message: string,\r\n    statusCode: number = 500,\r\n    code: string = 'INTERNAL_ERROR',\r\n    details?: any,\r\n    isOperational: boolean = true,\r\n  ) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.code = code;\r\n    this.details = details;\r\n    this.isOperational = isOperational;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\n// Middleware de tratamento de erros\r\nexport const errorHandler = (\r\n  error: CustomError,\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction,\r\n) => {\r\n  // Log do erro\r\n  logger.error('Error occurred:', {\r\n    message: error.message,\r\n    stack: error.stack,\r\n    statusCode: error.statusCode,\r\n    code: error.code,\r\n    url: req.url,\r\n    method: req.method,\r\n    ip: req.ip,\r\n    userAgent: req.get('User-Agent'),\r\n    details: error.details,\r\n  });\r\n\r\n  // Definir status code padr\xE3o\r\n  const statusCode = error.statusCode || 500;\r\n  const code = error.code || 'INTERNAL_ERROR';\r\n\r\n  // Resposta base do erro\r\n  const errorResponse: any = {\r\n    success: false,\r\n    error: {\r\n      code,\r\n      message: error.message || 'Erro interno do servidor',\r\n    },\r\n    timestamp: new Date().toISOString(),\r\n    path: req.url,\r\n    method: req.method,\r\n  };\r\n\r\n  // Adicionar detalhes em desenvolvimento\r\n  if (process.env.NODE_ENV === 'development') {\r\n    errorResponse.error.stack = error.stack;\r\n    if (error.details) {\r\n      errorResponse.error.details = error.details;\r\n    }\r\n  }\r\n\r\n  // Tratamento espec\xEDfico para diferentes tipos de erro\r\n  switch (code) {\r\n    case 'VALIDATION_ERROR':\r\n      errorResponse.error.message = 'Dados de entrada inv\xE1lidos';\r\n      break;\r\n    case 'UNAUTHORIZED':\r\n      errorResponse.error.message = 'Acesso n\xE3o autorizado';\r\n      break;\r\n    case 'FORBIDDEN':\r\n      errorResponse.error.message = 'Acesso negado';\r\n      break;\r\n    case 'NOT_FOUND':\r\n      errorResponse.error.message = 'Recurso n\xE3o encontrado';\r\n      break;\r\n    case 'CONFLICT':\r\n      errorResponse.error.message = 'Conflito de dados';\r\n      break;\r\n    case 'TOO_MANY_REQUESTS':\r\n      errorResponse.error.message = 'Muitas tentativas. Tente novamente mais tarde';\r\n      break;\r\n    case 'DATABASE_ERROR':\r\n      errorResponse.error.message = 'Erro no banco de dados';\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errorResponse.error.details = error.details;\r\n      }\r\n      break;\r\n    default:\r\n      if (statusCode >= 500) {\r\n        errorResponse.error.message = 'Erro interno do servidor';\r\n      }\r\n  }\r\n\r\n  // Enviar resposta de erro\r\n  res.status(statusCode).json(errorResponse);\r\n};\r\n\r\n// Middleware para capturar erros ass\xEDncronos\r\nexport const asyncHandler = (\r\n  fn: (req: Request, res: Response, next: NextFunction) => Promise<any>,\r\n) => {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    Promise.resolve(fn(req, res, next)).catch(next);\r\n  };\r\n};\r\n\r\n// Fun\xE7\xF5es utilit\xE1rias para criar erros espec\xEDficos\r\nexport const createValidationError = (message: string, details?: any) => {\r\n  return new AppError(message, 400, 'VALIDATION_ERROR', details);\r\n};\r\n\r\nexport const createUnauthorizedError = (message: string = 'Acesso n\xE3o autorizado') => {\r\n  return new AppError(message, 401, 'UNAUTHORIZED');\r\n};\r\n\r\nexport const createForbiddenError = (message: string = 'Acesso negado') => {\r\n  return new AppError(message, 403, 'FORBIDDEN');\r\n};\r\n\r\nexport const createNotFoundError = (message: string = 'Recurso n\xE3o encontrado') => {\r\n  return new AppError(message, 404, 'NOT_FOUND');\r\n};\r\n\r\nexport const createConflictError = (message: string, details?: any) => {\r\n  return new AppError(message, 409, 'CONFLICT', details);\r\n};\r\n\r\nexport const createDatabaseError = (message: string, details?: any) => {\r\n  return new AppError(message, 500, 'DATABASE_ERROR', details);\r\n};\r\n\r\nexport const createTooManyRequestsError = (message: string = 'Muitas tentativas') => {\r\n  return new AppError(message, 429, 'TOO_MANY_REQUESTS');\r\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7dfe6b437b81da1557d138d97c8217634e47826a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nb9g0ko8q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nb9g0ko8q();
cov_1nb9g0ko8q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nb9g0ko8q().s[1]++;
exports.createTooManyRequestsError = exports.createDatabaseError = exports.createConflictError = exports.createNotFoundError = exports.createForbiddenError = exports.createUnauthorizedError = exports.createValidationError = exports.asyncHandler = exports.errorHandler = exports.AppError = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1nb9g0ko8q().s[2]++, require("./logger"));
// Classe para erros da aplicação
class AppError extends Error {
  statusCode;
  code;
  details;
  isOperational;
  constructor(message, statusCode =
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[0][0]++, 500), code =
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[1][0]++, 'INTERNAL_ERROR'), details, isOperational =
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[2][0]++, true)) {
    /* istanbul ignore next */
    cov_1nb9g0ko8q().f[0]++;
    cov_1nb9g0ko8q().s[3]++;
    super(message);
    /* istanbul ignore next */
    cov_1nb9g0ko8q().s[4]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_1nb9g0ko8q().s[5]++;
    this.code = code;
    /* istanbul ignore next */
    cov_1nb9g0ko8q().s[6]++;
    this.details = details;
    /* istanbul ignore next */
    cov_1nb9g0ko8q().s[7]++;
    this.isOperational = isOperational;
    /* istanbul ignore next */
    cov_1nb9g0ko8q().s[8]++;
    Error.captureStackTrace(this, this.constructor);
  }
}
/* istanbul ignore next */
cov_1nb9g0ko8q().s[9]++;
exports.AppError = AppError;
// Middleware de tratamento de erros
/* istanbul ignore next */
cov_1nb9g0ko8q().s[10]++;
const errorHandler = (error, req, res, next) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[1]++;
  cov_1nb9g0ko8q().s[11]++;
  // Log do erro
  logger_1.logger.error('Error occurred:', {
    message: error.message,
    stack: error.stack,
    statusCode: error.statusCode,
    code: error.code,
    url: req.url,
    method: req.method,
    ip: req.ip,
    userAgent: req.get('User-Agent'),
    details: error.details
  });
  // Definir status code padrão
  const statusCode =
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().s[12]++,
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[3][0]++, error.statusCode) ||
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[3][1]++, 500));
  const code =
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().s[13]++,
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[4][0]++, error.code) ||
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().b[4][1]++, 'INTERNAL_ERROR'));
  // Resposta base do erro
  const errorResponse =
  /* istanbul ignore next */
  (cov_1nb9g0ko8q().s[14]++, {
    success: false,
    error: {
      code,
      message:
      /* istanbul ignore next */
      (cov_1nb9g0ko8q().b[5][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1nb9g0ko8q().b[5][1]++, 'Erro interno do servidor')
    },
    timestamp: new Date().toISOString(),
    path: req.url,
    method: req.method
  });
  // Adicionar detalhes em desenvolvimento
  /* istanbul ignore next */
  cov_1nb9g0ko8q().s[15]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1nb9g0ko8q().b[6][0]++;
    cov_1nb9g0ko8q().s[16]++;
    errorResponse.error.stack = error.stack;
    /* istanbul ignore next */
    cov_1nb9g0ko8q().s[17]++;
    if (error.details) {
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[7][0]++;
      cov_1nb9g0ko8q().s[18]++;
      errorResponse.error.details = error.details;
    } else
    /* istanbul ignore next */
    {
      cov_1nb9g0ko8q().b[7][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1nb9g0ko8q().b[6][1]++;
  }
  // Tratamento específico para diferentes tipos de erro
  cov_1nb9g0ko8q().s[19]++;
  switch (code) {
    case 'VALIDATION_ERROR':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][0]++;
      cov_1nb9g0ko8q().s[20]++;
      errorResponse.error.message = 'Dados de entrada inválidos';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[21]++;
      break;
    case 'UNAUTHORIZED':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][1]++;
      cov_1nb9g0ko8q().s[22]++;
      errorResponse.error.message = 'Acesso não autorizado';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[23]++;
      break;
    case 'FORBIDDEN':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][2]++;
      cov_1nb9g0ko8q().s[24]++;
      errorResponse.error.message = 'Acesso negado';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[25]++;
      break;
    case 'NOT_FOUND':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][3]++;
      cov_1nb9g0ko8q().s[26]++;
      errorResponse.error.message = 'Recurso não encontrado';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[27]++;
      break;
    case 'CONFLICT':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][4]++;
      cov_1nb9g0ko8q().s[28]++;
      errorResponse.error.message = 'Conflito de dados';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[29]++;
      break;
    case 'TOO_MANY_REQUESTS':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][5]++;
      cov_1nb9g0ko8q().s[30]++;
      errorResponse.error.message = 'Muitas tentativas. Tente novamente mais tarde';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[31]++;
      break;
    case 'DATABASE_ERROR':
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][6]++;
      cov_1nb9g0ko8q().s[32]++;
      errorResponse.error.message = 'Erro no banco de dados';
      /* istanbul ignore next */
      cov_1nb9g0ko8q().s[33]++;
      if (process.env.NODE_ENV !== 'production') {
        /* istanbul ignore next */
        cov_1nb9g0ko8q().b[9][0]++;
        cov_1nb9g0ko8q().s[34]++;
        errorResponse.error.details = error.details;
      } else
      /* istanbul ignore next */
      {
        cov_1nb9g0ko8q().b[9][1]++;
      }
      cov_1nb9g0ko8q().s[35]++;
      break;
    default:
      /* istanbul ignore next */
      cov_1nb9g0ko8q().b[8][7]++;
      cov_1nb9g0ko8q().s[36]++;
      if (statusCode >= 500) {
        /* istanbul ignore next */
        cov_1nb9g0ko8q().b[10][0]++;
        cov_1nb9g0ko8q().s[37]++;
        errorResponse.error.message = 'Erro interno do servidor';
      } else
      /* istanbul ignore next */
      {
        cov_1nb9g0ko8q().b[10][1]++;
      }
  }
  // Enviar resposta de erro
  /* istanbul ignore next */
  cov_1nb9g0ko8q().s[38]++;
  res.status(statusCode).json(errorResponse);
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[39]++;
exports.errorHandler = errorHandler;
// Middleware para capturar erros assíncronos
/* istanbul ignore next */
cov_1nb9g0ko8q().s[40]++;
const asyncHandler = fn => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[2]++;
  cov_1nb9g0ko8q().s[41]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_1nb9g0ko8q().f[3]++;
    cov_1nb9g0ko8q().s[42]++;
    Promise.resolve(fn(req, res, next)).catch(next);
  };
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[43]++;
exports.asyncHandler = asyncHandler;
// Funções utilitárias para criar erros específicos
/* istanbul ignore next */
cov_1nb9g0ko8q().s[44]++;
const createValidationError = (message, details) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[4]++;
  cov_1nb9g0ko8q().s[45]++;
  return new AppError(message, 400, 'VALIDATION_ERROR', details);
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[46]++;
exports.createValidationError = createValidationError;
/* istanbul ignore next */
cov_1nb9g0ko8q().s[47]++;
const createUnauthorizedError = (message =
/* istanbul ignore next */
(cov_1nb9g0ko8q().b[11][0]++, 'Acesso não autorizado')) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[5]++;
  cov_1nb9g0ko8q().s[48]++;
  return new AppError(message, 401, 'UNAUTHORIZED');
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[49]++;
exports.createUnauthorizedError = createUnauthorizedError;
/* istanbul ignore next */
cov_1nb9g0ko8q().s[50]++;
const createForbiddenError = (message =
/* istanbul ignore next */
(cov_1nb9g0ko8q().b[12][0]++, 'Acesso negado')) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[6]++;
  cov_1nb9g0ko8q().s[51]++;
  return new AppError(message, 403, 'FORBIDDEN');
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[52]++;
exports.createForbiddenError = createForbiddenError;
/* istanbul ignore next */
cov_1nb9g0ko8q().s[53]++;
const createNotFoundError = (message =
/* istanbul ignore next */
(cov_1nb9g0ko8q().b[13][0]++, 'Recurso não encontrado')) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[7]++;
  cov_1nb9g0ko8q().s[54]++;
  return new AppError(message, 404, 'NOT_FOUND');
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[55]++;
exports.createNotFoundError = createNotFoundError;
/* istanbul ignore next */
cov_1nb9g0ko8q().s[56]++;
const createConflictError = (message, details) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[8]++;
  cov_1nb9g0ko8q().s[57]++;
  return new AppError(message, 409, 'CONFLICT', details);
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[58]++;
exports.createConflictError = createConflictError;
/* istanbul ignore next */
cov_1nb9g0ko8q().s[59]++;
const createDatabaseError = (message, details) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[9]++;
  cov_1nb9g0ko8q().s[60]++;
  return new AppError(message, 500, 'DATABASE_ERROR', details);
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[61]++;
exports.createDatabaseError = createDatabaseError;
/* istanbul ignore next */
cov_1nb9g0ko8q().s[62]++;
const createTooManyRequestsError = (message =
/* istanbul ignore next */
(cov_1nb9g0ko8q().b[14][0]++, 'Muitas tentativas')) => {
  /* istanbul ignore next */
  cov_1nb9g0ko8q().f[10]++;
  cov_1nb9g0ko8q().s[63]++;
  return new AppError(message, 429, 'TOO_MANY_REQUESTS');
};
/* istanbul ignore next */
cov_1nb9g0ko8q().s[64]++;
exports.createTooManyRequestsError = createTooManyRequestsError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,