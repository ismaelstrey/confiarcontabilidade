e86155d4f166096042cb11ae6529d7a1
"use strict";

/* istanbul ignore next */
function cov_2i6ia6afi0() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\calculatorController.ts";
  var hash = "570cd82b93581c8b757158e34c46cf1753f67e2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\calculatorController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 69
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "8": {
        start: {
          line: 19,
          column: 138
        },
        end: {
          line: 19,
          column: 146
        }
      },
      "9": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "10": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "11": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "12": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "13": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "14": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 23
        }
      },
      "15": {
        start: {
          line: 36,
          column: 36
        },
        end: {
          line: 36,
          column: 107
        }
      },
      "16": {
        start: {
          line: 37,
          column: 39
        },
        end: {
          line: 37,
          column: 59
        }
      },
      "17": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 92
        }
      },
      "18": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "19": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "20": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "21": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 67
        }
      },
      "22": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "23": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 98
        }
      },
      "24": {
        start: {
          line: 48,
          column: 21
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "25": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 130
        }
      },
      "26": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 162
        }
      },
      "27": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "28": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 57,
          column: 37
        }
      },
      "29": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 58,
          column: 56
        }
      },
      "30": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "31": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "32": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "33": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 79
        }
      },
      "34": {
        start: {
          line: 65,
          column: 17
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "35": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 108
        }
      },
      "36": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 137
        }
      },
      "37": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 49
        }
      },
      "38": {
        start: {
          line: 73,
          column: 33
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "39": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "40": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 81
        }
      },
      "41": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 47
        }
      },
      "42": {
        start: {
          line: 77,
          column: 34
        },
        end: {
          line: 77,
          column: 76
        }
      },
      "43": {
        start: {
          line: 78,
          column: 33
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "44": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "45": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "46": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "47": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 85
        }
      },
      "48": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 115,
          column: 15
        }
      },
      "49": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 74
        }
      },
      "50": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "51": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 130,
          column: 21
        }
      },
      "52": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 21
        }
      },
      "53": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "54": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "55": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 134,
          column: 22
        }
      },
      "56": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 22
        }
      },
      "57": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 136,
          column: 24
        }
      },
      "58": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 24
        }
      },
      "59": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 20
        }
      },
      "60": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "61": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 54
        }
      },
      "62": {
        start: {
          line: 145,
          column: 26
        },
        end: {
          line: 145,
          column: 57
        }
      },
      "63": {
        start: {
          line: 146,
          column: 25
        },
        end: {
          line: 146,
          column: 43
        }
      },
      "64": {
        start: {
          line: 147,
          column: 42
        },
        end: {
          line: 164,
          column: 14
        }
      },
      "65": {
        start: {
          line: 165,
          column: 42
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "66": {
        start: {
          line: 165,
          column: 68
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "67": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "68": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 82
        }
      },
      "69": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 188,
          column: 15
        }
      },
      "70": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "71": {
        start: {
          line: 196,
          column: 34
        },
        end: {
          line: 196,
          column: 44
        }
      },
      "72": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "73": {
        start: {
          line: 198,
          column: 71
        },
        end: {
          line: 212,
          column: 14
        }
      },
      "74": {
        start: {
          line: 214,
          column: 32
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "75": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 239,
          column: 15
        }
      },
      "76": {
        start: {
          line: 233,
          column: 63
        },
        end: {
          line: 237,
          column: 21
        }
      },
      "77": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 73
        }
      },
      "78": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "79": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "80": {
        start: {
          line: 254,
          column: 61
        },
        end: {
          line: 254,
          column: 69
        }
      },
      "81": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "82": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 259,
          column: 19
        }
      },
      "83": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 23
        }
      },
      "84": {
        start: {
          line: 262,
          column: 27
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "85": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 263,
          column: 25
        }
      },
      "86": {
        start: {
          line: 264,
          column: 28
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "87": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "88": {
        start: {
          line: 267,
          column: 20
        },
        end: {
          line: 267,
          column: 43
        }
      },
      "89": {
        start: {
          line: 268,
          column: 20
        },
        end: {
          line: 268,
          column: 59
        }
      },
      "90": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 26
        }
      },
      "91": {
        start: {
          line: 271,
          column: 33
        },
        end: {
          line: 271,
          column: 46
        }
      },
      "92": {
        start: {
          line: 272,
          column: 33
        },
        end: {
          line: 272,
          column: 46
        }
      },
      "93": {
        start: {
          line: 273,
          column: 32
        },
        end: {
          line: 273,
          column: 48
        }
      },
      "94": {
        start: {
          line: 274,
          column: 35
        },
        end: {
          line: 274,
          column: 49
        }
      },
      "95": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 55
        }
      },
      "96": {
        start: {
          line: 276,
          column: 20
        },
        end: {
          line: 276,
          column: 60
        }
      },
      "97": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 26
        }
      },
      "98": {
        start: {
          line: 279,
          column: 37
        },
        end: {
          line: 279,
          column: 50
        }
      },
      "99": {
        start: {
          line: 280,
          column: 37
        },
        end: {
          line: 280,
          column: 50
        }
      },
      "100": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 52
        }
      },
      "101": {
        start: {
          line: 282,
          column: 39
        },
        end: {
          line: 282,
          column: 54
        }
      },
      "102": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 71
        }
      },
      "103": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 101
        }
      },
      "104": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 26
        }
      },
      "105": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 42
        }
      },
      "106": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "107": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "108": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 77
        }
      },
      "109": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 309,
          column: 15
        }
      },
      "110": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "111": {
        start: {
          line: 317,
          column: 52
        },
        end: {
          line: 317,
          column: 60
        }
      },
      "112": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "113": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 322,
          column: 19
        }
      },
      "114": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 23
        }
      },
      "115": {
        start: {
          line: 325,
          column: 34
        },
        end: {
          line: 325,
          column: 48
        }
      },
      "116": {
        start: {
          line: 326,
          column: 32
        },
        end: {
          line: 326,
          column: 54
        }
      },
      "117": {
        start: {
          line: 327,
          column: 34
        },
        end: {
          line: 327,
          column: 65
        }
      },
      "118": {
        start: {
          line: 329,
          column: 25
        },
        end: {
          line: 329,
          column: 43
        }
      },
      "119": {
        start: {
          line: 330,
          column: 25
        },
        end: {
          line: 330,
          column: 43
        }
      },
      "120": {
        start: {
          line: 331,
          column: 24
        },
        end: {
          line: 331,
          column: 42
        }
      },
      "121": {
        start: {
          line: 332,
          column: 36
        },
        end: {
          line: 332,
          column: 55
        }
      },
      "122": {
        start: {
          line: 333,
          column: 26
        },
        end: {
          line: 333,
          column: 45
        }
      },
      "123": {
        start: {
          line: 334,
          column: 27
        },
        end: {
          line: 334,
          column: 46
        }
      },
      "124": {
        start: {
          line: 335,
          column: 25
        },
        end: {
          line: 335,
          column: 44
        }
      },
      "125": {
        start: {
          line: 336,
          column: 26
        },
        end: {
          line: 336,
          column: 44
        }
      },
      "126": {
        start: {
          line: 337,
          column: 34
        },
        end: {
          line: 337,
          column: 101
        }
      },
      "127": {
        start: {
          line: 338,
          column: 30
        },
        end: {
          line: 338,
          column: 73
        }
      },
      "128": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 360,
          column: 15
        }
      },
      "129": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 84
        }
      },
      "130": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 367,
          column: 15
        }
      },
      "131": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "132": {
        start: {
          line: 375,
          column: 56
        },
        end: {
          line: 375,
          column: 64
        }
      },
      "133": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 382,
          column: 13
        }
      },
      "134": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 380,
          column: 19
        }
      },
      "135": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 23
        }
      },
      "136": {
        start: {
          line: 383,
          column: 34
        },
        end: {
          line: 383,
          column: 62
        }
      },
      "137": {
        start: {
          line: 384,
          column: 27
        },
        end: {
          line: 384,
          column: 28
        }
      },
      "138": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 385,
          column: 27
        }
      },
      "139": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "140": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 28
        }
      },
      "141": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 400,
          column: 36
        }
      },
      "142": {
        start: {
          line: 390,
          column: 20
        },
        end: {
          line: 390,
          column: 35
        }
      },
      "143": {
        start: {
          line: 391,
          column: 21
        },
        end: {
          line: 400,
          column: 36
        }
      },
      "144": {
        start: {
          line: 392,
          column: 20
        },
        end: {
          line: 392,
          column: 35
        }
      },
      "145": {
        start: {
          line: 393,
          column: 21
        },
        end: {
          line: 400,
          column: 36
        }
      },
      "146": {
        start: {
          line: 394,
          column: 20
        },
        end: {
          line: 394,
          column: 35
        }
      },
      "147": {
        start: {
          line: 395,
          column: 21
        },
        end: {
          line: 400,
          column: 36
        }
      },
      "148": {
        start: {
          line: 396,
          column: 20
        },
        end: {
          line: 396,
          column: 36
        }
      },
      "149": {
        start: {
          line: 397,
          column: 21
        },
        end: {
          line: 400,
          column: 36
        }
      },
      "150": {
        start: {
          line: 398,
          column: 20
        },
        end: {
          line: 398,
          column: 36
        }
      },
      "151": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 400,
          column: 36
        }
      },
      "152": {
        start: {
          line: 402,
          column: 17
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "153": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 29
        }
      },
      "154": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 415,
          column: 36
        }
      },
      "155": {
        start: {
          line: 405,
          column: 20
        },
        end: {
          line: 405,
          column: 35
        }
      },
      "156": {
        start: {
          line: 406,
          column: 21
        },
        end: {
          line: 415,
          column: 36
        }
      },
      "157": {
        start: {
          line: 407,
          column: 20
        },
        end: {
          line: 407,
          column: 35
        }
      },
      "158": {
        start: {
          line: 408,
          column: 21
        },
        end: {
          line: 415,
          column: 36
        }
      },
      "159": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 409,
          column: 36
        }
      },
      "160": {
        start: {
          line: 410,
          column: 21
        },
        end: {
          line: 415,
          column: 36
        }
      },
      "161": {
        start: {
          line: 411,
          column: 20
        },
        end: {
          line: 411,
          column: 36
        }
      },
      "162": {
        start: {
          line: 412,
          column: 21
        },
        end: {
          line: 415,
          column: 36
        }
      },
      "163": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 36
        }
      },
      "164": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 415,
          column: 36
        }
      },
      "165": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 30
        }
      },
      "166": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "167": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 35
        }
      },
      "168": {
        start: {
          line: 421,
          column: 21
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "169": {
        start: {
          line: 422,
          column: 20
        },
        end: {
          line: 422,
          column: 36
        }
      },
      "170": {
        start: {
          line: 423,
          column: 21
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "171": {
        start: {
          line: 424,
          column: 20
        },
        end: {
          line: 424,
          column: 36
        }
      },
      "172": {
        start: {
          line: 425,
          column: 21
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "173": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 426,
          column: 36
        }
      },
      "174": {
        start: {
          line: 427,
          column: 21
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "175": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 428,
          column: 36
        }
      },
      "176": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "177": {
        start: {
          line: 432,
          column: 24
        },
        end: {
          line: 432,
          column: 50
        }
      },
      "178": {
        start: {
          line: 433,
          column: 31
        },
        end: {
          line: 433,
          column: 44
        }
      },
      "179": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 447,
          column: 15
        }
      },
      "180": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 79
        }
      },
      "181": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 454,
          column: 15
        }
      },
      "182": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 539,
          column: 9
        }
      },
      "183": {
        start: {
          line: 462,
          column: 66
        },
        end: {
          line: 462,
          column: 74
        }
      },
      "184": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 469,
          column: 13
        }
      },
      "185": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 467,
          column: 19
        }
      },
      "186": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 23
        }
      },
      "187": {
        start: {
          line: 470,
          column: 24
        },
        end: {
          line: 470,
          column: 34
        }
      },
      "188": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "189": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 490,
          column: 17
        }
      },
      "190": {
        start: {
          line: 475,
          column: 24
        },
        end: {
          line: 475,
          column: 34
        }
      },
      "191": {
        start: {
          line: 476,
          column: 24
        },
        end: {
          line: 476,
          column: 30
        }
      },
      "192": {
        start: {
          line: 478,
          column: 24
        },
        end: {
          line: 478,
          column: 35
        }
      },
      "193": {
        start: {
          line: 479,
          column: 24
        },
        end: {
          line: 479,
          column: 30
        }
      },
      "194": {
        start: {
          line: 481,
          column: 24
        },
        end: {
          line: 481,
          column: 35
        }
      },
      "195": {
        start: {
          line: 482,
          column: 24
        },
        end: {
          line: 482,
          column: 30
        }
      },
      "196": {
        start: {
          line: 484,
          column: 24
        },
        end: {
          line: 484,
          column: 35
        }
      },
      "197": {
        start: {
          line: 485,
          column: 24
        },
        end: {
          line: 485,
          column: 30
        }
      },
      "198": {
        start: {
          line: 487,
          column: 24
        },
        end: {
          line: 487,
          column: 34
        }
      },
      "199": {
        start: {
          line: 488,
          column: 24
        },
        end: {
          line: 488,
          column: 30
        }
      },
      "200": {
        start: {
          line: 489,
          column: 29
        },
        end: {
          line: 489,
          column: 40
        }
      },
      "201": {
        start: {
          line: 492,
          column: 37
        },
        end: {
          line: 492,
          column: 38
        }
      },
      "202": {
        start: {
          line: 493,
          column: 38
        },
        end: {
          line: 493,
          column: 39
        }
      },
      "203": {
        start: {
          line: 494,
          column: 27
        },
        end: {
          line: 494,
          column: 29
        }
      },
      "204": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 505,
          column: 13
        }
      },
      "205": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 62
        }
      },
      "206": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 62
        }
      },
      "207": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 45
        }
      },
      "208": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 503,
          column: 56
        }
      },
      "209": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 504,
          column: 62
        }
      },
      "210": {
        start: {
          line: 507,
          column: 33
        },
        end: {
          line: 507,
          column: 43
        }
      },
      "211": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 517,
          column: 13
        }
      },
      "212": {
        start: {
          line: 508,
          column: 28
        },
        end: {
          line: 508,
          column: 29
        }
      },
      "213": {
        start: {
          line: 509,
          column: 41
        },
        end: {
          line: 509,
          column: 85
        }
      },
      "214": {
        start: {
          line: 510,
          column: 16
        },
        end: {
          line: 510,
          column: 51
        }
      },
      "215": {
        start: {
          line: 511,
          column: 16
        },
        end: {
          line: 516,
          column: 19
        }
      },
      "216": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 531,
          column: 15
        }
      },
      "217": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 77
        }
      },
      "218": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 538,
          column: 15
        }
      },
      "219": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 631,
          column: 9
        }
      },
      "220": {
        start: {
          line: 546,
          column: 62
        },
        end: {
          line: 546,
          column: 70
        }
      },
      "221": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 553,
          column: 13
        }
      },
      "222": {
        start: {
          line: 548,
          column: 16
        },
        end: {
          line: 551,
          column: 19
        }
      },
      "223": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 552,
          column: 23
        }
      },
      "224": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 560,
          column: 13
        }
      },
      "225": {
        start: {
          line: 555,
          column: 16
        },
        end: {
          line: 558,
          column: 19
        }
      },
      "226": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 23
        }
      },
      "227": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 567,
          column: 13
        }
      },
      "228": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 565,
          column: 19
        }
      },
      "229": {
        start: {
          line: 566,
          column: 16
        },
        end: {
          line: 566,
          column: 23
        }
      },
      "230": {
        start: {
          line: 568,
          column: 32
        },
        end: {
          line: 568,
          column: 55
        }
      },
      "231": {
        start: {
          line: 569,
          column: 33
        },
        end: {
          line: 569,
          column: 34
        }
      },
      "232": {
        start: {
          line: 570,
          column: 32
        },
        end: {
          line: 570,
          column: 33
        }
      },
      "233": {
        start: {
          line: 571,
          column: 27
        },
        end: {
          line: 571,
          column: 29
        }
      },
      "234": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 608,
          column: 13
        }
      },
      "235": {
        start: {
          line: 574,
          column: 37
        },
        end: {
          line: 574,
          column: 55
        }
      },
      "236": {
        start: {
          line: 575,
          column: 30
        },
        end: {
          line: 575,
          column: 39
        }
      },
      "237": {
        start: {
          line: 576,
          column: 16
        },
        end: {
          line: 588,
          column: 17
        }
      },
      "238": {
        start: {
          line: 576,
          column: 33
        },
        end: {
          line: 576,
          column: 34
        }
      },
      "239": {
        start: {
          line: 577,
          column: 37
        },
        end: {
          line: 577,
          column: 58
        }
      },
      "240": {
        start: {
          line: 578,
          column: 36
        },
        end: {
          line: 578,
          column: 59
        }
      },
      "241": {
        start: {
          line: 579,
          column: 20
        },
        end: {
          line: 579,
          column: 44
        }
      },
      "242": {
        start: {
          line: 580,
          column: 20
        },
        end: {
          line: 580,
          column: 46
        }
      },
      "243": {
        start: {
          line: 581,
          column: 20
        },
        end: {
          line: 587,
          column: 23
        }
      },
      "244": {
        start: {
          line: 589,
          column: 16
        },
        end: {
          line: 589,
          column: 59
        }
      },
      "245": {
        start: {
          line: 593,
          column: 16
        },
        end: {
          line: 593,
          column: 137
        }
      },
      "246": {
        start: {
          line: 594,
          column: 30
        },
        end: {
          line: 594,
          column: 39
        }
      },
      "247": {
        start: {
          line: 595,
          column: 16
        },
        end: {
          line: 607,
          column: 17
        }
      },
      "248": {
        start: {
          line: 595,
          column: 33
        },
        end: {
          line: 595,
          column: 34
        }
      },
      "249": {
        start: {
          line: 596,
          column: 37
        },
        end: {
          line: 596,
          column: 58
        }
      },
      "250": {
        start: {
          line: 597,
          column: 45
        },
        end: {
          line: 597,
          column: 70
        }
      },
      "251": {
        start: {
          line: 598,
          column: 20
        },
        end: {
          line: 598,
          column: 48
        }
      },
      "252": {
        start: {
          line: 599,
          column: 20
        },
        end: {
          line: 599,
          column: 46
        }
      },
      "253": {
        start: {
          line: 600,
          column: 20
        },
        end: {
          line: 606,
          column: 23
        }
      },
      "254": {
        start: {
          line: 609,
          column: 32
        },
        end: {
          line: 609,
          column: 57
        }
      },
      "255": {
        start: {
          line: 610,
          column: 12
        },
        end: {
          line: 623,
          column: 15
        }
      },
      "256": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 79
        }
      },
      "257": {
        start: {
          line: 627,
          column: 12
        },
        end: {
          line: 630,
          column: 15
        }
      },
      "258": {
        start: {
          line: 634,
          column: 0
        },
        end: {
          line: 634,
          column: 52
        }
      },
      "259": {
        start: {
          line: 636,
          column: 0
        },
        end: {
          line: 636,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 128
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 42
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 142
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 165,
            column: 59
          },
          end: {
            line: 165,
            column: 60
          }
        },
        loc: {
          start: {
            line: 165,
            column: 68
          },
          end: {
            line: 168,
            column: 13
          }
        },
        line: 165
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 45
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 194
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 233,
            column: 54
          },
          end: {
            line: 233,
            column: 55
          }
        },
        loc: {
          start: {
            line: 233,
            column: 63
          },
          end: {
            line: 237,
            column: 21
          }
        },
        line: 233
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 40
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 252
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 37
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 315
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 45
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 373
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        loc: {
          start: {
            line: 460,
            column: 42
          },
          end: {
            line: 540,
            column: 5
          }
        },
        line: 460
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 544,
            column: 4
          },
          end: {
            line: 544,
            column: 5
          }
        },
        loc: {
          start: {
            line: 544,
            column: 34
          },
          end: {
            line: 632,
            column: 5
          }
        },
        line: 544
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 49
          },
          end: {
            line: 19,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 62
          },
          end: {
            line: 19,
            column: 63
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 65
          },
          end: {
            line: 19,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 83
          },
          end: {
            line: 19,
            column: 84
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 86
          },
          end: {
            line: 19,
            column: 107
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 106
          },
          end: {
            line: 19,
            column: 107
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 109
          },
          end: {
            line: 19,
            column: 133
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 132
          },
          end: {
            line: 19,
            column: 133
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "8": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 26
          }
        }, {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 21,
            column: 44
          }
        }],
        line: 21
      },
      "9": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "10": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 30
          }
        }, {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 48
          }
        }],
        line: 28
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 53,
            column: 17
          }
        }],
        line: 48
      },
      "15": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 59
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 62
      },
      "17": {
        loc: {
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 68,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 65
      },
      "18": {
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 77,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 47
          },
          end: {
            line: 77,
            column: 72
          }
        }, {
          start: {
            line: 77,
            column: 75
          },
          end: {
            line: 77,
            column: 76
          }
        }],
        line: 77
      },
      "19": {
        loc: {
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 41
          }
        }, {
          start: {
            line: 103,
            column: 45
          },
          end: {
            line: 103,
            column: 54
          }
        }],
        line: 103
      },
      "20": {
        loc: {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 56
          }
        }, {
          start: {
            line: 104,
            column: 60
          },
          end: {
            line: 104,
            column: 69
          }
        }],
        line: 104
      },
      "21": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 130,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 130,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "22": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 132,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 132,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "23": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 134,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 134,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "24": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 136,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 136,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "25": {
        loc: {
          start: {
            line: 144,
            column: 25
          },
          end: {
            line: 144,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 25
          },
          end: {
            line: 144,
            column: 49
          }
        }, {
          start: {
            line: 144,
            column: 53
          },
          end: {
            line: 144,
            column: 54
          }
        }],
        line: 144
      },
      "26": {
        loc: {
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 51
          }
        }, {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 57
          }
        }],
        line: 145
      },
      "27": {
        loc: {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 232,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 232,
            column: 56
          }
        }, {
          start: {
            line: 232,
            column: 60
          },
          end: {
            line: 232,
            column: 61
          }
        }],
        line: 232
      },
      "28": {
        loc: {
          start: {
            line: 236,
            column: 39
          },
          end: {
            line: 236,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 39
          },
          end: {
            line: 236,
            column: 55
          }
        }, {
          start: {
            line: 236,
            column: 59
          },
          end: {
            line: 236,
            column: 60
          }
        }],
        line: 236
      },
      "29": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "30": {
        loc: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 24
          }
        }, {
          start: {
            line: 255,
            column: 28
          },
          end: {
            line: 255,
            column: 39
          }
        }],
        line: 255
      },
      "31": {
        loc: {
          start: {
            line: 262,
            column: 38
          },
          end: {
            line: 262,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 38
          },
          end: {
            line: 262,
            column: 46
          }
        }, {
          start: {
            line: 262,
            column: 50
          },
          end: {
            line: 262,
            column: 51
          }
        }],
        line: 262
      },
      "32": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 289,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 269,
            column: 26
          }
        }, {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 277,
            column: 26
          }
        }, {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 285,
            column: 26
          }
        }, {
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 288,
            column: 52
          }
        }],
        line: 265
      },
      "33": {
        loc: {
          start: {
            line: 295,
            column: 30
          },
          end: {
            line: 295,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 30
          },
          end: {
            line: 295,
            column: 38
          }
        }, {
          start: {
            line: 295,
            column: 42
          },
          end: {
            line: 295,
            column: 43
          }
        }],
        line: 295
      },
      "34": {
        loc: {
          start: {
            line: 299,
            column: 35
          },
          end: {
            line: 299,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 49
          },
          end: {
            line: 299,
            column: 72
          }
        }, {
          start: {
            line: 299,
            column: 75
          },
          end: {
            line: 299,
            column: 76
          }
        }],
        line: 299
      },
      "35": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "36": {
        loc: {
          start: {
            line: 318,
            column: 16
          },
          end: {
            line: 318,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 16
          },
          end: {
            line: 318,
            column: 23
          }
        }, {
          start: {
            line: 318,
            column: 27
          },
          end: {
            line: 318,
            column: 37
          }
        }],
        line: 318
      },
      "37": {
        loc: {
          start: {
            line: 325,
            column: 34
          },
          end: {
            line: 325,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 34
          },
          end: {
            line: 325,
            column: 43
          }
        }, {
          start: {
            line: 325,
            column: 47
          },
          end: {
            line: 325,
            column: 48
          }
        }],
        line: 325
      },
      "38": {
        loc: {
          start: {
            line: 327,
            column: 35
          },
          end: {
            line: 327,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 35
          },
          end: {
            line: 327,
            column: 43
          }
        }, {
          start: {
            line: 327,
            column: 47
          },
          end: {
            line: 327,
            column: 48
          }
        }],
        line: 327
      },
      "39": {
        loc: {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 382,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 382,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "40": {
        loc: {
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 376,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 376,
            column: 24
          }
        }, {
          start: {
            line: 376,
            column: 28
          },
          end: {
            line: 376,
            column: 39
          }
        }],
        line: 376
      },
      "41": {
        loc: {
          start: {
            line: 383,
            column: 34
          },
          end: {
            line: 383,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 34
          },
          end: {
            line: 383,
            column: 46
          }
        }, {
          start: {
            line: 383,
            column: 50
          },
          end: {
            line: 383,
            column: 62
          }
        }],
        line: 383
      },
      "42": {
        loc: {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        }, {
          start: {
            line: 402,
            column: 17
          },
          end: {
            line: 431,
            column: 13
          }
        }],
        line: 387
      },
      "43": {
        loc: {
          start: {
            line: 389,
            column: 16
          },
          end: {
            line: 400,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 16
          },
          end: {
            line: 400,
            column: 36
          }
        }, {
          start: {
            line: 391,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }],
        line: 389
      },
      "44": {
        loc: {
          start: {
            line: 391,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }, {
          start: {
            line: 393,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }],
        line: 391
      },
      "45": {
        loc: {
          start: {
            line: 393,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }, {
          start: {
            line: 395,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }],
        line: 393
      },
      "46": {
        loc: {
          start: {
            line: 395,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }, {
          start: {
            line: 397,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }],
        line: 395
      },
      "47": {
        loc: {
          start: {
            line: 397,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 21
          },
          end: {
            line: 400,
            column: 36
          }
        }, {
          start: {
            line: 400,
            column: 20
          },
          end: {
            line: 400,
            column: 36
          }
        }],
        line: 397
      },
      "48": {
        loc: {
          start: {
            line: 402,
            column: 17
          },
          end: {
            line: 431,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 17
          },
          end: {
            line: 431,
            column: 13
          }
        }, {
          start: {
            line: 417,
            column: 17
          },
          end: {
            line: 431,
            column: 13
          }
        }],
        line: 402
      },
      "49": {
        loc: {
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 415,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 415,
            column: 36
          }
        }, {
          start: {
            line: 406,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }],
        line: 404
      },
      "50": {
        loc: {
          start: {
            line: 406,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }, {
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }],
        line: 406
      },
      "51": {
        loc: {
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }, {
          start: {
            line: 410,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }],
        line: 408
      },
      "52": {
        loc: {
          start: {
            line: 410,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }, {
          start: {
            line: 412,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }],
        line: 410
      },
      "53": {
        loc: {
          start: {
            line: 412,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 21
          },
          end: {
            line: 415,
            column: 36
          }
        }, {
          start: {
            line: 415,
            column: 20
          },
          end: {
            line: 415,
            column: 36
          }
        }],
        line: 412
      },
      "54": {
        loc: {
          start: {
            line: 419,
            column: 16
          },
          end: {
            line: 430,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 16
          },
          end: {
            line: 430,
            column: 36
          }
        }, {
          start: {
            line: 421,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }],
        line: 419
      },
      "55": {
        loc: {
          start: {
            line: 421,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }, {
          start: {
            line: 423,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }],
        line: 421
      },
      "56": {
        loc: {
          start: {
            line: 423,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }, {
          start: {
            line: 425,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }],
        line: 423
      },
      "57": {
        loc: {
          start: {
            line: 425,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }, {
          start: {
            line: 427,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }],
        line: 425
      },
      "58": {
        loc: {
          start: {
            line: 427,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 21
          },
          end: {
            line: 430,
            column: 36
          }
        }, {
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 430,
            column: 36
          }
        }],
        line: 427
      },
      "59": {
        loc: {
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "60": {
        loc: {
          start: {
            line: 463,
            column: 16
          },
          end: {
            line: 463,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 463,
            column: 16
          },
          end: {
            line: 463,
            column: 27
          }
        }, {
          start: {
            line: 463,
            column: 31
          },
          end: {
            line: 463,
            column: 45
          }
        }],
        line: 463
      },
      "61": {
        loc: {
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "62": {
        loc: {
          start: {
            line: 473,
            column: 16
          },
          end: {
            line: 490,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 474,
            column: 20
          },
          end: {
            line: 476,
            column: 30
          }
        }, {
          start: {
            line: 477,
            column: 20
          },
          end: {
            line: 479,
            column: 30
          }
        }, {
          start: {
            line: 480,
            column: 20
          },
          end: {
            line: 482,
            column: 30
          }
        }, {
          start: {
            line: 483,
            column: 20
          },
          end: {
            line: 485,
            column: 30
          }
        }, {
          start: {
            line: 486,
            column: 20
          },
          end: {
            line: 488,
            column: 30
          }
        }, {
          start: {
            line: 489,
            column: 20
          },
          end: {
            line: 489,
            column: 40
          }
        }],
        line: 473
      },
      "63": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 505,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 505,
            column: 13
          }
        }, {
          start: {
            line: 501,
            column: 17
          },
          end: {
            line: 505,
            column: 13
          }
        }],
        line: 495
      },
      "64": {
        loc: {
          start: {
            line: 525,
            column: 28
          },
          end: {
            line: 525,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 28
          },
          end: {
            line: 525,
            column: 34
          }
        }, {
          start: {
            line: 525,
            column: 38
          },
          end: {
            line: 525,
            column: 46
          }
        }],
        line: 525
      },
      "65": {
        loc: {
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 553,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 553,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 547
      },
      "66": {
        loc: {
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 26
          }
        }, {
          start: {
            line: 547,
            column: 30
          },
          end: {
            line: 547,
            column: 44
          }
        }],
        line: 547
      },
      "67": {
        loc: {
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "68": {
        loc: {
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 554,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 554,
            column: 29
          }
        }, {
          start: {
            line: 554,
            column: 33
          },
          end: {
            line: 554,
            column: 49
          }
        }],
        line: 554
      },
      "69": {
        loc: {
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 567,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 567,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 561
      },
      "70": {
        loc: {
          start: {
            line: 561,
            column: 16
          },
          end: {
            line: 561,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 561,
            column: 16
          },
          end: {
            line: 561,
            column: 23
          }
        }, {
          start: {
            line: 561,
            column: 27
          },
          end: {
            line: 561,
            column: 38
          }
        }],
        line: 561
      },
      "71": {
        loc: {
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        }, {
          start: {
            line: 591,
            column: 17
          },
          end: {
            line: 608,
            column: 13
          }
        }],
        line: 572
      },
      "72": {
        loc: {
          start: {
            line: 589,
            column: 33
          },
          end: {
            line: 589,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 589,
            column: 33
          },
          end: {
            line: 589,
            column: 53
          }
        }, {
          start: {
            line: 589,
            column: 57
          },
          end: {
            line: 589,
            column: 58
          }
        }],
        line: 589
      },
      "73": {
        loc: {
          start: {
            line: 617,
            column: 26
          },
          end: {
            line: 617,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 617,
            column: 26
          },
          end: {
            line: 617,
            column: 30
          }
        }, {
          start: {
            line: 617,
            column: 34
          },
          end: {
            line: 617,
            column: 41
          }
        }],
        line: 617
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0, 0, 0, 0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0]
    },
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\calculatorController.ts",
      mappings: "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",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\calculatorController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\nimport { PrismaClient } from '@prisma/client';\nimport logger from '../utils/logger';\n\nconst prisma = new PrismaClient();\n\n// Interface para dados de c\xE1lculo fiscal\ninterface TaxCalculationRequest {\n  income: number;\n  deductions: number;\n  taxYear: number;\n  dependents?: number;\n  medicalExpenses?: number;\n  educationExpenses?: number;\n  pensionContributions?: number;\n}\n\ninterface TaxCalculationResult {\n  grossIncome: number;\n  taxableIncome: number;\n  incomeTax: number;\n  socialSecurity: number;\n  totalTax: number;\n  netIncome: number;\n  effectiveRate: number;\n  marginalRate: number;\n  breakdown: {\n    federalTax: number;\n    stateTax: number;\n    municipalTax: number;\n  };\n}\n\n/**\n * Controller respons\xE1vel pelos c\xE1lculos fiscais\n */\nexport class CalculatorController {\n  /**\n   * Calcula impostos com base nos dados fornecidos\n   */\n  async calculateTaxes(req: Request, res: Response): Promise<void> {\n    try {\n      const {\n        income,\n        deductions,\n        taxYear,\n        dependents = 0,\n        medicalExpenses = 0,\n        educationExpenses = 0,\n        pensionContributions = 0\n      }: TaxCalculationRequest = req.body;\n\n      // Valida\xE7\xF5es b\xE1sicas\n      if (income < 0 || deductions < 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Renda e dedu\xE7\xF5es devem ser valores positivos'\n        });\n        return;\n      }\n\n      if (taxYear < 2020 || taxYear > 2030) {\n        res.status(400).json({\n          success: false,\n          message: 'Ano fiscal deve estar entre 2020 e 2030'\n        });\n        return;\n      }\n\n      // C\xE1lculo da renda tribut\xE1vel\n      const totalDeductions = deductions + medicalExpenses + educationExpenses + pensionContributions;\n      const dependentDeduction = dependents * 2275.08; // Valor para 2024\n      const taxableIncome = Math.max(0, income - totalDeductions - dependentDeduction);\n\n      // C\xE1lculo do Imposto de Renda (tabela progressiva 2024)\n      let incomeTax = 0;\n      if (taxableIncome > 22847.76) {\n        if (taxableIncome <= 33919.80) {\n          incomeTax = (taxableIncome - 22847.76) * 0.075;\n        } else if (taxableIncome <= 45012.60) {\n          incomeTax = (33919.80 - 22847.76) * 0.075 + (taxableIncome - 33919.80) * 0.15;\n        } else if (taxableIncome <= 55976.16) {\n          incomeTax = (33919.80 - 22847.76) * 0.075 + (45012.60 - 33919.80) * 0.15 + (taxableIncome - 45012.60) * 0.225;\n        } else {\n          incomeTax = (33919.80 - 22847.76) * 0.075 + (45012.60 - 33919.80) * 0.15 + (55976.16 - 45012.60) * 0.225 + (taxableIncome - 55976.16) * 0.275;\n        }\n      }\n\n      // C\xE1lculo da Previd\xEAncia Social (INSS)\n      let socialSecurity = 0;\n      const inssLimit = 7507.49; // Teto INSS 2024\n      const inssBase = Math.min(income, inssLimit);\n      \n      if (inssBase <= 1412.00) {\n        socialSecurity = inssBase * 0.075;\n      } else if (inssBase <= 2666.68) {\n        socialSecurity = 1412.00 * 0.075 + (inssBase - 1412.00) * 0.09;\n      } else if (inssBase <= 4000.03) {\n        socialSecurity = 1412.00 * 0.075 + (2666.68 - 1412.00) * 0.09 + (inssBase - 2666.68) * 0.12;\n      } else {\n        socialSecurity = 1412.00 * 0.075 + (2666.68 - 1412.00) * 0.09 + (4000.03 - 2666.68) * 0.12 + (inssBase - 4000.03) * 0.14;\n      }\n\n      // Estimativa de impostos estaduais e municipais (valores aproximados)\n      const stateTax = taxableIncome * 0.02; // ICMS estimado\n      const municipalTax = taxableIncome * 0.005; // ISS estimado\n      const federalTax = incomeTax;\n\n      const totalTax = incomeTax + socialSecurity + stateTax + municipalTax;\n      const netIncome = income - totalTax;\n      const effectiveRate = income > 0 ? (totalTax / income) * 100 : 0;\n      const marginalRate = this.calculateMarginalRate(taxableIncome);\n\n      const result: TaxCalculationResult = {\n        grossIncome: income,\n        taxableIncome,\n        incomeTax,\n        socialSecurity,\n        totalTax,\n        netIncome,\n        effectiveRate: Math.round(effectiveRate * 100) / 100,\n        marginalRate,\n        breakdown: {\n          federalTax,\n          stateTax,\n          municipalTax\n        }\n      };\n\n      // Salvar hist\xF3rico do c\xE1lculo\n      try {\n        await prisma.calculationHistory.create({\n          data: {\n            income,\n            deductions: totalDeductions,\n            taxYear,\n            dependents,\n            result: JSON.stringify(result),\n            ipAddress: req.ip || 'unknown',\n            userAgent: req.get('User-Agent') || 'unknown'\n          }\n        });\n      } catch (error) {\n        logger.warn('Erro ao salvar hist\xF3rico de c\xE1lculo:', error);\n      }\n\n      res.status(200).json({\n        success: true,\n        message: 'C\xE1lculo realizado com sucesso',\n        data: result\n      });\n\n    } catch (error) {\n      logger.error('Erro no c\xE1lculo de impostos:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Calcula a al\xEDquota marginal\n   */\n  private calculateMarginalRate(taxableIncome: number): number {\n    if (taxableIncome <= 22847.76) return 0;\n    if (taxableIncome <= 33919.80) return 7.5;\n    if (taxableIncome <= 45012.60) return 15;\n    if (taxableIncome <= 55976.16) return 22.5;\n    return 27.5;\n  }\n\n  /**\n   * Obt\xE9m hist\xF3rico de c\xE1lculos (Admin)\n   */\n  async getCalculationHistory(req: Request, res: Response): Promise<void> {\n    try {\n      const page = parseInt(req.query.page as string) || 1;\n      const limit = parseInt(req.query.limit as string) || 20;\n      const skip = (page - 1) * limit;\n\n      const [calculations, total] = await Promise.all([\n        prisma.calculationHistory.findMany({\n          skip,\n          take: limit,\n          orderBy: { createdAt: 'desc' },\n          select: {\n            id: true,\n            income: true,\n            deductions: true,\n            taxYear: true,\n            dependents: true,\n            result: true,\n            createdAt: true,\n            ipAddress: true\n          }\n        }),\n        prisma.calculationHistory.count()\n      ]);\n\n      const formattedCalculations = calculations.map(calc => ({\n        ...calc,\n        result: JSON.parse(calc.result as string)\n      }));\n\n      res.status(200).json({\n        success: true,\n        message: 'Hist\xF3rico obtido com sucesso',\n        data: {\n          calculations: formattedCalculations,\n          pagination: {\n            page,\n            limit,\n            total,\n            pages: Math.ceil(total / limit)\n          }\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro ao obter hist\xF3rico de c\xE1lculos:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Obt\xE9m estat\xEDsticas de c\xE1lculos (Admin)\n   */\n  async getCalculationStatistics(req: Request, res: Response): Promise<void> {\n    try {\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n      const [totalCalculations, recentCalculations, avgIncome] = await Promise.all([\n        prisma.calculationHistory.count(),\n        prisma.calculationHistory.count({\n          where: {\n            createdAt: {\n              gte: thirtyDaysAgo\n            }\n          }\n        }),\n        prisma.calculationHistory.aggregate({\n          _avg: {\n            income: true\n          }\n        })\n      ]);\n\n      // Estat\xEDsticas por ano fiscal\n      const yearlyStats = await prisma.calculationHistory.groupBy({\n        by: ['taxYear'],\n        _count: {\n          id: true\n        },\n        _avg: {\n          income: true\n        },\n        orderBy: {\n          taxYear: 'desc'\n        }\n      });\n\n      res.status(200).json({\n        success: true,\n        message: 'Estat\xEDsticas obtidas com sucesso',\n        data: {\n          totalCalculations,\n          recentCalculations,\n          averageIncome: avgIncome._avg.income || 0,\n          yearlyStatistics: yearlyStats.map(stat => ({\n            year: stat.taxYear,\n            calculations: stat._count.id,\n            averageIncome: stat._avg.income || 0\n          }))\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro ao obter estat\xEDsticas:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Calcula impostos para pessoa jur\xEDdica\n   */\n  async calculateCompanyTax(req: Request, res: Response): Promise<void> {\n    try {\n      const { revenue, expenses, regime, employees } = req.body;\n\n      if (!revenue || revenue < 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Receita deve ser um valor positivo'\n        });\n        return;\n      }\n\n      const profit = revenue - (expenses || 0);\n      let taxes = 0;\n      let breakdown = {};\n\n      switch (regime) {\n        case 'simples':\n          taxes = revenue * 0.06; // Aproxima\xE7\xE3o Simples Nacional\n          breakdown = { simplesNacional: taxes };\n          break;\n        case 'lucro_presumido':\n          const irpj = profit * 0.15;\n          const csll = profit * 0.09;\n          const pis = revenue * 0.0065;\n          const cofins = revenue * 0.03;\n          taxes = irpj + csll + pis + cofins;\n          breakdown = { irpj, csll, pis, cofins };\n          break;\n        case 'lucro_real':\n          const irpjReal = profit * 0.25;\n          const csllReal = profit * 0.09;\n          const pisReal = revenue * 0.0165;\n          const cofinsReal = revenue * 0.076;\n          taxes = irpjReal + csllReal + pisReal + cofinsReal;\n          breakdown = { irpj: irpjReal, csll: csllReal, pis: pisReal, cofins: cofinsReal };\n          break;\n        default:\n          taxes = profit * 0.15;\n          breakdown = { estimado: taxes };\n      }\n\n      res.status(200).json({\n        success: true,\n        message: 'C\xE1lculo de impostos PJ realizado com sucesso',\n        data: {\n          revenue,\n          expenses: expenses || 0,\n          profit,\n          taxes,\n          netProfit: profit - taxes,\n          effectiveRate: revenue > 0 ? (taxes / revenue) * 100 : 0,\n          breakdown\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro no c\xE1lculo de impostos PJ:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Calcula folha de pagamento\n   */\n  async calculatePayroll(req: Request, res: Response): Promise<void> {\n    try {\n      const { salary, benefits, employees } = req.body;\n\n      if (!salary || salary < 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Sal\xE1rio deve ser um valor positivo'\n        });\n        return;\n      }\n\n      const employeeCount = employees || 1;\n      const totalSalary = salary * employeeCount;\n      const totalBenefits = (benefits || 0) * employeeCount;\n      \n      // C\xE1lculos de encargos\n      const inss = totalSalary * 0.20; // INSS patronal\n      const fgts = totalSalary * 0.08;\n      const rat = totalSalary * 0.02; // Risco de Acidente de Trabalho\n      const salarioEducacao = totalSalary * 0.025;\n      const incra = totalSalary * 0.002;\n      const sebrae = totalSalary * 0.006;\n      const sesi = totalSalary * 0.015;\n      const senai = totalSalary * 0.01;\n      \n      const totalEncargos = inss + fgts + rat + salarioEducacao + incra + sebrae + sesi + senai;\n      const totalCost = totalSalary + totalBenefits + totalEncargos;\n\n      res.status(200).json({\n        success: true,\n        message: 'C\xE1lculo de folha de pagamento realizado com sucesso',\n        data: {\n          employees: employeeCount,\n          grossSalary: totalSalary,\n          benefits: totalBenefits,\n          encargos: {\n            inss,\n            fgts,\n            rat,\n            salarioEducacao,\n            incra,\n            sebrae,\n            sesi,\n            senai,\n            total: totalEncargos\n          },\n          totalCost,\n          costPerEmployee: totalCost / employeeCount\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro no c\xE1lculo de folha de pagamento:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Calcula Simples Nacional\n   */\n  async calculateSimplesNacional(req: Request, res: Response): Promise<void> {\n    try {\n      const { revenue, activity, last12Months } = req.body;\n\n      if (!revenue || revenue < 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Receita deve ser um valor positivo'\n        });\n        return;\n      }\n\n      const annualRevenue = last12Months || revenue * 12;\n      let aliquota = 0;\n      let anexo = 'I';\n\n      // Determinar anexo e al\xEDquota baseado na atividade e faturamento\n      if (activity === 'comercio') {\n        anexo = 'I';\n        if (annualRevenue <= 180000) aliquota = 4.0;\n        else if (annualRevenue <= 360000) aliquota = 7.3;\n        else if (annualRevenue <= 720000) aliquota = 9.5;\n        else if (annualRevenue <= 1800000) aliquota = 10.7;\n        else if (annualRevenue <= 3600000) aliquota = 14.3;\n        else aliquota = 19.0;\n      } else if (activity === 'industria') {\n        anexo = 'II';\n        if (annualRevenue <= 180000) aliquota = 4.5;\n        else if (annualRevenue <= 360000) aliquota = 7.8;\n        else if (annualRevenue <= 720000) aliquota = 10.0;\n        else if (annualRevenue <= 1800000) aliquota = 11.2;\n        else if (annualRevenue <= 3600000) aliquota = 14.7;\n        else aliquota = 30.0;\n      } else {\n        anexo = 'III';\n        if (annualRevenue <= 180000) aliquota = 6.0;\n        else if (annualRevenue <= 360000) aliquota = 11.2;\n        else if (annualRevenue <= 720000) aliquota = 13.5;\n        else if (annualRevenue <= 1800000) aliquota = 16.0;\n        else if (annualRevenue <= 3600000) aliquota = 21.0;\n        else aliquota = 33.0;\n      }\n\n      const tax = revenue * (aliquota / 100);\n      const netRevenue = revenue - tax;\n\n      res.status(200).json({\n        success: true,\n        message: 'C\xE1lculo Simples Nacional realizado com sucesso',\n        data: {\n          revenue,\n          annualRevenue,\n          activity,\n          anexo,\n          aliquota,\n          tax,\n          netRevenue,\n          effectiveRate: aliquota\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro no c\xE1lculo Simples Nacional:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Calcula deprecia\xE7\xE3o de ativos\n   */\n  async calculateDepreciation(req: Request, res: Response): Promise<void> {\n    try {\n      const { assetValue, assetType, usefulLife, method } = req.body;\n\n      if (!assetValue || assetValue < 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Valor do ativo deve ser positivo'\n        });\n        return;\n      }\n\n      let years = usefulLife;\n      if (!years) {\n        // Vida \xFAtil padr\xE3o por tipo de ativo\n        switch (assetType) {\n          case 'veiculo': years = 5; break;\n          case 'equipamento': years = 10; break;\n          case 'movel': years = 10; break;\n          case 'imovel': years = 25; break;\n          case 'computador': years = 5; break;\n          default: years = 10;\n        }\n      }\n\n      let annualDepreciation = 0;\n      let monthlyDepreciation = 0;\n      let schedule = [];\n\n      if (method === 'acelerada') {\n        // Deprecia\xE7\xE3o acelerada (dobro da taxa normal)\n        annualDepreciation = (assetValue / years) * 2;\n        monthlyDepreciation = annualDepreciation / 12;\n        years = Math.ceil(years / 2);\n      } else {\n        // Deprecia\xE7\xE3o linear (m\xE9todo padr\xE3o)\n        annualDepreciation = assetValue / years;\n        monthlyDepreciation = annualDepreciation / 12;\n      }\n\n      // Gerar cronograma de deprecia\xE7\xE3o\n      let remainingValue = assetValue;\n      for (let year = 1; year <= years; year++) {\n        const yearDepreciation = Math.min(annualDepreciation, remainingValue);\n        remainingValue -= yearDepreciation;\n        schedule.push({\n          year,\n          depreciation: yearDepreciation,\n          accumulatedDepreciation: assetValue - remainingValue,\n          remainingValue\n        });\n      }\n\n      res.status(200).json({\n        success: true,\n        message: 'C\xE1lculo de deprecia\xE7\xE3o realizado com sucesso',\n        data: {\n          assetValue,\n          assetType,\n          usefulLife: years,\n          method: method || 'linear',\n          annualDepreciation,\n          monthlyDepreciation,\n          totalDepreciation: assetValue,\n          schedule\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro no c\xE1lculo de deprecia\xE7\xE3o:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n\n  /**\n   * Calcula financiamento/empr\xE9stimo\n   */\n  async calculateLoan(req: Request, res: Response): Promise<void> {\n    try {\n      const { principal, interestRate, months, type } = req.body;\n\n      if (!principal || principal <= 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Valor principal deve ser positivo'\n        });\n        return;\n      }\n\n      if (!interestRate || interestRate < 0) {\n        res.status(400).json({\n          success: false,\n          message: 'Taxa de juros deve ser positiva'\n        });\n        return;\n      }\n\n      if (!months || months <= 0) {\n        res.status(400).json({\n          success: false,\n          message: 'N\xFAmero de parcelas deve ser positivo'\n        });\n        return;\n      }\n\n      const monthlyRate = interestRate / 100 / 12;\n      let monthlyPayment = 0;\n      let totalInterest = 0;\n      let schedule = [];\n\n      if (type === 'sac') {\n        // Sistema de Amortiza\xE7\xE3o Constante (SAC)\n        const amortization = principal / months;\n        let balance = principal;\n        \n        for (let month = 1; month <= months; month++) {\n          const interest = balance * monthlyRate;\n          const payment = amortization + interest;\n          balance -= amortization;\n          totalInterest += interest;\n          \n          schedule.push({\n            month,\n            payment: Math.round(payment * 100) / 100,\n            principal: Math.round(amortization * 100) / 100,\n            interest: Math.round(interest * 100) / 100,\n            balance: Math.round(balance * 100) / 100\n          });\n        }\n        \n        monthlyPayment = schedule[0]?.payment || 0;\n      } else {\n        // Sistema Price (parcelas fixas)\n        monthlyPayment = principal * (monthlyRate * Math.pow(1 + monthlyRate, months)) / (Math.pow(1 + monthlyRate, months) - 1);\n        let balance = principal;\n        \n        for (let month = 1; month <= months; month++) {\n          const interest = balance * monthlyRate;\n          const principalPayment = monthlyPayment - interest;\n          balance -= principalPayment;\n          totalInterest += interest;\n          \n          schedule.push({\n            month,\n            payment: Math.round(monthlyPayment * 100) / 100,\n            principal: Math.round(principalPayment * 100) / 100,\n            interest: Math.round(interest * 100) / 100,\n            balance: Math.round(Math.max(0, balance) * 100) / 100\n          });\n        }\n      }\n\n      const totalAmount = principal + totalInterest;\n\n      res.status(200).json({\n        success: true,\n        message: 'C\xE1lculo de financiamento realizado com sucesso',\n        data: {\n          principal,\n          interestRate,\n          months,\n          type: type || 'price',\n          monthlyPayment: Math.round(monthlyPayment * 100) / 100,\n          totalInterest: Math.round(totalInterest * 100) / 100,\n          totalAmount: Math.round(totalAmount * 100) / 100,\n          schedule\n        }\n      });\n\n    } catch (error) {\n      logger.error('Erro no c\xE1lculo de financiamento:', error);\n      res.status(500).json({\n        success: false,\n        message: 'Erro interno do servidor'\n      });\n    }\n  }\n}\n\n// Inst\xE2ncia do controller\nexport const calculatorController = new CalculatorController();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "570cd82b93581c8b757158e34c46cf1753f67e2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2i6ia6afi0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2i6ia6afi0();
var __importDefault =
/* istanbul ignore next */
(cov_2i6ia6afi0().s[0]++,
/* istanbul ignore next */
(cov_2i6ia6afi0().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2i6ia6afi0().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2i6ia6afi0().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2i6ia6afi0().f[0]++;
  cov_2i6ia6afi0().s[1]++;
  return /* istanbul ignore next */(cov_2i6ia6afi0().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2i6ia6afi0().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2i6ia6afi0().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2i6ia6afi0().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2i6ia6afi0().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2i6ia6afi0().s[3]++;
exports.calculatorController = exports.CalculatorController = void 0;
const client_1 =
/* istanbul ignore next */
(cov_2i6ia6afi0().s[4]++, require("@prisma/client"));
const logger_1 =
/* istanbul ignore next */
(cov_2i6ia6afi0().s[5]++, __importDefault(require("../utils/logger")));
const prisma =
/* istanbul ignore next */
(cov_2i6ia6afi0().s[6]++, new client_1.PrismaClient());
/**
 * Controller responsável pelos cálculos fiscais
 */
class CalculatorController {
  /**
   * Calcula impostos com base nos dados fornecidos
   */
  async calculateTaxes(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[1]++;
    cov_2i6ia6afi0().s[7]++;
    try {
      const {
        income,
        deductions,
        taxYear,
        dependents =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().b[3][0]++, 0),
        medicalExpenses =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().b[4][0]++, 0),
        educationExpenses =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().b[5][0]++, 0),
        pensionContributions =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().b[6][0]++, 0)
      } =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[8]++, req.body);
      // Validações básicas
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[9]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[8][0]++, income < 0) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[8][1]++, deductions < 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[7][0]++;
        cov_2i6ia6afi0().s[10]++;
        res.status(400).json({
          success: false,
          message: 'Renda e deduções devem ser valores positivos'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[11]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[7][1]++;
      }
      cov_2i6ia6afi0().s[12]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[10][0]++, taxYear < 2020) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[10][1]++, taxYear > 2030)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[9][0]++;
        cov_2i6ia6afi0().s[13]++;
        res.status(400).json({
          success: false,
          message: 'Ano fiscal deve estar entre 2020 e 2030'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[14]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[9][1]++;
      }
      // Cálculo da renda tributável
      const totalDeductions =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[15]++, deductions + medicalExpenses + educationExpenses + pensionContributions);
      const dependentDeduction =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[16]++, dependents * 2275.08); // Valor para 2024
      const taxableIncome =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[17]++, Math.max(0, income - totalDeductions - dependentDeduction));
      // Cálculo do Imposto de Renda (tabela progressiva 2024)
      let incomeTax =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[18]++, 0);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[19]++;
      if (taxableIncome > 22847.76) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[11][0]++;
        cov_2i6ia6afi0().s[20]++;
        if (taxableIncome <= 33919.80) {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[12][0]++;
          cov_2i6ia6afi0().s[21]++;
          incomeTax = (taxableIncome - 22847.76) * 0.075;
        } else {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[12][1]++;
          cov_2i6ia6afi0().s[22]++;
          if (taxableIncome <= 45012.60) {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[13][0]++;
            cov_2i6ia6afi0().s[23]++;
            incomeTax = (33919.80 - 22847.76) * 0.075 + (taxableIncome - 33919.80) * 0.15;
          } else {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[13][1]++;
            cov_2i6ia6afi0().s[24]++;
            if (taxableIncome <= 55976.16) {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[14][0]++;
              cov_2i6ia6afi0().s[25]++;
              incomeTax = (33919.80 - 22847.76) * 0.075 + (45012.60 - 33919.80) * 0.15 + (taxableIncome - 45012.60) * 0.225;
            } else {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[14][1]++;
              cov_2i6ia6afi0().s[26]++;
              incomeTax = (33919.80 - 22847.76) * 0.075 + (45012.60 - 33919.80) * 0.15 + (55976.16 - 45012.60) * 0.225 + (taxableIncome - 55976.16) * 0.275;
            }
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[11][1]++;
      }
      // Cálculo da Previdência Social (INSS)
      let socialSecurity =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[27]++, 0);
      const inssLimit =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[28]++, 7507.49); // Teto INSS 2024
      const inssBase =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[29]++, Math.min(income, inssLimit));
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[30]++;
      if (inssBase <= 1412.00) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[15][0]++;
        cov_2i6ia6afi0().s[31]++;
        socialSecurity = inssBase * 0.075;
      } else {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[15][1]++;
        cov_2i6ia6afi0().s[32]++;
        if (inssBase <= 2666.68) {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[16][0]++;
          cov_2i6ia6afi0().s[33]++;
          socialSecurity = 1412.00 * 0.075 + (inssBase - 1412.00) * 0.09;
        } else {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[16][1]++;
          cov_2i6ia6afi0().s[34]++;
          if (inssBase <= 4000.03) {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[17][0]++;
            cov_2i6ia6afi0().s[35]++;
            socialSecurity = 1412.00 * 0.075 + (2666.68 - 1412.00) * 0.09 + (inssBase - 2666.68) * 0.12;
          } else {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[17][1]++;
            cov_2i6ia6afi0().s[36]++;
            socialSecurity = 1412.00 * 0.075 + (2666.68 - 1412.00) * 0.09 + (4000.03 - 2666.68) * 0.12 + (inssBase - 4000.03) * 0.14;
          }
        }
      }
      // Estimativa de impostos estaduais e municipais (valores aproximados)
      const stateTax =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[37]++, taxableIncome * 0.02); // ICMS estimado
      const municipalTax =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[38]++, taxableIncome * 0.005); // ISS estimado
      const federalTax =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[39]++, incomeTax);
      const totalTax =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[40]++, incomeTax + socialSecurity + stateTax + municipalTax);
      const netIncome =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[41]++, income - totalTax);
      const effectiveRate =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[42]++, income > 0 ?
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[18][0]++, totalTax / income * 100) :
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[18][1]++, 0));
      const marginalRate =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[43]++, this.calculateMarginalRate(taxableIncome));
      const result =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[44]++, {
        grossIncome: income,
        taxableIncome,
        incomeTax,
        socialSecurity,
        totalTax,
        netIncome,
        effectiveRate: Math.round(effectiveRate * 100) / 100,
        marginalRate,
        breakdown: {
          federalTax,
          stateTax,
          municipalTax
        }
      });
      // Salvar histórico do cálculo
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[45]++;
      try {
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[46]++;
        await prisma.calculationHistory.create({
          data: {
            income,
            deductions: totalDeductions,
            taxYear,
            dependents,
            result: JSON.stringify(result),
            ipAddress:
            /* istanbul ignore next */
            (cov_2i6ia6afi0().b[19][0]++, req.ip) ||
            /* istanbul ignore next */
            (cov_2i6ia6afi0().b[19][1]++, 'unknown'),
            userAgent:
            /* istanbul ignore next */
            (cov_2i6ia6afi0().b[20][0]++, req.get('User-Agent')) ||
            /* istanbul ignore next */
            (cov_2i6ia6afi0().b[20][1]++, 'unknown')
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[47]++;
        logger_1.default.warn('Erro ao salvar histórico de cálculo:', error);
      }
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[48]++;
      res.status(200).json({
        success: true,
        message: 'Cálculo realizado com sucesso',
        data: result
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[49]++;
      logger_1.default.error('Erro no cálculo de impostos:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[50]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Calcula a alíquota marginal
   */
  calculateMarginalRate(taxableIncome) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[2]++;
    cov_2i6ia6afi0().s[51]++;
    if (taxableIncome <= 22847.76) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().b[21][0]++;
      cov_2i6ia6afi0().s[52]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2i6ia6afi0().b[21][1]++;
    }
    cov_2i6ia6afi0().s[53]++;
    if (taxableIncome <= 33919.80) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().b[22][0]++;
      cov_2i6ia6afi0().s[54]++;
      return 7.5;
    } else
    /* istanbul ignore next */
    {
      cov_2i6ia6afi0().b[22][1]++;
    }
    cov_2i6ia6afi0().s[55]++;
    if (taxableIncome <= 45012.60) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().b[23][0]++;
      cov_2i6ia6afi0().s[56]++;
      return 15;
    } else
    /* istanbul ignore next */
    {
      cov_2i6ia6afi0().b[23][1]++;
    }
    cov_2i6ia6afi0().s[57]++;
    if (taxableIncome <= 55976.16) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().b[24][0]++;
      cov_2i6ia6afi0().s[58]++;
      return 22.5;
    } else
    /* istanbul ignore next */
    {
      cov_2i6ia6afi0().b[24][1]++;
    }
    cov_2i6ia6afi0().s[59]++;
    return 27.5;
  }
  /**
   * Obtém histórico de cálculos (Admin)
   */
  async getCalculationHistory(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[3]++;
    cov_2i6ia6afi0().s[60]++;
    try {
      const page =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[61]++,
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[25][0]++, parseInt(req.query.page)) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[25][1]++, 1));
      const limit =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[62]++,
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[26][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[26][1]++, 20));
      const skip =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[63]++, (page - 1) * limit);
      const [calculations, total] =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[64]++, await Promise.all([prisma.calculationHistory.findMany({
        skip,
        take: limit,
        orderBy: {
          createdAt: 'desc'
        },
        select: {
          id: true,
          income: true,
          deductions: true,
          taxYear: true,
          dependents: true,
          result: true,
          createdAt: true,
          ipAddress: true
        }
      }), prisma.calculationHistory.count()]));
      const formattedCalculations =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[65]++, calculations.map(calc => {
        /* istanbul ignore next */
        cov_2i6ia6afi0().f[4]++;
        cov_2i6ia6afi0().s[66]++;
        return {
          ...calc,
          result: JSON.parse(calc.result)
        };
      }));
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[67]++;
      res.status(200).json({
        success: true,
        message: 'Histórico obtido com sucesso',
        data: {
          calculations: formattedCalculations,
          pagination: {
            page,
            limit,
            total,
            pages: Math.ceil(total / limit)
          }
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[68]++;
      logger_1.default.error('Erro ao obter histórico de cálculos:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[69]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Obtém estatísticas de cálculos (Admin)
   */
  async getCalculationStatistics(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[5]++;
    cov_2i6ia6afi0().s[70]++;
    try {
      const thirtyDaysAgo =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[71]++, new Date());
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[72]++;
      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
      const [totalCalculations, recentCalculations, avgIncome] =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[73]++, await Promise.all([prisma.calculationHistory.count(), prisma.calculationHistory.count({
        where: {
          createdAt: {
            gte: thirtyDaysAgo
          }
        }
      }), prisma.calculationHistory.aggregate({
        _avg: {
          income: true
        }
      })]));
      // Estatísticas por ano fiscal
      const yearlyStats =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[74]++, await prisma.calculationHistory.groupBy({
        by: ['taxYear'],
        _count: {
          id: true
        },
        _avg: {
          income: true
        },
        orderBy: {
          taxYear: 'desc'
        }
      }));
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[75]++;
      res.status(200).json({
        success: true,
        message: 'Estatísticas obtidas com sucesso',
        data: {
          totalCalculations,
          recentCalculations,
          averageIncome:
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[27][0]++, avgIncome._avg.income) ||
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[27][1]++, 0),
          yearlyStatistics: yearlyStats.map(stat => {
            /* istanbul ignore next */
            cov_2i6ia6afi0().f[6]++;
            cov_2i6ia6afi0().s[76]++;
            return {
              year: stat.taxYear,
              calculations: stat._count.id,
              averageIncome:
              /* istanbul ignore next */
              (cov_2i6ia6afi0().b[28][0]++, stat._avg.income) ||
              /* istanbul ignore next */
              (cov_2i6ia6afi0().b[28][1]++, 0)
            };
          })
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[77]++;
      logger_1.default.error('Erro ao obter estatísticas:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[78]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Calcula impostos para pessoa jurídica
   */
  async calculateCompanyTax(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[7]++;
    cov_2i6ia6afi0().s[79]++;
    try {
      const {
        revenue,
        expenses,
        regime,
        employees
      } =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[80]++, req.body);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[81]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[30][0]++, !revenue) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[30][1]++, revenue < 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[29][0]++;
        cov_2i6ia6afi0().s[82]++;
        res.status(400).json({
          success: false,
          message: 'Receita deve ser um valor positivo'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[83]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[29][1]++;
      }
      const profit =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[84]++, revenue - (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[31][0]++, expenses) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[31][1]++, 0)));
      let taxes =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[85]++, 0);
      let breakdown =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[86]++, {});
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[87]++;
      switch (regime) {
        case 'simples':
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[32][0]++;
          cov_2i6ia6afi0().s[88]++;
          taxes = revenue * 0.06; // Aproximação Simples Nacional
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[89]++;
          breakdown = {
            simplesNacional: taxes
          };
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[90]++;
          break;
        case 'lucro_presumido':
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[32][1]++;
          const irpj =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[91]++, profit * 0.15);
          const csll =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[92]++, profit * 0.09);
          const pis =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[93]++, revenue * 0.0065);
          const cofins =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[94]++, revenue * 0.03);
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[95]++;
          taxes = irpj + csll + pis + cofins;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[96]++;
          breakdown = {
            irpj,
            csll,
            pis,
            cofins
          };
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[97]++;
          break;
        case 'lucro_real':
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[32][2]++;
          const irpjReal =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[98]++, profit * 0.25);
          const csllReal =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[99]++, profit * 0.09);
          const pisReal =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[100]++, revenue * 0.0165);
          const cofinsReal =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[101]++, revenue * 0.076);
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[102]++;
          taxes = irpjReal + csllReal + pisReal + cofinsReal;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[103]++;
          breakdown = {
            irpj: irpjReal,
            csll: csllReal,
            pis: pisReal,
            cofins: cofinsReal
          };
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[104]++;
          break;
        default:
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[32][3]++;
          cov_2i6ia6afi0().s[105]++;
          taxes = profit * 0.15;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[106]++;
          breakdown = {
            estimado: taxes
          };
      }
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[107]++;
      res.status(200).json({
        success: true,
        message: 'Cálculo de impostos PJ realizado com sucesso',
        data: {
          revenue,
          expenses:
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[33][0]++, expenses) ||
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[33][1]++, 0),
          profit,
          taxes,
          netProfit: profit - taxes,
          effectiveRate: revenue > 0 ?
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[34][0]++, taxes / revenue * 100) :
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[34][1]++, 0),
          breakdown
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[108]++;
      logger_1.default.error('Erro no cálculo de impostos PJ:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[109]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Calcula folha de pagamento
   */
  async calculatePayroll(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[8]++;
    cov_2i6ia6afi0().s[110]++;
    try {
      const {
        salary,
        benefits,
        employees
      } =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[111]++, req.body);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[112]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[36][0]++, !salary) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[36][1]++, salary < 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[35][0]++;
        cov_2i6ia6afi0().s[113]++;
        res.status(400).json({
          success: false,
          message: 'Salário deve ser um valor positivo'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[114]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[35][1]++;
      }
      const employeeCount =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[115]++,
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[37][0]++, employees) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[37][1]++, 1));
      const totalSalary =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[116]++, salary * employeeCount);
      const totalBenefits =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[117]++, (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[38][0]++, benefits) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[38][1]++, 0)) * employeeCount);
      // Cálculos de encargos
      const inss =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[118]++, totalSalary * 0.20); // INSS patronal
      const fgts =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[119]++, totalSalary * 0.08);
      const rat =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[120]++, totalSalary * 0.02); // Risco de Acidente de Trabalho
      const salarioEducacao =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[121]++, totalSalary * 0.025);
      const incra =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[122]++, totalSalary * 0.002);
      const sebrae =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[123]++, totalSalary * 0.006);
      const sesi =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[124]++, totalSalary * 0.015);
      const senai =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[125]++, totalSalary * 0.01);
      const totalEncargos =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[126]++, inss + fgts + rat + salarioEducacao + incra + sebrae + sesi + senai);
      const totalCost =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[127]++, totalSalary + totalBenefits + totalEncargos);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[128]++;
      res.status(200).json({
        success: true,
        message: 'Cálculo de folha de pagamento realizado com sucesso',
        data: {
          employees: employeeCount,
          grossSalary: totalSalary,
          benefits: totalBenefits,
          encargos: {
            inss,
            fgts,
            rat,
            salarioEducacao,
            incra,
            sebrae,
            sesi,
            senai,
            total: totalEncargos
          },
          totalCost,
          costPerEmployee: totalCost / employeeCount
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[129]++;
      logger_1.default.error('Erro no cálculo de folha de pagamento:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[130]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Calcula Simples Nacional
   */
  async calculateSimplesNacional(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[9]++;
    cov_2i6ia6afi0().s[131]++;
    try {
      const {
        revenue,
        activity,
        last12Months
      } =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[132]++, req.body);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[133]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[40][0]++, !revenue) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[40][1]++, revenue < 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[39][0]++;
        cov_2i6ia6afi0().s[134]++;
        res.status(400).json({
          success: false,
          message: 'Receita deve ser um valor positivo'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[135]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[39][1]++;
      }
      const annualRevenue =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[136]++,
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[41][0]++, last12Months) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[41][1]++, revenue * 12));
      let aliquota =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[137]++, 0);
      let anexo =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[138]++, 'I');
      // Determinar anexo e alíquota baseado na atividade e faturamento
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[139]++;
      if (activity === 'comercio') {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[42][0]++;
        cov_2i6ia6afi0().s[140]++;
        anexo = 'I';
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[141]++;
        if (annualRevenue <= 180000) {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[43][0]++;
          cov_2i6ia6afi0().s[142]++;
          aliquota = 4.0;
        } else {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[43][1]++;
          cov_2i6ia6afi0().s[143]++;
          if (annualRevenue <= 360000) {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[44][0]++;
            cov_2i6ia6afi0().s[144]++;
            aliquota = 7.3;
          } else {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[44][1]++;
            cov_2i6ia6afi0().s[145]++;
            if (annualRevenue <= 720000) {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[45][0]++;
              cov_2i6ia6afi0().s[146]++;
              aliquota = 9.5;
            } else {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[45][1]++;
              cov_2i6ia6afi0().s[147]++;
              if (annualRevenue <= 1800000) {
                /* istanbul ignore next */
                cov_2i6ia6afi0().b[46][0]++;
                cov_2i6ia6afi0().s[148]++;
                aliquota = 10.7;
              } else {
                /* istanbul ignore next */
                cov_2i6ia6afi0().b[46][1]++;
                cov_2i6ia6afi0().s[149]++;
                if (annualRevenue <= 3600000) {
                  /* istanbul ignore next */
                  cov_2i6ia6afi0().b[47][0]++;
                  cov_2i6ia6afi0().s[150]++;
                  aliquota = 14.3;
                } else {
                  /* istanbul ignore next */
                  cov_2i6ia6afi0().b[47][1]++;
                  cov_2i6ia6afi0().s[151]++;
                  aliquota = 19.0;
                }
              }
            }
          }
        }
      } else {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[42][1]++;
        cov_2i6ia6afi0().s[152]++;
        if (activity === 'industria') {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[48][0]++;
          cov_2i6ia6afi0().s[153]++;
          anexo = 'II';
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[154]++;
          if (annualRevenue <= 180000) {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[49][0]++;
            cov_2i6ia6afi0().s[155]++;
            aliquota = 4.5;
          } else {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[49][1]++;
            cov_2i6ia6afi0().s[156]++;
            if (annualRevenue <= 360000) {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[50][0]++;
              cov_2i6ia6afi0().s[157]++;
              aliquota = 7.8;
            } else {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[50][1]++;
              cov_2i6ia6afi0().s[158]++;
              if (annualRevenue <= 720000) {
                /* istanbul ignore next */
                cov_2i6ia6afi0().b[51][0]++;
                cov_2i6ia6afi0().s[159]++;
                aliquota = 10.0;
              } else {
                /* istanbul ignore next */
                cov_2i6ia6afi0().b[51][1]++;
                cov_2i6ia6afi0().s[160]++;
                if (annualRevenue <= 1800000) {
                  /* istanbul ignore next */
                  cov_2i6ia6afi0().b[52][0]++;
                  cov_2i6ia6afi0().s[161]++;
                  aliquota = 11.2;
                } else {
                  /* istanbul ignore next */
                  cov_2i6ia6afi0().b[52][1]++;
                  cov_2i6ia6afi0().s[162]++;
                  if (annualRevenue <= 3600000) {
                    /* istanbul ignore next */
                    cov_2i6ia6afi0().b[53][0]++;
                    cov_2i6ia6afi0().s[163]++;
                    aliquota = 14.7;
                  } else {
                    /* istanbul ignore next */
                    cov_2i6ia6afi0().b[53][1]++;
                    cov_2i6ia6afi0().s[164]++;
                    aliquota = 30.0;
                  }
                }
              }
            }
          }
        } else {
          /* istanbul ignore next */
          cov_2i6ia6afi0().b[48][1]++;
          cov_2i6ia6afi0().s[165]++;
          anexo = 'III';
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[166]++;
          if (annualRevenue <= 180000) {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[54][0]++;
            cov_2i6ia6afi0().s[167]++;
            aliquota = 6.0;
          } else {
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[54][1]++;
            cov_2i6ia6afi0().s[168]++;
            if (annualRevenue <= 360000) {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[55][0]++;
              cov_2i6ia6afi0().s[169]++;
              aliquota = 11.2;
            } else {
              /* istanbul ignore next */
              cov_2i6ia6afi0().b[55][1]++;
              cov_2i6ia6afi0().s[170]++;
              if (annualRevenue <= 720000) {
                /* istanbul ignore next */
                cov_2i6ia6afi0().b[56][0]++;
                cov_2i6ia6afi0().s[171]++;
                aliquota = 13.5;
              } else {
                /* istanbul ignore next */
                cov_2i6ia6afi0().b[56][1]++;
                cov_2i6ia6afi0().s[172]++;
                if (annualRevenue <= 1800000) {
                  /* istanbul ignore next */
                  cov_2i6ia6afi0().b[57][0]++;
                  cov_2i6ia6afi0().s[173]++;
                  aliquota = 16.0;
                } else {
                  /* istanbul ignore next */
                  cov_2i6ia6afi0().b[57][1]++;
                  cov_2i6ia6afi0().s[174]++;
                  if (annualRevenue <= 3600000) {
                    /* istanbul ignore next */
                    cov_2i6ia6afi0().b[58][0]++;
                    cov_2i6ia6afi0().s[175]++;
                    aliquota = 21.0;
                  } else {
                    /* istanbul ignore next */
                    cov_2i6ia6afi0().b[58][1]++;
                    cov_2i6ia6afi0().s[176]++;
                    aliquota = 33.0;
                  }
                }
              }
            }
          }
        }
      }
      const tax =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[177]++, revenue * (aliquota / 100));
      const netRevenue =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[178]++, revenue - tax);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[179]++;
      res.status(200).json({
        success: true,
        message: 'Cálculo Simples Nacional realizado com sucesso',
        data: {
          revenue,
          annualRevenue,
          activity,
          anexo,
          aliquota,
          tax,
          netRevenue,
          effectiveRate: aliquota
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[180]++;
      logger_1.default.error('Erro no cálculo Simples Nacional:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[181]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Calcula depreciação de ativos
   */
  async calculateDepreciation(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[10]++;
    cov_2i6ia6afi0().s[182]++;
    try {
      const {
        assetValue,
        assetType,
        usefulLife,
        method
      } =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[183]++, req.body);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[184]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[60][0]++, !assetValue) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[60][1]++, assetValue < 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[59][0]++;
        cov_2i6ia6afi0().s[185]++;
        res.status(400).json({
          success: false,
          message: 'Valor do ativo deve ser positivo'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[186]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[59][1]++;
      }
      let years =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[187]++, usefulLife);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[188]++;
      if (!years) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[61][0]++;
        cov_2i6ia6afi0().s[189]++;
        // Vida útil padrão por tipo de ativo
        switch (assetType) {
          case 'veiculo':
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[62][0]++;
            cov_2i6ia6afi0().s[190]++;
            years = 5;
            /* istanbul ignore next */
            cov_2i6ia6afi0().s[191]++;
            break;
          case 'equipamento':
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[62][1]++;
            cov_2i6ia6afi0().s[192]++;
            years = 10;
            /* istanbul ignore next */
            cov_2i6ia6afi0().s[193]++;
            break;
          case 'movel':
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[62][2]++;
            cov_2i6ia6afi0().s[194]++;
            years = 10;
            /* istanbul ignore next */
            cov_2i6ia6afi0().s[195]++;
            break;
          case 'imovel':
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[62][3]++;
            cov_2i6ia6afi0().s[196]++;
            years = 25;
            /* istanbul ignore next */
            cov_2i6ia6afi0().s[197]++;
            break;
          case 'computador':
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[62][4]++;
            cov_2i6ia6afi0().s[198]++;
            years = 5;
            /* istanbul ignore next */
            cov_2i6ia6afi0().s[199]++;
            break;
          default:
            /* istanbul ignore next */
            cov_2i6ia6afi0().b[62][5]++;
            cov_2i6ia6afi0().s[200]++;
            years = 10;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[61][1]++;
      }
      let annualDepreciation =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[201]++, 0);
      let monthlyDepreciation =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[202]++, 0);
      let schedule =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[203]++, []);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[204]++;
      if (method === 'acelerada') {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[63][0]++;
        cov_2i6ia6afi0().s[205]++;
        // Depreciação acelerada (dobro da taxa normal)
        annualDepreciation = assetValue / years * 2;
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[206]++;
        monthlyDepreciation = annualDepreciation / 12;
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[207]++;
        years = Math.ceil(years / 2);
      } else {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[63][1]++;
        cov_2i6ia6afi0().s[208]++;
        // Depreciação linear (método padrão)
        annualDepreciation = assetValue / years;
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[209]++;
        monthlyDepreciation = annualDepreciation / 12;
      }
      // Gerar cronograma de depreciação
      let remainingValue =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[210]++, assetValue);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[211]++;
      for (let year =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[212]++, 1); year <= years; year++) {
        const yearDepreciation =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().s[213]++, Math.min(annualDepreciation, remainingValue));
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[214]++;
        remainingValue -= yearDepreciation;
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[215]++;
        schedule.push({
          year,
          depreciation: yearDepreciation,
          accumulatedDepreciation: assetValue - remainingValue,
          remainingValue
        });
      }
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[216]++;
      res.status(200).json({
        success: true,
        message: 'Cálculo de depreciação realizado com sucesso',
        data: {
          assetValue,
          assetType,
          usefulLife: years,
          method:
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[64][0]++, method) ||
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[64][1]++, 'linear'),
          annualDepreciation,
          monthlyDepreciation,
          totalDepreciation: assetValue,
          schedule
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[217]++;
      logger_1.default.error('Erro no cálculo de depreciação:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[218]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Calcula financiamento/empréstimo
   */
  async calculateLoan(req, res) {
    /* istanbul ignore next */
    cov_2i6ia6afi0().f[11]++;
    cov_2i6ia6afi0().s[219]++;
    try {
      const {
        principal,
        interestRate,
        months,
        type
      } =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[220]++, req.body);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[221]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[66][0]++, !principal) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[66][1]++, principal <= 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[65][0]++;
        cov_2i6ia6afi0().s[222]++;
        res.status(400).json({
          success: false,
          message: 'Valor principal deve ser positivo'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[223]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[65][1]++;
      }
      cov_2i6ia6afi0().s[224]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[68][0]++, !interestRate) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[68][1]++, interestRate < 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[67][0]++;
        cov_2i6ia6afi0().s[225]++;
        res.status(400).json({
          success: false,
          message: 'Taxa de juros deve ser positiva'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[226]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[67][1]++;
      }
      cov_2i6ia6afi0().s[227]++;
      if (
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[70][0]++, !months) ||
      /* istanbul ignore next */
      (cov_2i6ia6afi0().b[70][1]++, months <= 0)) {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[69][0]++;
        cov_2i6ia6afi0().s[228]++;
        res.status(400).json({
          success: false,
          message: 'Número de parcelas deve ser positivo'
        });
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[229]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2i6ia6afi0().b[69][1]++;
      }
      const monthlyRate =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[230]++, interestRate / 100 / 12);
      let monthlyPayment =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[231]++, 0);
      let totalInterest =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[232]++, 0);
      let schedule =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[233]++, []);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[234]++;
      if (type === 'sac') {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[71][0]++;
        // Sistema de Amortização Constante (SAC)
        const amortization =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().s[235]++, principal / months);
        let balance =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().s[236]++, principal);
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[237]++;
        for (let month =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().s[238]++, 1); month <= months; month++) {
          const interest =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[239]++, balance * monthlyRate);
          const payment =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[240]++, amortization + interest);
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[241]++;
          balance -= amortization;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[242]++;
          totalInterest += interest;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[243]++;
          schedule.push({
            month,
            payment: Math.round(payment * 100) / 100,
            principal: Math.round(amortization * 100) / 100,
            interest: Math.round(interest * 100) / 100,
            balance: Math.round(balance * 100) / 100
          });
        }
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[244]++;
        monthlyPayment =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().b[72][0]++, schedule[0]?.payment) ||
        /* istanbul ignore next */
        (cov_2i6ia6afi0().b[72][1]++, 0);
      } else {
        /* istanbul ignore next */
        cov_2i6ia6afi0().b[71][1]++;
        cov_2i6ia6afi0().s[245]++;
        // Sistema Price (parcelas fixas)
        monthlyPayment = principal * (monthlyRate * Math.pow(1 + monthlyRate, months)) / (Math.pow(1 + monthlyRate, months) - 1);
        let balance =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().s[246]++, principal);
        /* istanbul ignore next */
        cov_2i6ia6afi0().s[247]++;
        for (let month =
        /* istanbul ignore next */
        (cov_2i6ia6afi0().s[248]++, 1); month <= months; month++) {
          const interest =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[249]++, balance * monthlyRate);
          const principalPayment =
          /* istanbul ignore next */
          (cov_2i6ia6afi0().s[250]++, monthlyPayment - interest);
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[251]++;
          balance -= principalPayment;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[252]++;
          totalInterest += interest;
          /* istanbul ignore next */
          cov_2i6ia6afi0().s[253]++;
          schedule.push({
            month,
            payment: Math.round(monthlyPayment * 100) / 100,
            principal: Math.round(principalPayment * 100) / 100,
            interest: Math.round(interest * 100) / 100,
            balance: Math.round(Math.max(0, balance) * 100) / 100
          });
        }
      }
      const totalAmount =
      /* istanbul ignore next */
      (cov_2i6ia6afi0().s[254]++, principal + totalInterest);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[255]++;
      res.status(200).json({
        success: true,
        message: 'Cálculo de financiamento realizado com sucesso',
        data: {
          principal,
          interestRate,
          months,
          type:
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[73][0]++, type) ||
          /* istanbul ignore next */
          (cov_2i6ia6afi0().b[73][1]++, 'price'),
          monthlyPayment: Math.round(monthlyPayment * 100) / 100,
          totalInterest: Math.round(totalInterest * 100) / 100,
          totalAmount: Math.round(totalAmount * 100) / 100,
          schedule
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[256]++;
      logger_1.default.error('Erro no cálculo de financiamento:', error);
      /* istanbul ignore next */
      cov_2i6ia6afi0().s[257]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
}
/* istanbul ignore next */
cov_2i6ia6afi0().s[258]++;
exports.CalculatorController = CalculatorController;
// Instância do controller
/* istanbul ignore next */
cov_2i6ia6afi0().s[259]++;
exports.calculatorController = new CalculatorController();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,