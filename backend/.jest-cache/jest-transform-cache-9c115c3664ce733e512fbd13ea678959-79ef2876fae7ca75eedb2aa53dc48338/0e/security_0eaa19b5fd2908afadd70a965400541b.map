{"file":"D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\security.ts","mappings":"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","names":[],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\security.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport rateLimit from 'express-rate-limit';\r\nimport compression from 'compression';\r\n\r\n/**\r\n * Configuração do CORS para permitir requisições de origens específicas\r\n */\r\nexport const corsMiddleware = cors({\r\n  origin: (origin, callback) => {\r\n    // Lista de origens permitidas\r\n    const allowedOrigins = [\r\n      'http://localhost:3000',\r\n      'http://localhost:5173',\r\n      'http://localhost:4173',\r\n      process.env.FRONTEND_URL,\r\n      process.env.ADMIN_URL\r\n    ].filter(Boolean); // Remove valores undefined/null\r\n\r\n    // Permite requisições sem origin (ex: aplicações mobile, Postman)\r\n    if (!origin) return callback(null, true);\r\n\r\n    if (allowedOrigins.includes(origin)) {\r\n      callback(null, true);\r\n    } else {\r\n      callback(new Error('Não permitido pelo CORS'));\r\n    }\r\n  },\r\n  credentials: true, // Permite cookies e headers de autenticação\r\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\r\n  allowedHeaders: [\r\n    'Origin',\r\n    'X-Requested-With',\r\n    'Content-Type',\r\n    'Accept',\r\n    'Authorization',\r\n    'Cache-Control',\r\n    'Pragma'\r\n  ],\r\n  exposedHeaders: ['X-Total-Count', 'X-Page-Count'],\r\n  maxAge: 86400 // Cache preflight por 24 horas\r\n});\r\n\r\n/**\r\n * Configuração do Helmet para segurança de headers HTTP\r\n */\r\nexport const helmetMiddleware = helmet({\r\n  contentSecurityPolicy: {\r\n    directives: {\r\n      defaultSrc: [\"'self'\"],\r\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\r\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\r\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\r\n      scriptSrc: [\"'self'\"],\r\n      connectSrc: [\"'self'\"],\r\n      frameSrc: [\"'none'\"],\r\n      objectSrc: [\"'none'\"],\r\n      mediaSrc: [\"'self'\"],\r\n      manifestSrc: [\"'self'\"]\r\n    }\r\n  },\r\n  crossOriginEmbedderPolicy: false, // Desabilita para compatibilidade\r\n  hsts: {\r\n    maxAge: 31536000, // 1 ano\r\n    includeSubDomains: true,\r\n    preload: true\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiting geral para todas as rotas\r\n */\r\nexport const generalRateLimit = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutos\r\n  max: 1000, // Máximo 1000 requisições por IP por janela\r\n  message: {\r\n    error: 'Muitas requisições deste IP, tente novamente em 15 minutos.',\r\n    retryAfter: 15 * 60\r\n  },\r\n  standardHeaders: true, // Retorna rate limit info nos headers `RateLimit-*`\r\n  legacyHeaders: false, // Desabilita headers `X-RateLimit-*`\r\n  skip: (req: Request): boolean => {\r\n    // Pula rate limiting para IPs locais em desenvolvimento\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const ip = req.ip || req.socket.remoteAddress;\r\n      return ip === '127.0.0.1' || ip === '::1' || (ip?.startsWith('192.168.') ?? false);\r\n    }\r\n    return false;\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiting mais restritivo para rotas de autenticação\r\n */\r\nexport const authRateLimit = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutos\r\n  max: 10, // Máximo 10 tentativas de login por IP por janela\r\n  message: {\r\n    error: 'Muitas tentativas de login. Tente novamente em 15 minutos.',\r\n    retryAfter: 15 * 60\r\n  },\r\n  standardHeaders: true,\r\n  legacyHeaders: false,\r\n  skipSuccessfulRequests: true, // Não conta requisições bem-sucedidas\r\n  skip: (req: Request): boolean => {\r\n    // Pula rate limiting para IPs locais em desenvolvimento\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const ip = req.ip || req.socket.remoteAddress;\r\n      return ip === '127.0.0.1' || ip === '::1' || (ip?.startsWith('192.168.') ?? false);\r\n    }\r\n    return false;\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiting para rotas de upload\r\n */\r\nexport const uploadRateLimit = rateLimit({\r\n  windowMs: 60 * 60 * 1000, // 1 hora\r\n  max: 50, // Máximo 50 uploads por IP por hora\r\n  message: {\r\n    error: 'Limite de uploads excedido. Tente novamente em 1 hora.',\r\n    retryAfter: 60 * 60\r\n  },\r\n  standardHeaders: true,\r\n  legacyHeaders: false\r\n});\r\n\r\n/**\r\n * Rate limiting para rotas de API em geral\r\n */\r\nexport const apiRateLimit = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutos\r\n  max: 500, // Máximo 500 requisições por IP por janela\r\n  message: {\r\n    error: 'Limite de requisições da API excedido. Tente novamente em 15 minutos.',\r\n    retryAfter: 15 * 60\r\n  },\r\n  standardHeaders: true,\r\n  legacyHeaders: false\r\n});\r\n\r\n/**\r\n * Middleware de compressão para otimizar o tamanho das respostas\r\n */\r\nexport const compressionMiddleware = compression({\r\n  level: 6, // Nível de compressão (0-9)\r\n  threshold: 1024, // Só comprime se a resposta for maior que 1KB\r\n  filter: (req: Request, res: Response) => {\r\n    // Não comprime se o cliente não suporta\r\n    if (req.headers['x-no-compression']) {\r\n      return false;\r\n    }\r\n    // Usa o filtro padrão do compression\r\n    return compression.filter(req, res);\r\n  }\r\n});\r\n\r\n/**\r\n * Middleware para adicionar headers de segurança customizados\r\n */\r\nexport const customSecurityHeaders = (req: Request, res: Response, next: NextFunction) => {\r\n  // Remove header que expõe informações do servidor\r\n  res.removeHeader('X-Powered-By');\r\n  \r\n  // Adiciona headers de segurança customizados\r\n  res.setHeader('X-API-Version', process.env.API_VERSION || '1.0.0');\r\n  res.setHeader('X-Response-Time', Date.now().toString());\r\n  \r\n  // Previne ataques de clickjacking\r\n  res.setHeader('X-Frame-Options', 'DENY');\r\n  \r\n  // Previne MIME type sniffing\r\n  res.setHeader('X-Content-Type-Options', 'nosniff');\r\n  \r\n  // Força HTTPS em produção\r\n  if (process.env.NODE_ENV === 'production') {\r\n    res.setHeader('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');\r\n  }\r\n  \r\n  next();\r\n};\r\n\r\n/**\r\n * Middleware para log de requisições de segurança\r\n */\r\nexport const securityLogger = (req: Request, res: Response, next: NextFunction) => {\r\n  const startTime = Date.now();\r\n  \r\n  // Log da requisição\r\n  console.log(`[${new Date().toISOString()}] ${req.method} ${req.path} - IP: ${req.ip} - User-Agent: ${req.get('User-Agent')}`);\r\n  \r\n  // Log da resposta quando terminar\r\n  res.on('finish', () => {\r\n    const duration = Date.now() - startTime;\r\n    console.log(`[${new Date().toISOString()}] ${req.method} ${req.path} - ${res.statusCode} - ${duration}ms`);\r\n  });\r\n  \r\n  next();\r\n};"],"version":3}