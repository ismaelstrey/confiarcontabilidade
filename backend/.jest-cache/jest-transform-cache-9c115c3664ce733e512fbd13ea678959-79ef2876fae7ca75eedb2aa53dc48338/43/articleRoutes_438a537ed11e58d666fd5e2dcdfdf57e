39beb5030f6d165373c085019593a97a
"use strict";

/* istanbul ignore next */
function cov_2csi8sp34t() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\articleRoutes.ts";
  var hash = "be10971feae89d24444fb4b3e3140cdbda8793c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\articleRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 88
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "8": {
        start: {
          line: 229,
          column: 0
        },
        end: {
          line: 229,
          column: 99
        }
      },
      "9": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 104
        }
      },
      "10": {
        start: {
          line: 294,
          column: 0
        },
        end: {
          line: 294,
          column: 172
        }
      },
      "11": {
        start: {
          line: 339,
          column: 0
        },
        end: {
          line: 339,
          column: 174
        }
      },
      "12": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 374,
          column: 177
        }
      },
      "13": {
        start: {
          line: 410,
          column: 0
        },
        end: {
          line: 410,
          column: 66
        }
      },
      "14": {
        start: {
          line: 445,
          column: 0
        },
        end: {
          line: 445,
          column: 117
        }
      },
      "15": {
        start: {
          line: 493,
          column: 0
        },
        end: {
          line: 493,
          column: 72
        }
      },
      "16": {
        start: {
          line: 494,
          column: 0
        },
        end: {
          line: 494,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\articleRoutes.ts",
      mappings: ";;;;;AAAA,qCAAiC;AACjC,8CAA8D;AAC9D,gDAI8B;AAC9B,yFAAiE;AAEjE,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8HG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0FG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAA,6BAAqB,EAAC,IAAI,CAAC,EAAE,2BAAiB,CAAC,WAAW,CAAC,CAAC;AAE5E;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACH,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAA,8BAAsB,EAAC,IAAI,CAAC,EAAE,2BAAiB,CAAC,UAAU,CAAC,CAAC;AAEjF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAA,wCAAgC,GAAE,EAAE,2BAAiB,CAAC,aAAa,CAAC,CAAC;AAElI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2CG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAA,wCAAgC,GAAE,EAAE,2BAAiB,CAAC,aAAa,CAAC,CAAC;AAEpI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAA,wCAAgC,GAAE,EAAE,2BAAiB,CAAC,aAAa,CAAC,CAAC;AAEvI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,2BAAiB,CAAC,WAAW,CAAC,CAAC;AAExD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AACH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAA,6BAAqB,EAAC,GAAG,CAAC,EAAE,2BAAiB,CAAC,kBAAkB,CAAC,CAAC;AAE9F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8CG;AACH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,2BAAiB,CAAC,aAAa,CAAC,CAAC;AAE9D,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\articleRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport { authenticate, authorize } from '../middlewares/auth';\r\nimport {\r\n  publicCacheMiddleware,\r\n  articleCacheMiddleware,\r\n  invalidateArticleCacheMiddleware\r\n} from '../middlewares/cache';\r\nimport ArticleController from '../controllers/articleController';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Article:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         title:\r\n *           type: string\r\n *         slug:\r\n *           type: string\r\n *         excerpt:\r\n *           type: string\r\n *         content:\r\n *           type: string\r\n *         featuredImage:\r\n *           type: string\r\n *         status:\r\n *           type: string\r\n *           enum: [DRAFT, PUBLISHED, ARCHIVED]\r\n *         publishedAt:\r\n *           type: string\r\n *           format: date-time\r\n *         readTime:\r\n *           type: integer\r\n *         views:\r\n *           type: integer\r\n *         likes:\r\n *           type: integer\r\n *         seoTitle:\r\n *           type: string\r\n *         seoDescription:\r\n *           type: string\r\n *         seoKeywords:\r\n *           type: string\r\n *         author:\r\n *           $ref: '#/components/schemas/User'\r\n *         categories:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/components/schemas/Category'\r\n *         tags:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/components/schemas/Tag'\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *     Category:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         slug:\r\n *           type: string\r\n *         description:\r\n *           type: string\r\n *         color:\r\n *           type: string\r\n *         icon:\r\n *           type: string\r\n *     Tag:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         slug:\r\n *           type: string\r\n *         color:\r\n *           type: string\r\n *     CreateArticleRequest:\r\n *       type: object\r\n *       required:\r\n *         - title\r\n *         - content\r\n *       properties:\r\n *         title:\r\n *           type: string\r\n *           minLength: 3\r\n *           description: T\xEDtulo do artigo\r\n *         excerpt:\r\n *           type: string\r\n *           description: Resumo do artigo\r\n *         content:\r\n *           type: string\r\n *           minLength: 10\r\n *           description: Conte\xFAdo do artigo\r\n *         featuredImage:\r\n *           type: string\r\n *           description: URL da imagem destacada\r\n *         status:\r\n *           type: string\r\n *           enum: [DRAFT, PUBLISHED]\r\n *           default: DRAFT\r\n *         publishedAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Data de publica\xE7\xE3o (opcional)\r\n *         seoTitle:\r\n *           type: string\r\n *           description: T\xEDtulo SEO\r\n *         seoDescription:\r\n *           type: string\r\n *           description: Descri\xE7\xE3o SEO\r\n *         seoKeywords:\r\n *           type: string\r\n *           description: Palavras-chave SEO\r\n *         categoryIds:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *           description: IDs das categorias\r\n *         tagIds:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *           description: IDs das tags\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles:\r\n *   get:\r\n *     summary: Listar artigos\r\n *     tags: [Artigos]\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: N\xFAmero da p\xE1gina\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 100\r\n *           default: 10\r\n *         description: Itens por p\xE1gina\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [DRAFT, PUBLISHED, ARCHIVED]\r\n *         description: Filtrar por status\r\n *       - in: query\r\n *         name: category\r\n *         schema:\r\n *           type: string\r\n *         description: Filtrar por categoria (slug)\r\n *       - in: query\r\n *         name: tag\r\n *         schema:\r\n *           type: string\r\n *         description: Filtrar por tag (slug)\r\n *       - in: query\r\n *         name: search\r\n *         schema:\r\n *           type: string\r\n *         description: Buscar por t\xEDtulo ou conte\xFAdo\r\n *       - in: query\r\n *         name: author\r\n *         schema:\r\n *           type: string\r\n *         description: Filtrar por autor (ID)\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, publishedAt, title, views, likes]\r\n *           default: createdAt\r\n *         description: Campo para ordena\xE7\xE3o\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Ordem da classifica\xE7\xE3o\r\n *     responses:\r\n *       200:\r\n *         description: Lista de artigos\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     articles:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Article'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         pages:\r\n *                           type: integer\r\n */\r\nrouter.get('/', publicCacheMiddleware(1800), ArticleController.getArticles);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles/{slug}:\r\n *   get:\r\n *     summary: Obter artigo por slug\r\n *     tags: [Artigos]\r\n *     parameters:\r\n *       - in: path\r\n *         name: slug\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Slug do artigo\r\n *     responses:\r\n *       200:\r\n *         description: Dados do artigo\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Article'\r\n *       404:\r\n *         description: Artigo n\xE3o encontrado\r\n */\r\nrouter.get('/:slug', articleCacheMiddleware(3600), ArticleController.getArticle);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles:\r\n *   post:\r\n *     summary: Criar novo artigo\r\n *     tags: [Artigos]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreateArticleRequest'\r\n *     responses:\r\n *       201:\r\n *         description: Artigo criado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Article'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n */\r\nrouter.post('/', authenticate, authorize('ADMIN', 'EDITOR'), invalidateArticleCacheMiddleware(), ArticleController.createArticle);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles/{id}:\r\n *   put:\r\n *     summary: Atualizar artigo\r\n *     tags: [Artigos]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do artigo\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreateArticleRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Artigo atualizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Article'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Artigo n\xE3o encontrado\r\n */\r\nrouter.put('/:id', authenticate, authorize('ADMIN', 'EDITOR'), invalidateArticleCacheMiddleware(), ArticleController.updateArticle);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles/{id}:\r\n *   delete:\r\n *     summary: Excluir artigo\r\n *     tags: [Artigos]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do artigo\r\n *     responses:\r\n *       200:\r\n *         description: Artigo exclu\xEDdo com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Artigo n\xE3o encontrado\r\n */\r\nrouter.delete('/:id', authenticate, authorize('ADMIN', 'EDITOR'), invalidateArticleCacheMiddleware(), ArticleController.deleteArticle);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles/{id}/like:\r\n *   post:\r\n *     summary: Curtir/descurtir artigo\r\n *     tags: [Artigos]\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do artigo\r\n *     responses:\r\n *       200:\r\n *         description: Like processado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     liked:\r\n *                       type: boolean\r\n *                     totalLikes:\r\n *                       type: integer\r\n *                 message:\r\n *                   type: string\r\n *       404:\r\n *         description: Artigo n\xE3o encontrado\r\n */\r\nrouter.post('/:id/like', ArticleController.likeArticle);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles/{id}/comments:\r\n *   get:\r\n *     summary: Listar coment\xE1rios do artigo\r\n *     tags: [Artigos]\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do artigo\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: N\xFAmero da p\xE1gina\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 50\r\n *           default: 10\r\n *         description: Itens por p\xE1gina\r\n *     responses:\r\n *       200:\r\n *         description: Lista de coment\xE1rios\r\n *       404:\r\n *         description: Artigo n\xE3o encontrado\r\n */\r\nrouter.get('/:id/comments', publicCacheMiddleware(600), ArticleController.getArticleComments);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/articles/{id}/comments:\r\n *   post:\r\n *     summary: Adicionar coment\xE1rio ao artigo\r\n *     tags: [Artigos]\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do artigo\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - content\r\n *               - authorName\r\n *               - authorEmail\r\n *             properties:\r\n *               content:\r\n *                 type: string\r\n *                 minLength: 3\r\n *                 description: Conte\xFAdo do coment\xE1rio\r\n *               authorName:\r\n *                 type: string\r\n *                 minLength: 2\r\n *                 description: Nome do autor\r\n *               authorEmail:\r\n *                 type: string\r\n *                 format: email\r\n *                 description: Email do autor\r\n *               parentId:\r\n *                 type: string\r\n *                 description: ID do coment\xE1rio pai (para respostas)\r\n *     responses:\r\n *       201:\r\n *         description: Coment\xE1rio adicionado com sucesso\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       404:\r\n *         description: Artigo n\xE3o encontrado\r\n */\r\nrouter.post('/:id/comments', ArticleController.createComment);\r\n\r\nexport default router;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "be10971feae89d24444fb4b3e3140cdbda8793c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2csi8sp34t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2csi8sp34t();
var __importDefault =
/* istanbul ignore next */
(cov_2csi8sp34t().s[0]++,
/* istanbul ignore next */
(cov_2csi8sp34t().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2csi8sp34t().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2csi8sp34t().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2csi8sp34t().f[0]++;
  cov_2csi8sp34t().s[1]++;
  return /* istanbul ignore next */(cov_2csi8sp34t().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2csi8sp34t().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2csi8sp34t().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2csi8sp34t().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2csi8sp34t().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2csi8sp34t().s[3]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_2csi8sp34t().s[4]++, require("../middlewares/auth"));
const cache_1 =
/* istanbul ignore next */
(cov_2csi8sp34t().s[5]++, require("../middlewares/cache"));
const articleController_1 =
/* istanbul ignore next */
(cov_2csi8sp34t().s[6]++, __importDefault(require("../controllers/articleController")));
const router =
/* istanbul ignore next */
(cov_2csi8sp34t().s[7]++, (0, express_1.Router)());
/**
 * @swagger
 * components:
 *   schemas:
 *     Article:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         title:
 *           type: string
 *         slug:
 *           type: string
 *         excerpt:
 *           type: string
 *         content:
 *           type: string
 *         featuredImage:
 *           type: string
 *         status:
 *           type: string
 *           enum: [DRAFT, PUBLISHED, ARCHIVED]
 *         publishedAt:
 *           type: string
 *           format: date-time
 *         readTime:
 *           type: integer
 *         views:
 *           type: integer
 *         likes:
 *           type: integer
 *         seoTitle:
 *           type: string
 *         seoDescription:
 *           type: string
 *         seoKeywords:
 *           type: string
 *         author:
 *           $ref: '#/components/schemas/User'
 *         categories:
 *           type: array
 *           items:
 *             $ref: '#/components/schemas/Category'
 *         tags:
 *           type: array
 *           items:
 *             $ref: '#/components/schemas/Tag'
 *         createdAt:
 *           type: string
 *           format: date-time
 *         updatedAt:
 *           type: string
 *           format: date-time
 *     Category:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         name:
 *           type: string
 *         slug:
 *           type: string
 *         description:
 *           type: string
 *         color:
 *           type: string
 *         icon:
 *           type: string
 *     Tag:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         name:
 *           type: string
 *         slug:
 *           type: string
 *         color:
 *           type: string
 *     CreateArticleRequest:
 *       type: object
 *       required:
 *         - title
 *         - content
 *       properties:
 *         title:
 *           type: string
 *           minLength: 3
 *           description: Título do artigo
 *         excerpt:
 *           type: string
 *           description: Resumo do artigo
 *         content:
 *           type: string
 *           minLength: 10
 *           description: Conteúdo do artigo
 *         featuredImage:
 *           type: string
 *           description: URL da imagem destacada
 *         status:
 *           type: string
 *           enum: [DRAFT, PUBLISHED]
 *           default: DRAFT
 *         publishedAt:
 *           type: string
 *           format: date-time
 *           description: Data de publicação (opcional)
 *         seoTitle:
 *           type: string
 *           description: Título SEO
 *         seoDescription:
 *           type: string
 *           description: Descrição SEO
 *         seoKeywords:
 *           type: string
 *           description: Palavras-chave SEO
 *         categoryIds:
 *           type: array
 *           items:
 *             type: string
 *           description: IDs das categorias
 *         tagIds:
 *           type: array
 *           items:
 *             type: string
 *           description: IDs das tags
 */
/**
 * @swagger
 * /api/v1/articles:
 *   get:
 *     summary: Listar artigos
 *     tags: [Artigos]
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *           minimum: 1
 *           default: 1
 *         description: Número da página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           minimum: 1
 *           maximum: 100
 *           default: 10
 *         description: Itens por página
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [DRAFT, PUBLISHED, ARCHIVED]
 *         description: Filtrar por status
 *       - in: query
 *         name: category
 *         schema:
 *           type: string
 *         description: Filtrar por categoria (slug)
 *       - in: query
 *         name: tag
 *         schema:
 *           type: string
 *         description: Filtrar por tag (slug)
 *       - in: query
 *         name: search
 *         schema:
 *           type: string
 *         description: Buscar por título ou conteúdo
 *       - in: query
 *         name: author
 *         schema:
 *           type: string
 *         description: Filtrar por autor (ID)
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [createdAt, publishedAt, title, views, likes]
 *           default: createdAt
 *         description: Campo para ordenação
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Ordem da classificação
 *     responses:
 *       200:
 *         description: Lista de artigos
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     articles:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/Article'
 *                     pagination:
 *                       type: object
 *                       properties:
 *                         page:
 *                           type: integer
 *                         limit:
 *                           type: integer
 *                         total:
 *                           type: integer
 *                         pages:
 *                           type: integer
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[8]++;
router.get('/', (0, cache_1.publicCacheMiddleware)(1800), articleController_1.default.getArticles);
/**
 * @swagger
 * /api/v1/articles/{slug}:
 *   get:
 *     summary: Obter artigo por slug
 *     tags: [Artigos]
 *     parameters:
 *       - in: path
 *         name: slug
 *         required: true
 *         schema:
 *           type: string
 *         description: Slug do artigo
 *     responses:
 *       200:
 *         description: Dados do artigo
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Article'
 *       404:
 *         description: Artigo não encontrado
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[9]++;
router.get('/:slug', (0, cache_1.articleCacheMiddleware)(3600), articleController_1.default.getArticle);
/**
 * @swagger
 * /api/v1/articles:
 *   post:
 *     summary: Criar novo artigo
 *     tags: [Artigos]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreateArticleRequest'
 *     responses:
 *       201:
 *         description: Artigo criado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Article'
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[10]++;
router.post('/', auth_1.authenticate, (0, auth_1.authorize)('ADMIN', 'EDITOR'), (0, cache_1.invalidateArticleCacheMiddleware)(), articleController_1.default.createArticle);
/**
 * @swagger
 * /api/v1/articles/{id}:
 *   put:
 *     summary: Atualizar artigo
 *     tags: [Artigos]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do artigo
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreateArticleRequest'
 *     responses:
 *       200:
 *         description: Artigo atualizado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Article'
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Artigo não encontrado
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[11]++;
router.put('/:id', auth_1.authenticate, (0, auth_1.authorize)('ADMIN', 'EDITOR'), (0, cache_1.invalidateArticleCacheMiddleware)(), articleController_1.default.updateArticle);
/**
 * @swagger
 * /api/v1/articles/{id}:
 *   delete:
 *     summary: Excluir artigo
 *     tags: [Artigos]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do artigo
 *     responses:
 *       200:
 *         description: Artigo excluído com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Artigo não encontrado
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[12]++;
router.delete('/:id', auth_1.authenticate, (0, auth_1.authorize)('ADMIN', 'EDITOR'), (0, cache_1.invalidateArticleCacheMiddleware)(), articleController_1.default.deleteArticle);
/**
 * @swagger
 * /api/v1/articles/{id}/like:
 *   post:
 *     summary: Curtir/descurtir artigo
 *     tags: [Artigos]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do artigo
 *     responses:
 *       200:
 *         description: Like processado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     liked:
 *                       type: boolean
 *                     totalLikes:
 *                       type: integer
 *                 message:
 *                   type: string
 *       404:
 *         description: Artigo não encontrado
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[13]++;
router.post('/:id/like', articleController_1.default.likeArticle);
/**
 * @swagger
 * /api/v1/articles/{id}/comments:
 *   get:
 *     summary: Listar comentários do artigo
 *     tags: [Artigos]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do artigo
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *           minimum: 1
 *           default: 1
 *         description: Número da página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           minimum: 1
 *           maximum: 50
 *           default: 10
 *         description: Itens por página
 *     responses:
 *       200:
 *         description: Lista de comentários
 *       404:
 *         description: Artigo não encontrado
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[14]++;
router.get('/:id/comments', (0, cache_1.publicCacheMiddleware)(600), articleController_1.default.getArticleComments);
/**
 * @swagger
 * /api/v1/articles/{id}/comments:
 *   post:
 *     summary: Adicionar comentário ao artigo
 *     tags: [Artigos]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do artigo
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - content
 *               - authorName
 *               - authorEmail
 *             properties:
 *               content:
 *                 type: string
 *                 minLength: 3
 *                 description: Conteúdo do comentário
 *               authorName:
 *                 type: string
 *                 minLength: 2
 *                 description: Nome do autor
 *               authorEmail:
 *                 type: string
 *                 format: email
 *                 description: Email do autor
 *               parentId:
 *                 type: string
 *                 description: ID do comentário pai (para respostas)
 *     responses:
 *       201:
 *         description: Comentário adicionado com sucesso
 *       400:
 *         description: Dados inválidos
 *       404:
 *         description: Artigo não encontrado
 */
/* istanbul ignore next */
cov_2csi8sp34t().s[15]++;
router.post('/:id/comments', articleController_1.default.createComment);
/* istanbul ignore next */
cov_2csi8sp34t().s[16]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,