46718a532a766e26837645eadf3b5194
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.specs = exports.setupSwagger = void 0;
const swagger_jsdoc_1 = __importDefault(require("swagger-jsdoc"));
const swagger_ui_express_1 = __importDefault(require("swagger-ui-express"));
// ConfiguraÃ§Ã£o bÃ¡sica do Swagger
const options = {
    definition: {
        openapi: '3.0.0',
        info: {
            title: 'API Contabilidade Igrejinha',
            version: '1.0.0',
            description: 'DocumentaÃ§Ã£o da API do sistema Contabilidade Igrejinha - Sistema especializado em organizaÃ§Ãµes religiosas',
            contact: {
                name: 'Suporte Contabilidade Igrejinha',
                email: 'suporte@contabilidadeigrejinha.com.br',
                url: 'https://contabilidadeigrejinha.com.br',
            },
            license: {
                name: 'MIT',
                url: 'https://opensource.org/licenses/MIT',
            },
        },
        servers: [
            {
                url: 'http://localhost:3001/api',
                description: 'Servidor de Desenvolvimento',
            },
            {
                url: 'http://localhost:3002/api',
                description: 'Servidor de Desenvolvimento (Alternativo)',
            },
            {
                url: 'https://api.contabilidadeigrejinha.com.br/api',
                description: 'Servidor de ProduÃ§Ã£o',
            },
        ],
        components: {
            securitySchemes: {
                bearerAuth: {
                    type: 'http',
                    scheme: 'bearer',
                    bearerFormat: 'JWT',
                    description: 'Token JWT para autenticaÃ§Ã£o. Formato: Bearer {token}',
                },
            },
            schemas: {
                Error: {
                    type: 'object',
                    properties: {
                        status: {
                            type: 'string',
                            example: 'error',
                        },
                        message: {
                            type: 'string',
                            example: 'Ocorreu um erro ao processar a solicitaÃ§Ã£o',
                        },
                        errors: {
                            type: 'array',
                            items: {
                                type: 'string',
                            },
                            example: ["Campo 'email' Ã© obrigatÃ³rio", "Senha deve ter pelo menos 8 caracteres"],
                        },
                    },
                },
                ApiResponse: {
                    type: 'object',
                    properties: {
                        status: {
                            type: 'string',
                            enum: ['success', 'error'],
                            example: 'success',
                        },
                        message: {
                            type: 'string',
                            example: 'OperaÃ§Ã£o realizada com sucesso',
                        },
                        data: {
                            type: 'object',
                        },
                    },
                },
                Pagination: {
                    type: 'object',
                    properties: {
                        page: {
                            type: 'integer',
                            example: 1,
                        },
                        limit: {
                            type: 'integer',
                            example: 10,
                        },
                        totalItems: {
                            type: 'integer',
                            example: 100,
                        },
                        totalPages: {
                            type: 'integer',
                            example: 10,
                        },
                        hasNext: {
                            type: 'boolean',
                            example: true,
                        },
                        hasPrev: {
                            type: 'boolean',
                            example: false,
                        },
                    },
                },
            },
        },
        security: [
            {
                bearerAuth: [],
            },
        ],
    },
    apis: [
        './src/routes/*.ts',
        './src/docs/schemas/*.ts',
    ],
};
// Gera a especificaÃ§Ã£o do Swagger
const specs = (0, swagger_jsdoc_1.default)(options);
exports.specs = specs;
/**
 * Configura o Swagger na aplicaÃ§Ã£o Express
 * @param app InstÃ¢ncia do Express
 */
const setupSwagger = (app) => {
    // Rota para a documentaÃ§Ã£o do Swagger
    app.use('/api-docs', swagger_ui_express_1.default.serve, swagger_ui_express_1.default.setup(specs, {
        explorer: true,
        customCss: `
      .swagger-ui .topbar { display: none }
      .swagger-ui .info .title { color: #2c3e50; }
      .swagger-ui .scheme-container { background: #f8f9fa; padding: 10px; border-radius: 5px; }
    `,
        customSiteTitle: 'API Contabilidade Igrejinha - DocumentaÃ§Ã£o',
        customfavIcon: '/favicon.ico',
        swaggerOptions: {
            persistAuthorization: true,
            displayRequestDuration: true,
            docExpansion: 'none',
            filter: true,
            showExtensions: true,
            showCommonExtensions: true,
        },
    }));
    // Rota para a especificaÃ§Ã£o OpenAPI em formato JSON
    app.get('/api-docs.json', (req, res) => {
        res.setHeader('Content-Type', 'application/json');
        res.send(specs);
    });
    console.log('ðŸ“š Swagger configurado com sucesso!');
    console.log('ðŸ“– DocumentaÃ§Ã£o disponÃ­vel em: /api-docs');
    console.log('ðŸ“„ EspecificaÃ§Ã£o JSON disponÃ­vel em: /api-docs.json');
};
exports.setupSwagger = setupSwagger;
exports.default = exports.setupSwagger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,