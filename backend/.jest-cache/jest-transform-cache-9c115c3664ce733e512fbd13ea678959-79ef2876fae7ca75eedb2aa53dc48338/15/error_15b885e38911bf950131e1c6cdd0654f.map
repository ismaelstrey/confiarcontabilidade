{"file":"D:\\dev\\contabil\\contabil-site\\backend\\src\\utils\\error.ts","mappings":";;;AAAA;;GAEG;AACH,MAAa,QAAS,SAAQ,KAAK;IACjB,UAAU,CAAS;IACnB,aAAa,CAAU;IAEvC,YAAY,OAAe,EAAE,UAAU,GAAG,GAAG,EAAE,aAAa,GAAG,IAAI;QACjE,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;CACF;AAXD,4BAWC;AAED;;GAEG;AACH,MAAa,eAAgB,SAAQ,QAAQ;IAC3C,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;CACF;AAJD,0CAIC;AAED;;GAEG;AACH,MAAa,mBAAoB,SAAQ,QAAQ;IAC/C,YAAY,OAAO,GAAG,iBAAiB;QACrC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;CACF;AAJD,kDAIC;AAED;;GAEG;AACH,MAAa,kBAAmB,SAAQ,QAAQ;IAC9C,YAAY,OAAO,GAAG,gBAAgB;QACpC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;CACF;AAJD,gDAIC;AAED;;GAEG;AACH,MAAa,aAAc,SAAQ,QAAQ;IACzC,YAAY,OAAO,GAAG,wBAAwB;QAC5C,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;CACF;AAJD,sCAIC;AAED;;GAEG;AACH,MAAa,aAAc,SAAQ,QAAQ;IACzC,YAAY,OAAO,GAAG,sBAAsB;QAC1C,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;CACF;AAJD,sCAIC;AAED;;GAEG;AACH,MAAa,uBAAwB,SAAQ,QAAQ;IACnD,YAAY,OAAO,GAAG,sCAAsC;QAC1D,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;CACF;AAJD,0DAIC;AAED;;GAEG;AACI,MAAM,kBAAkB,GAAG,CAAC,KAAY,EAAW,EAAE;IAC1D,IAAI,KAAK,YAAY,QAAQ,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC,aAAa,CAAC;IAC7B,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AALW,QAAA,kBAAkB,sBAK7B;AAEF;;GAEG;AACI,MAAM,YAAY,GAAG,CAAC,KAAY,EAAE,EAAE;IAC3C,IAAI,KAAK,YAAY,QAAQ,EAAE,CAAC;QAC9B,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,aAAa,EAAE,KAAK,CAAC,aAAa;YAClC,KAAK,EAAE,KAAK,CAAC,KAAK;SACnB,CAAC;IACJ,CAAC;IAED,OAAO;QACL,OAAO,EAAE,KAAK,CAAC,OAAO;QACtB,UAAU,EAAE,GAAG;QACf,aAAa,EAAE,KAAK;QACpB,KAAK,EAAE,KAAK,CAAC,KAAK;KACnB,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,YAAY,gBAgBvB","names":[],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\utils\\error.ts"],"sourcesContent":["/**\r\n * Classe base para erros da aplicação\r\n */\r\nexport class AppError extends Error {\r\n  public readonly statusCode: number;\r\n  public readonly isOperational: boolean;\r\n\r\n  constructor(message: string, statusCode = 400, isOperational = true) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.isOperational = isOperational;\r\n    \r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de validação\r\n */\r\nexport class ValidationError extends AppError {\r\n  constructor(message: string) {\r\n    super(message, 400, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de autenticação\r\n */\r\nexport class AuthenticationError extends AppError {\r\n  constructor(message = 'Não autenticado') {\r\n    super(message, 401, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de autorização\r\n */\r\nexport class AuthorizationError extends AppError {\r\n  constructor(message = 'Não autorizado') {\r\n    super(message, 403, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de recurso não encontrado\r\n */\r\nexport class NotFoundError extends AppError {\r\n  constructor(message = 'Recurso não encontrado') {\r\n    super(message, 404, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de conflito\r\n */\r\nexport class ConflictError extends AppError {\r\n  constructor(message = 'Conflito de recursos') {\r\n    super(message, 409, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de serviço indisponível\r\n */\r\nexport class ServiceUnavailableError extends AppError {\r\n  constructor(message = 'Serviço temporariamente indisponível') {\r\n    super(message, 503, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Função para verificar se um erro é operacional\r\n */\r\nexport const isOperationalError = (error: Error): boolean => {\r\n  if (error instanceof AppError) {\r\n    return error.isOperational;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Função para extrair informações do erro\r\n */\r\nexport const getErrorInfo = (error: Error) => {\r\n  if (error instanceof AppError) {\r\n    return {\r\n      message: error.message,\r\n      statusCode: error.statusCode,\r\n      isOperational: error.isOperational,\r\n      stack: error.stack\r\n    };\r\n  }\r\n  \r\n  return {\r\n    message: error.message,\r\n    statusCode: 500,\r\n    isOperational: false,\r\n    stack: error.stack\r\n  };\r\n};"],"version":3}