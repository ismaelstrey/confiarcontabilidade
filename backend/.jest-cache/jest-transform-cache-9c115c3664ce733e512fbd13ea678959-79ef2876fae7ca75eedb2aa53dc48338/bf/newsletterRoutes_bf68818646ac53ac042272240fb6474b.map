{"version":3,"names":["express_1","cov_fbqzt4lpu","s","require","auth_1","newsletterController_1","router","Router","post","NewsletterController","subscribeValidation","subscribe","get","confirmSubscription","unsubscribe","getPreferences","put","updatePreferences","authenticate","authorize","getSubscribers","getCampaigns","campaignValidation","createCampaign","sendCampaignToSubscribers","exports","default"],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\newsletterRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { authenticate, authorize } from '../middlewares/auth';\r\nimport { NewsletterController } from '../controllers/newsletterController';\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Newsletter:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         email:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         isActive:\r\n *           type: boolean\r\n *         preferences:\r\n *           type: object\r\n *           properties:\r\n *             frequency:\r\n *               type: string\r\n *               enum: [DAILY, WEEKLY, MONTHLY]\r\n *             categories:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *             topics:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *         source:\r\n *           type: string\r\n *         ipAddress:\r\n *           type: string\r\n *         userAgent:\r\n *           type: string\r\n *         confirmedAt:\r\n *           type: string\r\n *           format: date-time\r\n *         unsubscribedAt:\r\n *           type: string\r\n *           format: date-time\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *     NewsletterSubscription:\r\n *       type: object\r\n *       required:\r\n *         - email\r\n *       properties:\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           description: Email para inscrição\r\n *         name:\r\n *           type: string\r\n *           description: Nome do assinante (opcional)\r\n *         preferences:\r\n *           type: object\r\n *           properties:\r\n *             frequency:\r\n *               type: string\r\n *               enum: [DAILY, WEEKLY, MONTHLY]\r\n *               default: WEEKLY\r\n *               description: Frequência de envio\r\n *             categories:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *               description: Categorias de interesse\r\n *             topics:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *               description: Tópicos de interesse\r\n *         source:\r\n *           type: string\r\n *           description: Origem da inscrição (opcional)\r\n *     NewsletterCampaign:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         title:\r\n *           type: string\r\n *         subject:\r\n *           type: string\r\n *         content:\r\n *           type: string\r\n *         htmlContent:\r\n *           type: string\r\n *         status:\r\n *           type: string\r\n *           enum: [DRAFT, SCHEDULED, SENDING, SENT, CANCELLED]\r\n *         scheduledAt:\r\n *           type: string\r\n *           format: date-time\r\n *         sentAt:\r\n *           type: string\r\n *           format: date-time\r\n *         recipientCount:\r\n *           type: integer\r\n *         openCount:\r\n *           type: integer\r\n *         clickCount:\r\n *           type: integer\r\n *         unsubscribeCount:\r\n *           type: integer\r\n *         bounceCount:\r\n *           type: integer\r\n *         createdBy:\r\n *           type: string\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/subscribe:\r\n *   post:\r\n *     summary: Inscrever-se na newsletter\r\n *     tags: [Newsletter]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/NewsletterSubscription'\r\n *     responses:\r\n *       201:\r\n *         description: Inscrição realizada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     confirmationRequired:\r\n *                       type: boolean\r\n *                     subscriptionId:\r\n *                       type: string\r\n *       400:\r\n *         description: Dados inválidos\r\n *       409:\r\n *         description: Email já inscrito\r\n *       429:\r\n *         description: Muitas tentativas - tente novamente mais tarde\r\n */\r\nrouter.post('/subscribe', NewsletterController.subscribeValidation, NewsletterController.subscribe);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/confirm/{token}:\r\n *   get:\r\n *     summary: Confirmar inscrição na newsletter\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token de confirmação\r\n *     responses:\r\n *       200:\r\n *         description: Inscrição confirmada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Token inválido ou expirado\r\n *       404:\r\n *         description: Inscrição não encontrada\r\n */\r\nrouter.get('/confirm/:token', NewsletterController.confirmSubscription);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/unsubscribe/{token}:\r\n *   get:\r\n *     summary: Cancelar inscrição na newsletter\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token de cancelamento\r\n *     responses:\r\n *       200:\r\n *         description: Inscrição cancelada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Token inválido\r\n *       404:\r\n *         description: Inscrição não encontrada\r\n */\r\nrouter.get('/unsubscribe/:token', NewsletterController.unsubscribe);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/preferences/{token}:\r\n *   get:\r\n *     summary: Obter preferências do assinante\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token do assinante\r\n *     responses:\r\n *       200:\r\n *         description: Preferências do assinante\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Newsletter'\r\n *       400:\r\n *         description: Token inválido\r\n *       404:\r\n *         description: Assinante não encontrado\r\n */\r\nrouter.get('/preferences/:token', NewsletterController.getPreferences);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/preferences/{token}:\r\n *   put:\r\n *     summary: Atualizar preferências do assinante\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token do assinante\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               name:\r\n *                 type: string\r\n *                 description: Nome do assinante\r\n *               preferences:\r\n *                 type: object\r\n *                 properties:\r\n *                   frequency:\r\n *                     type: string\r\n *                     enum: [DAILY, WEEKLY, MONTHLY]\r\n *                   categories:\r\n *                     type: array\r\n *                     items:\r\n *                       type: string\r\n *                   topics:\r\n *                     type: array\r\n *                     items:\r\n *                       type: string\r\n *     responses:\r\n *       200:\r\n *         description: Preferências atualizadas com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Newsletter'\r\n *       400:\r\n *         description: Dados inválidos ou token inválido\r\n *       404:\r\n *         description: Assinante não encontrado\r\n */\r\nrouter.put('/preferences/:token', NewsletterController.updatePreferences);\r\n\r\n// Rotas administrativas\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/subscribers:\r\n *   get:\r\n *     summary: Listar assinantes (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: Número da página\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 100\r\n *           default: 20\r\n *         description: Itens por página\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [active, inactive, unconfirmed]\r\n *         description: Filtrar por status\r\n *       - in: query\r\n *         name: search\r\n *         schema:\r\n *           type: string\r\n *         description: Buscar por email ou nome\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data inicial (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data final (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, email, name, confirmedAt]\r\n *           default: createdAt\r\n *         description: Campo para ordenação\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Ordem da classificação\r\n *     responses:\r\n *       200:\r\n *         description: Lista de assinantes\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     subscribers:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Newsletter'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         pages:\r\n *                           type: integer\r\n *                     stats:\r\n *                       type: object\r\n *                       properties:\r\n *                         total:\r\n *                           type: integer\r\n *                         active:\r\n *                           type: integer\r\n *                         inactive:\r\n *                           type: integer\r\n *                         unconfirmed:\r\n *                           type: integer\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n */\r\nrouter.get('/subscribers', authenticate, authorize('ADMIN', 'EDITOR'), NewsletterController.getSubscribers);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/campaigns:\r\n *   get:\r\n *     summary: Listar campanhas (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: Número da página\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 50\r\n *           default: 10\r\n *         description: Itens por página\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [DRAFT, SCHEDULED, SENDING, SENT, CANCELLED]\r\n *         description: Filtrar por status\r\n *     responses:\r\n *       200:\r\n *         description: Lista de campanhas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     campaigns:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/NewsletterCampaign'\r\n *                     pagination:\r\n *                       type: object\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n */\r\nrouter.get('/campaigns', authenticate, authorize('ADMIN', 'EDITOR'), NewsletterController.getCampaigns);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/campaigns:\r\n *   post:\r\n *     summary: Criar nova campanha (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - title\r\n *               - subject\r\n *               - content\r\n *             properties:\r\n *               title:\r\n *                 type: string\r\n *                 minLength: 3\r\n *                 description: Título da campanha\r\n *               subject:\r\n *                 type: string\r\n *                 minLength: 5\r\n *                 description: Assunto do email\r\n *               content:\r\n *                 type: string\r\n *                 minLength: 10\r\n *                 description: Conteúdo da campanha\r\n *               htmlContent:\r\n *                 type: string\r\n *                 description: Conteúdo HTML (opcional)\r\n *               scheduledAt:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Data de agendamento (opcional)\r\n *     responses:\r\n *       201:\r\n *         description: Campanha criada com sucesso\r\n *       400:\r\n *         description: Dados inválidos\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n */\r\nrouter.post('/campaigns', authenticate, authorize('ADMIN', 'EDITOR'), NewsletterController.campaignValidation, NewsletterController.createCampaign);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/campaigns/{id}/send:\r\n *   post:\r\n *     summary: Enviar campanha (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID da campanha\r\n *     responses:\r\n *       200:\r\n *         description: Campanha enviada com sucesso\r\n *       400:\r\n *         description: Campanha não pode ser enviada\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n *       404:\r\n *         description: Campanha não encontrada\r\n */\r\nrouter.post('/campaigns/:id/send', authenticate, authorize('ADMIN'), NewsletterController.sendCampaignToSubscribers);\r\n\r\nexport default router;"],"mappings":"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","ignoreList":[]}