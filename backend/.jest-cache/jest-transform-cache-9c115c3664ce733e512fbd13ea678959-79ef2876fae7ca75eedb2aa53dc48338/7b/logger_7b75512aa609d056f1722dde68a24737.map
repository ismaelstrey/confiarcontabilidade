{"file":"D:\\dev\\contabil\\contabil-site\\backend\\src\\utils\\logger.ts","mappings":"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","names":[],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\utils\\logger.ts"],"sourcesContent":["import * as winston from 'winston';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\n// Criar diretório de logs se não existir\r\nconst logDir = process.env.LOG_FILE_PATH || './logs';\r\nif (!fs.existsSync(logDir)) {\r\n  fs.mkdirSync(logDir, { recursive: true });\r\n}\r\n\r\n// Configuração dos formatos de log\r\nconst logFormat = winston.format.combine(\r\n  winston.format.timestamp({\r\n    format: 'YYYY-MM-DD HH:mm:ss',\r\n  }),\r\n  winston.format.errors({ stack: true }),\r\n  winston.format.json(),\r\n);\r\n\r\n// Formato para console (desenvolvimento)\r\nconst consoleFormat = winston.format.combine(\r\n  winston.format.colorize(),\r\n  winston.format.timestamp({\r\n    format: 'HH:mm:ss',\r\n  }),\r\n  winston.format.printf(({ timestamp, level, message, ...meta }) => {\r\n    let msg = `${timestamp} [${level}]: ${message}`;\r\n    if (Object.keys(meta).length > 0) {\r\n      msg += ` ${JSON.stringify(meta, null, 2)}`;\r\n    }\r\n    return msg;\r\n  }),\r\n);\r\n\r\n// Configuração dos transportes\r\nconst transports: winston.transport[] = [];\r\n\r\n// Console transport (sempre ativo em desenvolvimento)\r\nif (process.env.NODE_ENV !== 'production') {\r\n  transports.push(\r\n    new winston.transports.Console({\r\n      format: consoleFormat,\r\n      level: process.env.LOG_LEVEL || 'info',\r\n    }),\r\n  );\r\n}\r\n\r\n// File transports\r\ntransports.push(\r\n  // Log de erros\r\n  new winston.transports.File({\r\n    filename: path.join(logDir, 'error.log'),\r\n    level: 'error',\r\n    format: logFormat,\r\n    maxsize: 5242880, // 5MB\r\n    maxFiles: 5,\r\n  }),\r\n  // Log combinado\r\n  new winston.transports.File({\r\n    filename: path.join(logDir, 'combined.log'),\r\n    format: logFormat,\r\n    maxsize: 5242880, // 5MB\r\n    maxFiles: 5,\r\n  }),\r\n);\r\n\r\n// Criar instância do logger\r\nconst logger = winston.createLogger({\r\n  level: process.env.LOG_LEVEL || 'info',\r\n  format: logFormat,\r\n  transports,\r\n  // Não sair em caso de erro\r\n  exitOnError: false,\r\n});\r\n\r\n// Função para log de autenticação\r\nexport const logAuth = (\r\n  message: string,\r\n  userId?: string,\r\n  metadata?: Record<string, any>\r\n) => {\r\n  logger.info(message, {\r\n    category: 'auth',\r\n    userId,\r\n    ...metadata,\r\n  });\r\n};\r\n\r\n// Função para log de requisições\r\nexport const logRequest = (\r\n  message: string,\r\n  metadata?: Record<string, any>\r\n) => {\r\n  logger.info(message, {\r\n    category: 'request',\r\n    ...metadata,\r\n  });\r\n};\r\n\r\n// Função para log de operações de banco\r\nexport const logDatabase = (\r\n  message: string,\r\n  metadata?: Record<string, any>\r\n) => {\r\n  logger.info(message, {\r\n    category: 'database',\r\n    ...metadata,\r\n  });\r\n};\r\n\r\n// Função para log de sistema\r\nexport const logSystem = (\r\n  message: string,\r\n  metadata?: Record<string, any>\r\n) => {\r\n  logger.info(message, {\r\n    category: 'system',\r\n    ...metadata,\r\n  });\r\n};\r\n\r\nexport default logger;"],"version":3}