# ==============================================
# Docker Compose - Contabilidade Igrejinha Backend
# ==============================================


services:
  # ==============================================
  # Backend API
  # ==============================================
  backend:
    build:
      context: .
      target: development
    container_name: contabil-backend
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3001}
      - API_VERSION=${API_VERSION:-v1}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - UPLOAD_PATH=/app/uploads
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SWAGGER_ENABLED=${SWAGGER_ENABLED:-true}
    volumes:
      - .:/app
      - /app/node_modules
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - contabil-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ==============================================
  # PostgreSQL Database
  # ==============================================
  postgres:
    image: postgres:15-alpine
    container_name: contabil-postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - contabil-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ==============================================
  # Redis Cache
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: contabil-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - contabil-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s

  # ==============================================
  # PgAdmin (Database Management)
  # ==============================================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: contabil-pgadmin
    ports:
      - "5050:80"
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - contabil-network
    restart: unless-stopped

  # ==============================================
  # Mailhog (Email Testing)
  # ==============================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: contabil-mailhog
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"  # SMTP
      - "${MAILHOG_WEB_PORT:-8025}:8025"  # Web UI
    networks:
      - contabil-network
    restart: unless-stopped

# ==============================================
# Volumes
# ==============================================
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

# ==============================================
# Networks
# ==============================================
networks:
  contabil-network:
    driver: bridge