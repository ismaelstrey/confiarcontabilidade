{"version":3,"names":["cov_lbb5aymm0","actualCoverage","authService_1","s","require","logger_1","__importDefault","authenticateToken","req","res","next","f","authHeader","headers","authorization","token","b","split","status","json","success","message","decoded","authService","verifyAccessToken","user","getUserById","userId","id","email","role","error","default","exports","requireRole","roles","includes","requireAdmin","requireAdminOrModerator","authenticate","authorize","authorizeOwnerOrAdmin","resourceUserId","params"],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\auth.ts"],"sourcesContent":["\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport { authService } from '../services/authService';\r\nimport logger from '../utils/logger';\r\n\r\n// Interface para payload do JWT\r\n\r\n\r\n// Estender interface Request para incluir user\r\ndeclare global {\r\n  namespace Express {\r\n    interface Request {\r\n      user?: {\r\n        id: string;\r\n        email: string;\r\n        role: string;\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware de autenticação JWT\r\n */\r\nexport const authenticateToken = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const authHeader = req.headers.authorization;\r\n    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\r\n\r\n    if (!token) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: 'Token de acesso requerido'\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Verificar token usando authService\r\n    const decoded = await authService.verifyAccessToken(token);\r\n\r\n    if (!decoded) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: 'Token inválido ou expirado'\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Buscar usuário no banco de dados\r\n    const user = await authService.getUserById(decoded.userId);\r\n\r\n    if (!user) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: 'Usuário não encontrado'\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Adicionar usuário ao request\r\n    req.user = {\r\n      id: user.id,\r\n      email: user.email,\r\n      role: user.role\r\n    };\r\n\r\n    next();\r\n  } catch (error: any) {\r\n    logger.error('Erro na autenticação', { error: error.message });\r\n    res.status(401).json({\r\n      success: false,\r\n      message: 'Token inválido'\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Middleware para verificar roles específicas\r\n */\r\nexport const requireRole = (roles: string[]) => {\r\n  return (req: Request, res: Response, next: NextFunction): void => {\r\n    const user = req.user;\r\n\r\n    if (!user) {\r\n      res.status(401).json({\r\n        success: false,\r\n        message: 'Usuário não autenticado'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!roles.includes(user.role)) {\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'Acesso negado. Permissão insuficiente'\r\n      });\r\n      return;\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n\r\n/**\r\n * Middleware para verificar se é admin\r\n */\r\nexport const requireAdmin = requireRole(['ADMIN']);\r\n\r\n/**\r\n * Middleware para verificar se é admin ou moderador\r\n */\r\nexport const requireAdminOrModerator = requireRole(['ADMIN', 'MODERATOR']);\r\n\r\n/**\r\n * Alias para compatibilidade com código existente\r\n */\r\nexport const authenticate = authenticateToken;\r\nexport const authorize = (...roles: string[]) => {\r\n  return requireRole(roles);\r\n};\r\nexport const authorizeOwnerOrAdmin = (req: Request, res: Response, next: NextFunction): void => {\r\n  const user = req.user;\r\n  const resourceUserId = req.params.id || req.params.userId;\r\n\r\n  if (!user) {\r\n    res.status(401).json({\r\n      success: false,\r\n      message: 'Usuário não autenticado'\r\n    });\r\n    return;\r\n  }\r\n\r\n  // Permite se for admin ou se for o próprio usuário\r\n  if (user.role === 'ADMIN' || user.id === resourceUserId) {\r\n    next();\r\n    return;\r\n  }\r\n\r\n  res.status(403).json({\r\n    success: false,\r\n    message: 'Acesso negado. Você só pode acessar seus próprios recursos'\r\n  });\r\n};"],"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","ignoreList":[]}