{"version":3,"names":["express_1","cov_fd7aaceg9","s","require","authController_1","auth_1","router","Router","post","AuthController","register","login","refreshToken","authenticateToken","req","res","f","status","json","success","message","get","getProfile","changePassword","exports","default"],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\authRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { AuthController } from '../controllers/authController';\r\nimport { authenticateToken } from '../middlewares/auth';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     LoginRequest:\r\n *       type: object\r\n *       required:\r\n *         - email\r\n *         - password\r\n *       properties:\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           description: Email do usuário\r\n *         password:\r\n *           type: string\r\n *           minLength: 6\r\n *           description: Senha do usuário\r\n *     RegisterRequest:\r\n *       type: object\r\n *       required:\r\n *         - name\r\n *         - email\r\n *         - password\r\n *       properties:\r\n *         name:\r\n *           type: string\r\n *           minLength: 2\r\n *           description: Nome completo do usuário\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           description: Email do usuário\r\n *         password:\r\n *           type: string\r\n *           minLength: 6\r\n *           description: Senha do usuário\r\n *         role:\r\n *           type: string\r\n *           enum: [USER, ADMIN, MODERATOR]\r\n *           description: Papel do usuário (opcional, padrão USER)\r\n *     AuthResponse:\r\n *       type: object\r\n *       properties:\r\n *         success:\r\n *           type: boolean\r\n *         message:\r\n *           type: string\r\n *         data:\r\n *           type: object\r\n *           properties:\r\n *             user:\r\n *               $ref: '#/components/schemas/User'\r\n *             tokens:\r\n *               type: object\r\n *               properties:\r\n *                 accessToken:\r\n *                   type: string\r\n *                 refreshToken:\r\n *                   type: string\r\n *     User:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         email:\r\n *           type: string\r\n *         role:\r\n *           type: string\r\n *         isActive:\r\n *           type: boolean\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *   securitySchemes:\r\n *     bearerAuth:\r\n *       type: http\r\n *       scheme: bearer\r\n *       bearerFormat: JWT\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/register:\r\n *   post:\r\n *     summary: Registrar novo usuário\r\n *     tags: [Autenticação]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/RegisterRequest'\r\n *     responses:\r\n *       201:\r\n *         description: Usuário registrado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/AuthResponse'\r\n *       400:\r\n *         description: Dados inválidos\r\n *       409:\r\n *         description: Email já cadastrado\r\n */\r\nrouter.post('/register', AuthController.register);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/login:\r\n *   post:\r\n *     summary: Fazer login\r\n *     tags: [Autenticação]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/LoginRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Login realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/AuthResponse'\r\n *       400:\r\n *         description: Dados inválidos\r\n *       401:\r\n *         description: Credenciais inválidas\r\n */\r\nrouter.post('/login', AuthController.login);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/refresh-token:\r\n *   post:\r\n *     summary: Renovar token de acesso\r\n *     tags: [Autenticação]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - refreshToken\r\n *             properties:\r\n *               refreshToken:\r\n *                 type: string\r\n *                 description: Token de renovação\r\n *     responses:\r\n *       200:\r\n *         description: Token renovado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     tokens:\r\n *                       type: object\r\n *                       properties:\r\n *                         accessToken:\r\n *                           type: string\r\n *                         refreshToken:\r\n *                           type: string\r\n *       401:\r\n *         description: Token de renovação inválido\r\n */\r\nrouter.post('/refresh-token', AuthController.refreshToken);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/logout:\r\n *   post:\r\n *     summary: Fazer logout\r\n *     tags: [Autenticação]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Logout realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: Token inválido\r\n */\r\nrouter.post('/logout', authenticateToken, (req, res) => {\r\n  // TODO: Implementar blacklist de tokens para logout\r\n  res.status(200).json({\r\n    success: true,\r\n    message: 'Logout realizado com sucesso'\r\n  });\r\n});\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/me:\r\n *   get:\r\n *     summary: Obter dados do usuário logado\r\n *     tags: [Autenticação]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Dados do usuário\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     user:\r\n *                       $ref: '#/components/schemas/User'\r\n *       401:\r\n *         description: Token inválido\r\n */\r\nrouter.get('/me', authenticateToken, AuthController.getProfile);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/auth/change-password:\r\n *   post:\r\n *     summary: Alterar senha do usuário\r\n *     tags: [Autenticação]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - currentPassword\r\n *               - newPassword\r\n *             properties:\r\n *               currentPassword:\r\n *                 type: string\r\n *                 description: Senha atual\r\n *               newPassword:\r\n *                 type: string\r\n *                 minLength: 6\r\n *                 description: Nova senha\r\n *     responses:\r\n *       200:\r\n *         description: Senha alterada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inválidos\r\n *       401:\r\n *         description: Senha atual incorreta ou token inválido\r\n */\r\nrouter.post('/change-password', authenticateToken, AuthController.changePassword);\r\n\r\nexport default router;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,SAAA;AAAA;AAAA,CAAAC,aAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAC,gBAAA;AAAA;AAAA,CAAAH,aAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAE,MAAA;AAAA;AAAA,CAAAJ,aAAA,GAAAC,CAAA,OAAAC,OAAA;AAEA,MAAMG,MAAM;AAAA;AAAA,CAAAL,aAAA,GAAAC,CAAA,OAAG,IAAAF,SAAA,CAAAO,MAAM,GAAE;AAEvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAN,aAAA,GAAAC,CAAA;AAwBAI,MAAM,CAACE,IAAI,CAAC,WAAW,EAAEJ,gBAAA,CAAAK,cAAc,CAACC,QAAQ,CAAC;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAT,aAAA,GAAAC,CAAA;AAwBAI,MAAM,CAACE,IAAI,CAAC,QAAQ,EAAEJ,gBAAA,CAAAK,cAAc,CAACE,KAAK,CAAC;AAE3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAV,aAAA,GAAAC,CAAA;AAyCAI,MAAM,CAACE,IAAI,CAAC,gBAAgB,EAAEJ,gBAAA,CAAAK,cAAc,CAACG,YAAY,CAAC;AAE1D;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAX,aAAA,GAAAC,CAAA;AAuBAI,MAAM,CAACE,IAAI,CAAC,SAAS,EAAEH,MAAA,CAAAQ,iBAAiB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAI;EAAA;EAAAd,aAAA,GAAAe,CAAA;EAAAf,aAAA,GAAAC,CAAA;EACrD;EACAa,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IACnBC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;GACV,CAAC;AACJ,CAAC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAnB,aAAA,GAAAC,CAAA;AA0BAI,MAAM,CAACe,GAAG,CAAC,KAAK,EAAEhB,MAAA,CAAAQ,iBAAiB,EAAET,gBAAA,CAAAK,cAAc,CAACa,UAAU,CAAC;AAE/D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAArB,aAAA,GAAAC,CAAA;AA0CAI,MAAM,CAACE,IAAI,CAAC,kBAAkB,EAAEH,MAAA,CAAAQ,iBAAiB,EAAET,gBAAA,CAAAK,cAAc,CAACc,cAAc,CAAC;AAAC;AAAAtB,aAAA,GAAAC,CAAA;AAElFsB,OAAA,CAAAC,OAAA,GAAenB,MAAM","ignoreList":[]}