{"file":"D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\contactRoutes.ts","mappings":";;;;;AAAA,qCAAiC;AACjC,8CAA8D;AAC9D,yFAAiE;AAEjE,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuEG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,2BAAiB,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAE1E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmHG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,2BAAiB,CAAC,WAAW,CAAC,CAAC;AAE3F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,2BAAiB,CAAC,cAAc,CAAC,CAAC;AAEjG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4DG;AACH,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,2BAAiB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAEvI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwDG;AACH,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,2BAAiB,CAAC,cAAc,CAAC,CAAC;AAExG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,CAAC,EAAE,2BAAiB,CAAC,aAAa,CAAC,CAAC;AAEzF,kBAAe,MAAM,CAAC","names":[],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\contactRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { authenticate, authorize } from '../middlewares/auth';\r\nimport ContactController from '../controllers/contactController';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Contact:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         email:\r\n *           type: string\r\n *         phone:\r\n *           type: string\r\n *         subject:\r\n *           type: string\r\n *         message:\r\n *           type: string\r\n *         status:\r\n *           type: string\r\n *           enum: [PENDING, IN_PROGRESS, RESOLVED, CLOSED]\r\n *         priority:\r\n *           type: string\r\n *           enum: [LOW, MEDIUM, HIGH, URGENT]\r\n *         assignedTo:\r\n *           type: string\r\n *         notes:\r\n *           type: string\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *         resolvedAt:\r\n *           type: string\r\n *           format: date-time\r\n *     ContactRequest:\r\n *       type: object\r\n *       required:\r\n *         - name\r\n *         - email\r\n *         - subject\r\n *         - message\r\n *       properties:\r\n *         name:\r\n *           type: string\r\n *           minLength: 2\r\n *           description: Nome completo\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           description: Email para contato\r\n *         phone:\r\n *           type: string\r\n *           description: Telefone (opcional)\r\n *         subject:\r\n *           type: string\r\n *           minLength: 5\r\n *           description: Assunto da mensagem\r\n *         message:\r\n *           type: string\r\n *           minLength: 10\r\n *           description: Mensagem detalhada\r\n *         company:\r\n *           type: string\r\n *           description: Empresa (opcional)\r\n *         website:\r\n *           type: string\r\n *           description: Website (opcional)\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/contact:\r\n *   post:\r\n *     summary: Enviar mensagem de contato\r\n *     tags: [Contato]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/ContactRequest'\r\n *     responses:\r\n *       201:\r\n *         description: Mensagem enviada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     id:\r\n *                       type: string\r\n *                     ticketNumber:\r\n *                       type: string\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inválidos\r\n *       429:\r\n *         description: Muitas tentativas - tente novamente mais tarde\r\n */\r\nrouter.post('/', (req, res) => ContactController.createContact(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/contact:\r\n *   get:\r\n *     summary: Listar mensagens de contato (Admin)\r\n *     tags: [Contato]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: Número da página\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 100\r\n *           default: 20\r\n *         description: Itens por página\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [PENDING, IN_PROGRESS, RESOLVED, CLOSED]\r\n *         description: Filtrar por status\r\n *       - in: query\r\n *         name: priority\r\n *         schema:\r\n *           type: string\r\n *           enum: [LOW, MEDIUM, HIGH, URGENT]\r\n *         description: Filtrar por prioridade\r\n *       - in: query\r\n *         name: assignedTo\r\n *         schema:\r\n *           type: string\r\n *         description: Filtrar por responsável\r\n *       - in: query\r\n *         name: search\r\n *         schema:\r\n *           type: string\r\n *         description: Buscar por nome, email ou assunto\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data inicial (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data final (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, updatedAt, priority, status]\r\n *           default: createdAt\r\n *         description: Campo para ordenação\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Ordem da classificação\r\n *     responses:\r\n *       200:\r\n *         description: Lista de mensagens de contato\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     contacts:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Contact'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         pages:\r\n *                           type: integer\r\n *                     stats:\r\n *                       type: object\r\n *                       properties:\r\n *                         pending:\r\n *                           type: integer\r\n *                         inProgress:\r\n *                           type: integer\r\n *                         resolved:\r\n *                           type: integer\r\n *                         closed:\r\n *                           type: integer\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n */\r\nrouter.get('/', authenticate, authorize('ADMIN', 'EDITOR'), ContactController.getContacts);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/contact/{id}:\r\n *   get:\r\n *     summary: Obter mensagem de contato por ID (Admin)\r\n *     tags: [Contato]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID da mensagem\r\n *     responses:\r\n *       200:\r\n *         description: Dados da mensagem de contato\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Contact'\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n *       404:\r\n *         description: Mensagem não encontrada\r\n */\r\nrouter.get('/:id', authenticate, authorize('ADMIN', 'EDITOR'), ContactController.getContactById);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/contact/{id}/status:\r\n *   patch:\r\n *     summary: Atualizar status da mensagem (Admin)\r\n *     tags: [Contato]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID da mensagem\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - status\r\n *             properties:\r\n *               status:\r\n *                 type: string\r\n *                 enum: [PENDING, IN_PROGRESS, RESOLVED, CLOSED]\r\n *                 description: Novo status\r\n *               priority:\r\n *                 type: string\r\n *                 enum: [LOW, MEDIUM, HIGH, URGENT]\r\n *                 description: Nova prioridade (opcional)\r\n *               assignedTo:\r\n *                 type: string\r\n *                 description: ID do usuário responsável (opcional)\r\n *               notes:\r\n *                 type: string\r\n *                 description: Notas internas (opcional)\r\n *     responses:\r\n *       200:\r\n *         description: Status atualizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Contact'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inválidos\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n *       404:\r\n *         description: Mensagem não encontrada\r\n */\r\nrouter.patch('/:id/status', authenticate, authorize('ADMIN', 'EDITOR'), (req, res) => ContactController.updateContactStatus(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/contact/{id}/reply:\r\n *   post:\r\n *     summary: Responder mensagem de contato (Admin)\r\n *     tags: [Contato]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID da mensagem\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - subject\r\n *               - message\r\n *             properties:\r\n *               subject:\r\n *                 type: string\r\n *                 minLength: 5\r\n *                 description: Assunto da resposta\r\n *               message:\r\n *                 type: string\r\n *                 minLength: 10\r\n *                 description: Mensagem de resposta\r\n *               template:\r\n *                 type: string\r\n *                 description: Template de email (opcional)\r\n *     responses:\r\n *       200:\r\n *         description: Resposta enviada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inválidos\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n *       404:\r\n *         description: Mensagem não encontrada\r\n */\r\nrouter.post('/:id/reply', authenticate, authorize('ADMIN', 'EDITOR'), ContactController.replyToContact);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/contact/{id}:\r\n *   delete:\r\n *     summary: Excluir mensagem de contato (Admin)\r\n *     tags: [Contato]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID da mensagem\r\n *     responses:\r\n *       200:\r\n *         description: Mensagem excluída com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n *       404:\r\n *         description: Mensagem não encontrada\r\n */\r\nrouter.delete('/:id', authenticate, authorize('ADMIN'), ContactController.deleteContact);\r\n\r\nexport default router;"],"version":3}