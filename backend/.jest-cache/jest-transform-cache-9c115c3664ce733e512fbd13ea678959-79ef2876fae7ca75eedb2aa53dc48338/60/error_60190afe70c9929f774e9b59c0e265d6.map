{"version":3,"names":["cov_2q3rzgh2ma","actualCoverage","s","AppError","Error","statusCode","isOperational","constructor","message","b","f","captureStackTrace","exports","ValidationError","AuthenticationError","AuthorizationError","NotFoundError","ConflictError","ServiceUnavailableError","isOperationalError","error","getErrorInfo","stack"],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\utils\\error.ts"],"sourcesContent":["/**\r\n * Classe base para erros da aplicação\r\n */\r\nexport class AppError extends Error {\r\n  public readonly statusCode: number;\r\n  public readonly isOperational: boolean;\r\n\r\n  constructor(message: string, statusCode = 400, isOperational = true) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.isOperational = isOperational;\r\n    \r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de validação\r\n */\r\nexport class ValidationError extends AppError {\r\n  constructor(message: string) {\r\n    super(message, 400, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de autenticação\r\n */\r\nexport class AuthenticationError extends AppError {\r\n  constructor(message = 'Não autenticado') {\r\n    super(message, 401, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de autorização\r\n */\r\nexport class AuthorizationError extends AppError {\r\n  constructor(message = 'Não autorizado') {\r\n    super(message, 403, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de recurso não encontrado\r\n */\r\nexport class NotFoundError extends AppError {\r\n  constructor(message = 'Recurso não encontrado') {\r\n    super(message, 404, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de conflito\r\n */\r\nexport class ConflictError extends AppError {\r\n  constructor(message = 'Conflito de recursos') {\r\n    super(message, 409, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Erro de serviço indisponível\r\n */\r\nexport class ServiceUnavailableError extends AppError {\r\n  constructor(message = 'Serviço temporariamente indisponível') {\r\n    super(message, 503, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Função para verificar se um erro é operacional\r\n */\r\nexport const isOperationalError = (error: Error): boolean => {\r\n  if (error instanceof AppError) {\r\n    return error.isOperational;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Função para extrair informações do erro\r\n */\r\nexport const getErrorInfo = (error: Error) => {\r\n  if (error instanceof AppError) {\r\n    return {\r\n      message: error.message,\r\n      statusCode: error.statusCode,\r\n      isOperational: error.isOperational,\r\n      stack: error.stack\r\n    };\r\n  }\r\n  \r\n  return {\r\n    message: error.message,\r\n    statusCode: 500,\r\n    isOperational: false,\r\n    stack: error.stack\r\n  };\r\n};"],"mappings":"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","ignoreList":[]}