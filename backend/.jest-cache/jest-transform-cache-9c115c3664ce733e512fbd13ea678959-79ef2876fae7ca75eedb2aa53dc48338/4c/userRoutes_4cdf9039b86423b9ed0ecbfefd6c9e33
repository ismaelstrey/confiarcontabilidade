be0d49cc3872b949f008a9202e622200
"use strict";

/* istanbul ignore next */
function cov_29kz6n9x65() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\userRoutes.ts";
  var hash = "819a117d329435147f7dc82f3c1764f41fef03f2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\userRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 9,
          column: 82
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "8": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 144,
          column: 120
        }
      },
      "9": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 145,
          column: 151
        }
      },
      "10": {
        start: {
          line: 145,
          column: 96
        },
        end: {
          line: 145,
          column: 108
        }
      },
      "11": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 179,
          column: 84
        }
      },
      "12": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 211,
          column: 93
        }
      },
      "13": {
        start: {
          line: 255,
          column: 0
        },
        end: {
          line: 255,
          column: 83
        }
      },
      "14": {
        start: {
          line: 298,
          column: 0
        },
        end: {
          line: 298,
          column: 94
        }
      },
      "15": {
        start: {
          line: 411,
          column: 0
        },
        end: {
          line: 411,
          column: 145
        }
      },
      "16": {
        start: {
          line: 449,
          column: 0
        },
        end: {
          line: 449,
          column: 107
        }
      },
      "17": {
        start: {
          line: 484,
          column: 0
        },
        end: {
          line: 484,
          column: 147
        }
      },
      "18": {
        start: {
          line: 550,
          column: 0
        },
        end: {
          line: 550,
          column: 183
        }
      },
      "19": {
        start: {
          line: 550,
          column: 124
        },
        end: {
          line: 550,
          column: 143
        }
      },
      "20": {
        start: {
          line: 604,
          column: 0
        },
        end: {
          line: 604,
          column: 124
        }
      },
      "21": {
        start: {
          line: 639,
          column: 0
        },
        end: {
          line: 639,
          column: 186
        }
      },
      "22": {
        start: {
          line: 639,
          column: 127
        },
        end: {
          line: 639,
          column: 146
        }
      },
      "23": {
        start: {
          line: 640,
          column: 0
        },
        end: {
          line: 640,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 145,
            column: 87
          },
          end: {
            line: 145,
            column: 88
          }
        },
        loc: {
          start: {
            line: 145,
            column: 96
          },
          end: {
            line: 145,
            column: 108
          }
        },
        line: 145
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 550,
            column: 115
          },
          end: {
            line: 550,
            column: 116
          }
        },
        loc: {
          start: {
            line: 550,
            column: 124
          },
          end: {
            line: 550,
            column: 143
          }
        },
        line: 550
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 639,
            column: 118
          },
          end: {
            line: 639,
            column: 119
          }
        },
        loc: {
          start: {
            line: 639,
            column: 127
          },
          end: {
            line: 639,
            column: 146
          }
        },
        line: 639
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 550,
            column: 124
          },
          end: {
            line: 550,
            column: 143
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 550,
            column: 124
          },
          end: {
            line: 550,
            column: 137
          }
        }, {
          start: {
            line: 550,
            column: 141
          },
          end: {
            line: 550,
            column: 143
          }
        }],
        line: 550
      },
      "4": {
        loc: {
          start: {
            line: 639,
            column: 127
          },
          end: {
            line: 639,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 639,
            column: 127
          },
          end: {
            line: 639,
            column: 140
          }
        }, {
          start: {
            line: 639,
            column: 144
          },
          end: {
            line: 639,
            column: 146
          }
        }],
        line: 639
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\userRoutes.ts",
      mappings: "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",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\userRoutes.ts"],
      sourcesContent: ["import { Router, Request, Response } from 'express';\r\nimport { authenticate, authorize, authorizeOwnerOrAdmin } from '../middlewares/auth';\r\nimport {\r\n  userCacheMiddleware,\r\n  publicCacheMiddleware,\r\n  invalidateUserCacheMiddleware\r\n} from '../middlewares/cache';\r\nimport UserController from '../controllers/userController';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     UserProfile:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         email:\r\n *           type: string\r\n *         role:\r\n *           type: string\r\n *           enum: [ADMIN, EDITOR, USER]\r\n *         avatar:\r\n *           type: string\r\n *         phone:\r\n *           type: string\r\n *         bio:\r\n *           type: string\r\n *         website:\r\n *           type: string\r\n *         location:\r\n *           type: string\r\n *         isActive:\r\n *           type: boolean\r\n *         emailVerified:\r\n *           type: boolean\r\n *         lastLoginAt:\r\n *           type: string\r\n *           format: date-time\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *     UpdateProfileRequest:\r\n *       type: object\r\n *       properties:\r\n *         name:\r\n *           type: string\r\n *           minLength: 2\r\n *           description: Nome completo\r\n *         phone:\r\n *           type: string\r\n *           description: Telefone\r\n *         bio:\r\n *           type: string\r\n *           maxLength: 500\r\n *           description: Biografia\r\n *         website:\r\n *           type: string\r\n *           description: Website pessoal\r\n *         location:\r\n *           type: string\r\n *           description: Localiza\xE7\xE3o\r\n *         avatar:\r\n *           type: string\r\n *           description: URL do avatar\r\n *     ChangePasswordRequest:\r\n *       type: object\r\n *       required:\r\n *         - currentPassword\r\n *         - newPassword\r\n *       properties:\r\n *         currentPassword:\r\n *           type: string\r\n *           description: Senha atual\r\n *         newPassword:\r\n *           type: string\r\n *           minLength: 6\r\n *           description: Nova senha\r\n *         confirmPassword:\r\n *           type: string\r\n *           description: Confirma\xE7\xE3o da nova senha\r\n *     CreateUserRequest:\r\n *       type: object\r\n *       required:\r\n *         - name\r\n *         - email\r\n *         - password\r\n *         - role\r\n *       properties:\r\n *         name:\r\n *           type: string\r\n *           minLength: 2\r\n *           description: Nome completo\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           description: Email do usu\xE1rio\r\n *         password:\r\n *           type: string\r\n *           minLength: 6\r\n *           description: Senha do usu\xE1rio\r\n *         role:\r\n *           type: string\r\n *           enum: [ADMIN, EDITOR, USER]\r\n *           description: Papel do usu\xE1rio\r\n *         phone:\r\n *           type: string\r\n *           description: Telefone (opcional)\r\n *         isActive:\r\n *           type: boolean\r\n *           default: true\r\n *           description: Status ativo\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/profile:\r\n *   get:\r\n *     summary: Obter perfil do usu\xE1rio logado\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Dados do perfil\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/UserProfile'\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n */\r\nrouter.get('/profile', authenticate, userCacheMiddleware(600), UserController.getProfile);\r\n\r\nrouter.put('/profile', authenticate, invalidateUserCacheMiddleware((req) => (req as any).user?.id), UserController.updateProfile);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/profile:\r\n *   put:\r\n *     summary: Atualizar perfil do usu\xE1rio logado\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/UpdateProfileRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Perfil atualizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/UserProfile'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n */\r\nrouter.put('/profile', authenticate, UserController.updateProfile);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/change-password:\r\n *   put:\r\n *     summary: Alterar senha do usu\xE1rio logado\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/ChangePasswordRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Senha alterada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos ou senha atual incorreta\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n */\r\nrouter.put('/change-password', authenticate, UserController.changePassword);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/avatar:\r\n *   post:\r\n *     summary: Upload de avatar do usu\xE1rio\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               avatar:\r\n *                 type: string\r\n *                 format: binary\r\n *                 description: Imagem do avatar (JPG, PNG, GIF)\r\n *     responses:\r\n *       200:\r\n *         description: Avatar atualizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     avatarUrl:\r\n *                       type: string\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Arquivo inv\xE1lido\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       413:\r\n *         description: Arquivo muito grande\r\n */\r\nrouter.post('/avatar', authenticate, UserController.uploadAvatar);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/delete-account:\r\n *   delete:\r\n *     summary: Excluir conta do usu\xE1rio logado\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - password\r\n *               - confirmation\r\n *             properties:\r\n *               password:\r\n *                 type: string\r\n *                 description: Senha atual para confirma\xE7\xE3o\r\n *               confirmation:\r\n *                 type: string\r\n *                 enum: [DELETE_MY_ACCOUNT]\r\n *                 description: Texto de confirma\xE7\xE3o\r\n *     responses:\r\n *       200:\r\n *         description: Conta exclu\xEDda com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos ou senha incorreta\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n */\r\nrouter.delete('/delete-account', authenticate, UserController.deleteAccount);\r\n\r\n// Rotas administrativas\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users:\r\n *   get:\r\n *     summary: Listar usu\xE1rios (Admin)\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: N\xFAmero da p\xE1gina\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 100\r\n *           default: 20\r\n *         description: Itens por p\xE1gina\r\n *       - in: query\r\n *         name: role\r\n *         schema:\r\n *           type: string\r\n *           enum: [ADMIN, EDITOR, USER]\r\n *         description: Filtrar por papel\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [active, inactive]\r\n *         description: Filtrar por status\r\n *       - in: query\r\n *         name: search\r\n *         schema:\r\n *           type: string\r\n *         description: Buscar por nome ou email\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data inicial (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data final (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, name, email, lastLoginAt]\r\n *           default: createdAt\r\n *         description: Campo para ordena\xE7\xE3o\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Ordem da classifica\xE7\xE3o\r\n *     responses:\r\n *       200:\r\n *         description: Lista de usu\xE1rios\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     users:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/UserProfile'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         pages:\r\n *                           type: integer\r\n *                     stats:\r\n *                       type: object\r\n *                       properties:\r\n *                         total:\r\n *                           type: integer\r\n *                         active:\r\n *                           type: integer\r\n *                         inactive:\r\n *                           type: integer\r\n *                         byRole:\r\n *                           type: object\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n */\r\nrouter.get('/', authenticate, authorize('ADMIN'), publicCacheMiddleware(300), UserController.getUsers);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users:\r\n *   post:\r\n *     summary: Criar novo usu\xE1rio (Admin)\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreateUserRequest'\r\n *     responses:\r\n *       201:\r\n *         description: Usu\xE1rio criado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/UserProfile'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       409:\r\n *         description: Email j\xE1 cadastrado\r\n */\r\nrouter.post('/', authenticate, authorize('ADMIN'), UserController.createUser);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/{id}:\r\n *   get:\r\n *     summary: Obter usu\xE1rio por ID\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do usu\xE1rio\r\n *     responses:\r\n *       200:\r\n *         description: Dados do usu\xE1rio\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/UserProfile'\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Usu\xE1rio n\xE3o encontrado\r\n */\r\nrouter.get('/:id', authenticate, authorizeOwnerOrAdmin, userCacheMiddleware(600), UserController.getUserById);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/{id}:\r\n *   put:\r\n *     summary: Atualizar usu\xE1rio (Admin)\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do usu\xE1rio\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               name:\r\n *                 type: string\r\n *               email:\r\n *                 type: string\r\n *                 format: email\r\n *               role:\r\n *                 type: string\r\n *                 enum: [ADMIN, EDITOR, USER]\r\n *               phone:\r\n *                 type: string\r\n *               isActive:\r\n *                 type: boolean\r\n *               bio:\r\n *                 type: string\r\n *               website:\r\n *                 type: string\r\n *               location:\r\n *                 type: string\r\n *     responses:\r\n *       200:\r\n *         description: Usu\xE1rio atualizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/UserProfile'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Usu\xE1rio n\xE3o encontrado\r\n *       409:\r\n *         description: Email j\xE1 cadastrado\r\n */\r\nrouter.put('/:id', authenticate, authorize('ADMIN'), invalidateUserCacheMiddleware((req) => req.params.id || ''), UserController.updateUser);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/{id}/status:\r\n *   patch:\r\n *     summary: Alterar status do usu\xE1rio (Admin)\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do usu\xE1rio\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - isActive\r\n *             properties:\r\n *               isActive:\r\n *                 type: boolean\r\n *                 description: Novo status ativo\r\n *               reason:\r\n *                 type: string\r\n *                 description: Motivo da altera\xE7\xE3o (opcional)\r\n *     responses:\r\n *       200:\r\n *         description: Status alterado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/UserProfile'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Usu\xE1rio n\xE3o encontrado\r\n */\r\nrouter.patch('/:id/status', authenticate, authorize('ADMIN'), UserController.updateUserStatus);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/users/{id}:\r\n *   delete:\r\n *     summary: Excluir usu\xE1rio (Admin)\r\n *     tags: [Usu\xE1rios]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID do usu\xE1rio\r\n *     responses:\r\n *       200:\r\n *         description: Usu\xE1rio exclu\xEDdo com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Usu\xE1rio n\xE3o encontrado\r\n */\r\nrouter.delete('/:id', authenticate, authorize('ADMIN'), invalidateUserCacheMiddleware((req) => req.params.id || ''), UserController.deleteUser);\r\n\r\nexport default router;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "819a117d329435147f7dc82f3c1764f41fef03f2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29kz6n9x65 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29kz6n9x65();
var __importDefault =
/* istanbul ignore next */
(cov_29kz6n9x65().s[0]++,
/* istanbul ignore next */
(cov_29kz6n9x65().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_29kz6n9x65().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_29kz6n9x65().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_29kz6n9x65().f[0]++;
  cov_29kz6n9x65().s[1]++;
  return /* istanbul ignore next */(cov_29kz6n9x65().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_29kz6n9x65().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_29kz6n9x65().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_29kz6n9x65().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_29kz6n9x65().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_29kz6n9x65().s[3]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_29kz6n9x65().s[4]++, require("../middlewares/auth"));
const cache_1 =
/* istanbul ignore next */
(cov_29kz6n9x65().s[5]++, require("../middlewares/cache"));
const userController_1 =
/* istanbul ignore next */
(cov_29kz6n9x65().s[6]++, __importDefault(require("../controllers/userController")));
const router =
/* istanbul ignore next */
(cov_29kz6n9x65().s[7]++, (0, express_1.Router)());
/**
 * @swagger
 * components:
 *   schemas:
 *     UserProfile:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         name:
 *           type: string
 *         email:
 *           type: string
 *         role:
 *           type: string
 *           enum: [ADMIN, EDITOR, USER]
 *         avatar:
 *           type: string
 *         phone:
 *           type: string
 *         bio:
 *           type: string
 *         website:
 *           type: string
 *         location:
 *           type: string
 *         isActive:
 *           type: boolean
 *         emailVerified:
 *           type: boolean
 *         lastLoginAt:
 *           type: string
 *           format: date-time
 *         createdAt:
 *           type: string
 *           format: date-time
 *         updatedAt:
 *           type: string
 *           format: date-time
 *     UpdateProfileRequest:
 *       type: object
 *       properties:
 *         name:
 *           type: string
 *           minLength: 2
 *           description: Nome completo
 *         phone:
 *           type: string
 *           description: Telefone
 *         bio:
 *           type: string
 *           maxLength: 500
 *           description: Biografia
 *         website:
 *           type: string
 *           description: Website pessoal
 *         location:
 *           type: string
 *           description: Localização
 *         avatar:
 *           type: string
 *           description: URL do avatar
 *     ChangePasswordRequest:
 *       type: object
 *       required:
 *         - currentPassword
 *         - newPassword
 *       properties:
 *         currentPassword:
 *           type: string
 *           description: Senha atual
 *         newPassword:
 *           type: string
 *           minLength: 6
 *           description: Nova senha
 *         confirmPassword:
 *           type: string
 *           description: Confirmação da nova senha
 *     CreateUserRequest:
 *       type: object
 *       required:
 *         - name
 *         - email
 *         - password
 *         - role
 *       properties:
 *         name:
 *           type: string
 *           minLength: 2
 *           description: Nome completo
 *         email:
 *           type: string
 *           format: email
 *           description: Email do usuário
 *         password:
 *           type: string
 *           minLength: 6
 *           description: Senha do usuário
 *         role:
 *           type: string
 *           enum: [ADMIN, EDITOR, USER]
 *           description: Papel do usuário
 *         phone:
 *           type: string
 *           description: Telefone (opcional)
 *         isActive:
 *           type: boolean
 *           default: true
 *           description: Status ativo
 */
/**
 * @swagger
 * /api/v1/users/profile:
 *   get:
 *     summary: Obter perfil do usuário logado
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Dados do perfil
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserProfile'
 *       401:
 *         description: Token inválido
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[8]++;
router.get('/profile', auth_1.authenticate, (0, cache_1.userCacheMiddleware)(600), userController_1.default.getProfile);
/* istanbul ignore next */
cov_29kz6n9x65().s[9]++;
router.put('/profile', auth_1.authenticate, (0, cache_1.invalidateUserCacheMiddleware)(req => {
  /* istanbul ignore next */
  cov_29kz6n9x65().f[1]++;
  cov_29kz6n9x65().s[10]++;
  return req.user?.id;
}), userController_1.default.updateProfile);
/**
 * @swagger
 * /api/v1/users/profile:
 *   put:
 *     summary: Atualizar perfil do usuário logado
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/UpdateProfileRequest'
 *     responses:
 *       200:
 *         description: Perfil atualizado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserProfile'
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[11]++;
router.put('/profile', auth_1.authenticate, userController_1.default.updateProfile);
/**
 * @swagger
 * /api/v1/users/change-password:
 *   put:
 *     summary: Alterar senha do usuário logado
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ChangePasswordRequest'
 *     responses:
 *       200:
 *         description: Senha alterada com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos ou senha atual incorreta
 *       401:
 *         description: Token inválido
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[12]++;
router.put('/change-password', auth_1.authenticate, userController_1.default.changePassword);
/**
 * @swagger
 * /api/v1/users/avatar:
 *   post:
 *     summary: Upload de avatar do usuário
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               avatar:
 *                 type: string
 *                 format: binary
 *                 description: Imagem do avatar (JPG, PNG, GIF)
 *     responses:
 *       200:
 *         description: Avatar atualizado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     avatarUrl:
 *                       type: string
 *                 message:
 *                   type: string
 *       400:
 *         description: Arquivo inválido
 *       401:
 *         description: Token inválido
 *       413:
 *         description: Arquivo muito grande
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[13]++;
router.post('/avatar', auth_1.authenticate, userController_1.default.uploadAvatar);
/**
 * @swagger
 * /api/v1/users/delete-account:
 *   delete:
 *     summary: Excluir conta do usuário logado
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - password
 *               - confirmation
 *             properties:
 *               password:
 *                 type: string
 *                 description: Senha atual para confirmação
 *               confirmation:
 *                 type: string
 *                 enum: [DELETE_MY_ACCOUNT]
 *                 description: Texto de confirmação
 *     responses:
 *       200:
 *         description: Conta excluída com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos ou senha incorreta
 *       401:
 *         description: Token inválido
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[14]++;
router.delete('/delete-account', auth_1.authenticate, userController_1.default.deleteAccount);
// Rotas administrativas
/**
 * @swagger
 * /api/v1/users:
 *   get:
 *     summary: Listar usuários (Admin)
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *           minimum: 1
 *           default: 1
 *         description: Número da página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           minimum: 1
 *           maximum: 100
 *           default: 20
 *         description: Itens por página
 *       - in: query
 *         name: role
 *         schema:
 *           type: string
 *           enum: [ADMIN, EDITOR, USER]
 *         description: Filtrar por papel
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [active, inactive]
 *         description: Filtrar por status
 *       - in: query
 *         name: search
 *         schema:
 *           type: string
 *         description: Buscar por nome ou email
 *       - in: query
 *         name: dateFrom
 *         schema:
 *           type: string
 *           format: date
 *         description: Data inicial (YYYY-MM-DD)
 *       - in: query
 *         name: dateTo
 *         schema:
 *           type: string
 *           format: date
 *         description: Data final (YYYY-MM-DD)
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [createdAt, name, email, lastLoginAt]
 *           default: createdAt
 *         description: Campo para ordenação
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Ordem da classificação
 *     responses:
 *       200:
 *         description: Lista de usuários
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     users:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/UserProfile'
 *                     pagination:
 *                       type: object
 *                       properties:
 *                         page:
 *                           type: integer
 *                         limit:
 *                           type: integer
 *                         total:
 *                           type: integer
 *                         pages:
 *                           type: integer
 *                     stats:
 *                       type: object
 *                       properties:
 *                         total:
 *                           type: integer
 *                         active:
 *                           type: integer
 *                         inactive:
 *                           type: integer
 *                         byRole:
 *                           type: object
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[15]++;
router.get('/', auth_1.authenticate, (0, auth_1.authorize)('ADMIN'), (0, cache_1.publicCacheMiddleware)(300), userController_1.default.getUsers);
/**
 * @swagger
 * /api/v1/users:
 *   post:
 *     summary: Criar novo usuário (Admin)
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreateUserRequest'
 *     responses:
 *       201:
 *         description: Usuário criado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserProfile'
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       409:
 *         description: Email já cadastrado
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[16]++;
router.post('/', auth_1.authenticate, (0, auth_1.authorize)('ADMIN'), userController_1.default.createUser);
/**
 * @swagger
 * /api/v1/users/{id}:
 *   get:
 *     summary: Obter usuário por ID
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do usuário
 *     responses:
 *       200:
 *         description: Dados do usuário
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserProfile'
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Usuário não encontrado
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[17]++;
router.get('/:id', auth_1.authenticate, auth_1.authorizeOwnerOrAdmin, (0, cache_1.userCacheMiddleware)(600), userController_1.default.getUserById);
/**
 * @swagger
 * /api/v1/users/{id}:
 *   put:
 *     summary: Atualizar usuário (Admin)
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do usuário
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               email:
 *                 type: string
 *                 format: email
 *               role:
 *                 type: string
 *                 enum: [ADMIN, EDITOR, USER]
 *               phone:
 *                 type: string
 *               isActive:
 *                 type: boolean
 *               bio:
 *                 type: string
 *               website:
 *                 type: string
 *               location:
 *                 type: string
 *     responses:
 *       200:
 *         description: Usuário atualizado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserProfile'
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Usuário não encontrado
 *       409:
 *         description: Email já cadastrado
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[18]++;
router.put('/:id', auth_1.authenticate, (0, auth_1.authorize)('ADMIN'), (0, cache_1.invalidateUserCacheMiddleware)(req => {
  /* istanbul ignore next */
  cov_29kz6n9x65().f[2]++;
  cov_29kz6n9x65().s[19]++;
  return /* istanbul ignore next */(cov_29kz6n9x65().b[3][0]++, req.params.id) ||
  /* istanbul ignore next */
  (cov_29kz6n9x65().b[3][1]++, '');
}), userController_1.default.updateUser);
/**
 * @swagger
 * /api/v1/users/{id}/status:
 *   patch:
 *     summary: Alterar status do usuário (Admin)
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do usuário
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - isActive
 *             properties:
 *               isActive:
 *                 type: boolean
 *                 description: Novo status ativo
 *               reason:
 *                 type: string
 *                 description: Motivo da alteração (opcional)
 *     responses:
 *       200:
 *         description: Status alterado com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserProfile'
 *                 message:
 *                   type: string
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Usuário não encontrado
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[20]++;
router.patch('/:id/status', auth_1.authenticate, (0, auth_1.authorize)('ADMIN'), userController_1.default.updateUserStatus);
/**
 * @swagger
 * /api/v1/users/{id}:
 *   delete:
 *     summary: Excluir usuário (Admin)
 *     tags: [Usuários]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID do usuário
 *     responses:
 *       200:
 *         description: Usuário excluído com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Usuário não encontrado
 */
/* istanbul ignore next */
cov_29kz6n9x65().s[21]++;
router.delete('/:id', auth_1.authenticate, (0, auth_1.authorize)('ADMIN'), (0, cache_1.invalidateUserCacheMiddleware)(req => {
  /* istanbul ignore next */
  cov_29kz6n9x65().f[3]++;
  cov_29kz6n9x65().s[22]++;
  return /* istanbul ignore next */(cov_29kz6n9x65().b[4][0]++, req.params.id) ||
  /* istanbul ignore next */
  (cov_29kz6n9x65().b[4][1]++, '');
}), userController_1.default.deleteUser);
/* istanbul ignore next */
cov_29kz6n9x65().s[23]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,