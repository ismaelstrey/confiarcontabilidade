69d848e64322646124d611613abafd4c
"use strict";

/* istanbul ignore next */
function cov_fbqzt4lpu() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\newsletterRoutes.ts";
  var hash = "53c495ef79c3f1fbb2e28569369f583bdf76dd28";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\newsletterRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 45
        }
      },
      "3": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 5,
          column: 77
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "5": {
        start: {
          line: 166,
          column: 0
        },
        end: {
          line: 166,
          column: 146
        }
      },
      "6": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 197,
          column: 95
        }
      },
      "7": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 228,
          column: 91
        }
      },
      "8": {
        start: {
          line: 259,
          column: 0
        },
        end: {
          line: 259,
          column: 94
        }
      },
      "9": {
        start: {
          line: 316,
          column: 0
        },
        end: {
          line: 316,
          column: 97
        }
      },
      "10": {
        start: {
          line: 423,
          column: 0
        },
        end: {
          line: 423,
          column: 150
        }
      },
      "11": {
        start: {
          line: 478,
          column: 0
        },
        end: {
          line: 478,
          column: 146
        }
      },
      "12": {
        start: {
          line: 527,
          column: 0
        },
        end: {
          line: 527,
          column: 213
        }
      },
      "13": {
        start: {
          line: 555,
          column: 0
        },
        end: {
          line: 555,
          column: 159
        }
      },
      "14": {
        start: {
          line: 556,
          column: 0
        },
        end: {
          line: 556,
          column: 25
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\newsletterRoutes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,8CAA8D;AAC9D,8EAA2E;AAC3E,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwHG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCG;AACH,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,2CAAoB,CAAC,mBAAmB,EAAE,2CAAoB,CAAC,SAAS,CAAC,CAAC;AAEpG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,2CAAoB,CAAC,mBAAmB,CAAC,CAAC;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,2CAAoB,CAAC,WAAW,CAAC,CAAC;AAEpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,2CAAoB,CAAC,cAAc,CAAC,CAAC;AAEvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuDG;AACH,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,2CAAoB,CAAC,iBAAiB,CAAC,CAAC;AAE1E,wBAAwB;AAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwGG;AACH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,2CAAoB,CAAC,cAAc,CAAC,CAAC;AAE5G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqDG;AACH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,2CAAoB,CAAC,YAAY,CAAC,CAAC;AAExG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AACH,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,2CAAoB,CAAC,kBAAkB,EAAE,2CAAoB,CAAC,cAAc,CAAC,CAAC;AAEpJ;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,mBAAY,EAAE,IAAA,gBAAS,EAAC,OAAO,CAAC,EAAE,2CAAoB,CAAC,yBAAyB,CAAC,CAAC;AAErH,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\newsletterRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport { authenticate, authorize } from '../middlewares/auth';\r\nimport { NewsletterController } from '../controllers/newsletterController';\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Newsletter:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         email:\r\n *           type: string\r\n *         name:\r\n *           type: string\r\n *         isActive:\r\n *           type: boolean\r\n *         preferences:\r\n *           type: object\r\n *           properties:\r\n *             frequency:\r\n *               type: string\r\n *               enum: [DAILY, WEEKLY, MONTHLY]\r\n *             categories:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *             topics:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *         source:\r\n *           type: string\r\n *         ipAddress:\r\n *           type: string\r\n *         userAgent:\r\n *           type: string\r\n *         confirmedAt:\r\n *           type: string\r\n *           format: date-time\r\n *         unsubscribedAt:\r\n *           type: string\r\n *           format: date-time\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *     NewsletterSubscription:\r\n *       type: object\r\n *       required:\r\n *         - email\r\n *       properties:\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           description: Email para inscri\xE7\xE3o\r\n *         name:\r\n *           type: string\r\n *           description: Nome do assinante (opcional)\r\n *         preferences:\r\n *           type: object\r\n *           properties:\r\n *             frequency:\r\n *               type: string\r\n *               enum: [DAILY, WEEKLY, MONTHLY]\r\n *               default: WEEKLY\r\n *               description: Frequ\xEAncia de envio\r\n *             categories:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *               description: Categorias de interesse\r\n *             topics:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *               description: T\xF3picos de interesse\r\n *         source:\r\n *           type: string\r\n *           description: Origem da inscri\xE7\xE3o (opcional)\r\n *     NewsletterCampaign:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         title:\r\n *           type: string\r\n *         subject:\r\n *           type: string\r\n *         content:\r\n *           type: string\r\n *         htmlContent:\r\n *           type: string\r\n *         status:\r\n *           type: string\r\n *           enum: [DRAFT, SCHEDULED, SENDING, SENT, CANCELLED]\r\n *         scheduledAt:\r\n *           type: string\r\n *           format: date-time\r\n *         sentAt:\r\n *           type: string\r\n *           format: date-time\r\n *         recipientCount:\r\n *           type: integer\r\n *         openCount:\r\n *           type: integer\r\n *         clickCount:\r\n *           type: integer\r\n *         unsubscribeCount:\r\n *           type: integer\r\n *         bounceCount:\r\n *           type: integer\r\n *         createdBy:\r\n *           type: string\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/subscribe:\r\n *   post:\r\n *     summary: Inscrever-se na newsletter\r\n *     tags: [Newsletter]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/NewsletterSubscription'\r\n *     responses:\r\n *       201:\r\n *         description: Inscri\xE7\xE3o realizada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     confirmationRequired:\r\n *                       type: boolean\r\n *                     subscriptionId:\r\n *                       type: string\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       409:\r\n *         description: Email j\xE1 inscrito\r\n *       429:\r\n *         description: Muitas tentativas - tente novamente mais tarde\r\n */\r\nrouter.post('/subscribe', NewsletterController.subscribeValidation, NewsletterController.subscribe);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/confirm/{token}:\r\n *   get:\r\n *     summary: Confirmar inscri\xE7\xE3o na newsletter\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token de confirma\xE7\xE3o\r\n *     responses:\r\n *       200:\r\n *         description: Inscri\xE7\xE3o confirmada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Token inv\xE1lido ou expirado\r\n *       404:\r\n *         description: Inscri\xE7\xE3o n\xE3o encontrada\r\n */\r\nrouter.get('/confirm/:token', NewsletterController.confirmSubscription);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/unsubscribe/{token}:\r\n *   get:\r\n *     summary: Cancelar inscri\xE7\xE3o na newsletter\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token de cancelamento\r\n *     responses:\r\n *       200:\r\n *         description: Inscri\xE7\xE3o cancelada com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Token inv\xE1lido\r\n *       404:\r\n *         description: Inscri\xE7\xE3o n\xE3o encontrada\r\n */\r\nrouter.get('/unsubscribe/:token', NewsletterController.unsubscribe);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/preferences/{token}:\r\n *   get:\r\n *     summary: Obter prefer\xEAncias do assinante\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token do assinante\r\n *     responses:\r\n *       200:\r\n *         description: Prefer\xEAncias do assinante\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Newsletter'\r\n *       400:\r\n *         description: Token inv\xE1lido\r\n *       404:\r\n *         description: Assinante n\xE3o encontrado\r\n */\r\nrouter.get('/preferences/:token', NewsletterController.getPreferences);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/preferences/{token}:\r\n *   put:\r\n *     summary: Atualizar prefer\xEAncias do assinante\r\n *     tags: [Newsletter]\r\n *     parameters:\r\n *       - in: path\r\n *         name: token\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: Token do assinante\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               name:\r\n *                 type: string\r\n *                 description: Nome do assinante\r\n *               preferences:\r\n *                 type: object\r\n *                 properties:\r\n *                   frequency:\r\n *                     type: string\r\n *                     enum: [DAILY, WEEKLY, MONTHLY]\r\n *                   categories:\r\n *                     type: array\r\n *                     items:\r\n *                       type: string\r\n *                   topics:\r\n *                     type: array\r\n *                     items:\r\n *                       type: string\r\n *     responses:\r\n *       200:\r\n *         description: Prefer\xEAncias atualizadas com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Newsletter'\r\n *       400:\r\n *         description: Dados inv\xE1lidos ou token inv\xE1lido\r\n *       404:\r\n *         description: Assinante n\xE3o encontrado\r\n */\r\nrouter.put('/preferences/:token', NewsletterController.updatePreferences);\r\n\r\n// Rotas administrativas\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/subscribers:\r\n *   get:\r\n *     summary: Listar assinantes (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: N\xFAmero da p\xE1gina\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 100\r\n *           default: 20\r\n *         description: Itens por p\xE1gina\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [active, inactive, unconfirmed]\r\n *         description: Filtrar por status\r\n *       - in: query\r\n *         name: search\r\n *         schema:\r\n *           type: string\r\n *         description: Buscar por email ou nome\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data inicial (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Data final (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, email, name, confirmedAt]\r\n *           default: createdAt\r\n *         description: Campo para ordena\xE7\xE3o\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Ordem da classifica\xE7\xE3o\r\n *     responses:\r\n *       200:\r\n *         description: Lista de assinantes\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     subscribers:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Newsletter'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         pages:\r\n *                           type: integer\r\n *                     stats:\r\n *                       type: object\r\n *                       properties:\r\n *                         total:\r\n *                           type: integer\r\n *                         active:\r\n *                           type: integer\r\n *                         inactive:\r\n *                           type: integer\r\n *                         unconfirmed:\r\n *                           type: integer\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n */\r\nrouter.get('/subscribers', authenticate, authorize('ADMIN', 'EDITOR'), NewsletterController.getSubscribers);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/campaigns:\r\n *   get:\r\n *     summary: Listar campanhas (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: N\xFAmero da p\xE1gina\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 50\r\n *           default: 10\r\n *         description: Itens por p\xE1gina\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [DRAFT, SCHEDULED, SENDING, SENT, CANCELLED]\r\n *         description: Filtrar por status\r\n *     responses:\r\n *       200:\r\n *         description: Lista de campanhas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     campaigns:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/NewsletterCampaign'\r\n *                     pagination:\r\n *                       type: object\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n */\r\nrouter.get('/campaigns', authenticate, authorize('ADMIN', 'EDITOR'), NewsletterController.getCampaigns);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/campaigns:\r\n *   post:\r\n *     summary: Criar nova campanha (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - title\r\n *               - subject\r\n *               - content\r\n *             properties:\r\n *               title:\r\n *                 type: string\r\n *                 minLength: 3\r\n *                 description: T\xEDtulo da campanha\r\n *               subject:\r\n *                 type: string\r\n *                 minLength: 5\r\n *                 description: Assunto do email\r\n *               content:\r\n *                 type: string\r\n *                 minLength: 10\r\n *                 description: Conte\xFAdo da campanha\r\n *               htmlContent:\r\n *                 type: string\r\n *                 description: Conte\xFAdo HTML (opcional)\r\n *               scheduledAt:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Data de agendamento (opcional)\r\n *     responses:\r\n *       201:\r\n *         description: Campanha criada com sucesso\r\n *       400:\r\n *         description: Dados inv\xE1lidos\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n */\r\nrouter.post('/campaigns', authenticate, authorize('ADMIN', 'EDITOR'), NewsletterController.campaignValidation, NewsletterController.createCampaign);\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/newsletter/campaigns/{id}/send:\r\n *   post:\r\n *     summary: Enviar campanha (Admin)\r\n *     tags: [Newsletter]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID da campanha\r\n *     responses:\r\n *       200:\r\n *         description: Campanha enviada com sucesso\r\n *       400:\r\n *         description: Campanha n\xE3o pode ser enviada\r\n *       401:\r\n *         description: Token inv\xE1lido\r\n *       403:\r\n *         description: Sem permiss\xE3o\r\n *       404:\r\n *         description: Campanha n\xE3o encontrada\r\n */\r\nrouter.post('/campaigns/:id/send', authenticate, authorize('ADMIN'), NewsletterController.sendCampaignToSubscribers);\r\n\r\nexport default router;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "53c495ef79c3f1fbb2e28569369f583bdf76dd28"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fbqzt4lpu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fbqzt4lpu();
cov_fbqzt4lpu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_fbqzt4lpu().s[1]++, require("express"));
const auth_1 =
/* istanbul ignore next */
(cov_fbqzt4lpu().s[2]++, require("../middlewares/auth"));
const newsletterController_1 =
/* istanbul ignore next */
(cov_fbqzt4lpu().s[3]++, require("../controllers/newsletterController"));
const router =
/* istanbul ignore next */
(cov_fbqzt4lpu().s[4]++, (0, express_1.Router)());
/**
 * @swagger
 * components:
 *   schemas:
 *     Newsletter:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         email:
 *           type: string
 *         name:
 *           type: string
 *         isActive:
 *           type: boolean
 *         preferences:
 *           type: object
 *           properties:
 *             frequency:
 *               type: string
 *               enum: [DAILY, WEEKLY, MONTHLY]
 *             categories:
 *               type: array
 *               items:
 *                 type: string
 *             topics:
 *               type: array
 *               items:
 *                 type: string
 *         source:
 *           type: string
 *         ipAddress:
 *           type: string
 *         userAgent:
 *           type: string
 *         confirmedAt:
 *           type: string
 *           format: date-time
 *         unsubscribedAt:
 *           type: string
 *           format: date-time
 *         createdAt:
 *           type: string
 *           format: date-time
 *         updatedAt:
 *           type: string
 *           format: date-time
 *     NewsletterSubscription:
 *       type: object
 *       required:
 *         - email
 *       properties:
 *         email:
 *           type: string
 *           format: email
 *           description: Email para inscrição
 *         name:
 *           type: string
 *           description: Nome do assinante (opcional)
 *         preferences:
 *           type: object
 *           properties:
 *             frequency:
 *               type: string
 *               enum: [DAILY, WEEKLY, MONTHLY]
 *               default: WEEKLY
 *               description: Frequência de envio
 *             categories:
 *               type: array
 *               items:
 *                 type: string
 *               description: Categorias de interesse
 *             topics:
 *               type: array
 *               items:
 *                 type: string
 *               description: Tópicos de interesse
 *         source:
 *           type: string
 *           description: Origem da inscrição (opcional)
 *     NewsletterCampaign:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         title:
 *           type: string
 *         subject:
 *           type: string
 *         content:
 *           type: string
 *         htmlContent:
 *           type: string
 *         status:
 *           type: string
 *           enum: [DRAFT, SCHEDULED, SENDING, SENT, CANCELLED]
 *         scheduledAt:
 *           type: string
 *           format: date-time
 *         sentAt:
 *           type: string
 *           format: date-time
 *         recipientCount:
 *           type: integer
 *         openCount:
 *           type: integer
 *         clickCount:
 *           type: integer
 *         unsubscribeCount:
 *           type: integer
 *         bounceCount:
 *           type: integer
 *         createdBy:
 *           type: string
 *         createdAt:
 *           type: string
 *           format: date-time
 *         updatedAt:
 *           type: string
 *           format: date-time
 */
/**
 * @swagger
 * /api/v1/newsletter/subscribe:
 *   post:
 *     summary: Inscrever-se na newsletter
 *     tags: [Newsletter]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/NewsletterSubscription'
 *     responses:
 *       201:
 *         description: Inscrição realizada com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     confirmationRequired:
 *                       type: boolean
 *                     subscriptionId:
 *                       type: string
 *       400:
 *         description: Dados inválidos
 *       409:
 *         description: Email já inscrito
 *       429:
 *         description: Muitas tentativas - tente novamente mais tarde
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[5]++;
router.post('/subscribe', newsletterController_1.NewsletterController.subscribeValidation, newsletterController_1.NewsletterController.subscribe);
/**
 * @swagger
 * /api/v1/newsletter/confirm/{token}:
 *   get:
 *     summary: Confirmar inscrição na newsletter
 *     tags: [Newsletter]
 *     parameters:
 *       - in: path
 *         name: token
 *         required: true
 *         schema:
 *           type: string
 *         description: Token de confirmação
 *     responses:
 *       200:
 *         description: Inscrição confirmada com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       400:
 *         description: Token inválido ou expirado
 *       404:
 *         description: Inscrição não encontrada
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[6]++;
router.get('/confirm/:token', newsletterController_1.NewsletterController.confirmSubscription);
/**
 * @swagger
 * /api/v1/newsletter/unsubscribe/{token}:
 *   get:
 *     summary: Cancelar inscrição na newsletter
 *     tags: [Newsletter]
 *     parameters:
 *       - in: path
 *         name: token
 *         required: true
 *         schema:
 *           type: string
 *         description: Token de cancelamento
 *     responses:
 *       200:
 *         description: Inscrição cancelada com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       400:
 *         description: Token inválido
 *       404:
 *         description: Inscrição não encontrada
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[7]++;
router.get('/unsubscribe/:token', newsletterController_1.NewsletterController.unsubscribe);
/**
 * @swagger
 * /api/v1/newsletter/preferences/{token}:
 *   get:
 *     summary: Obter preferências do assinante
 *     tags: [Newsletter]
 *     parameters:
 *       - in: path
 *         name: token
 *         required: true
 *         schema:
 *           type: string
 *         description: Token do assinante
 *     responses:
 *       200:
 *         description: Preferências do assinante
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Newsletter'
 *       400:
 *         description: Token inválido
 *       404:
 *         description: Assinante não encontrado
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[8]++;
router.get('/preferences/:token', newsletterController_1.NewsletterController.getPreferences);
/**
 * @swagger
 * /api/v1/newsletter/preferences/{token}:
 *   put:
 *     summary: Atualizar preferências do assinante
 *     tags: [Newsletter]
 *     parameters:
 *       - in: path
 *         name: token
 *         required: true
 *         schema:
 *           type: string
 *         description: Token do assinante
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *                 description: Nome do assinante
 *               preferences:
 *                 type: object
 *                 properties:
 *                   frequency:
 *                     type: string
 *                     enum: [DAILY, WEEKLY, MONTHLY]
 *                   categories:
 *                     type: array
 *                     items:
 *                       type: string
 *                   topics:
 *                     type: array
 *                     items:
 *                       type: string
 *     responses:
 *       200:
 *         description: Preferências atualizadas com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   $ref: '#/components/schemas/Newsletter'
 *       400:
 *         description: Dados inválidos ou token inválido
 *       404:
 *         description: Assinante não encontrado
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[9]++;
router.put('/preferences/:token', newsletterController_1.NewsletterController.updatePreferences);
// Rotas administrativas
/**
 * @swagger
 * /api/v1/newsletter/subscribers:
 *   get:
 *     summary: Listar assinantes (Admin)
 *     tags: [Newsletter]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *           minimum: 1
 *           default: 1
 *         description: Número da página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           minimum: 1
 *           maximum: 100
 *           default: 20
 *         description: Itens por página
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [active, inactive, unconfirmed]
 *         description: Filtrar por status
 *       - in: query
 *         name: search
 *         schema:
 *           type: string
 *         description: Buscar por email ou nome
 *       - in: query
 *         name: dateFrom
 *         schema:
 *           type: string
 *           format: date
 *         description: Data inicial (YYYY-MM-DD)
 *       - in: query
 *         name: dateTo
 *         schema:
 *           type: string
 *           format: date
 *         description: Data final (YYYY-MM-DD)
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [createdAt, email, name, confirmedAt]
 *           default: createdAt
 *         description: Campo para ordenação
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Ordem da classificação
 *     responses:
 *       200:
 *         description: Lista de assinantes
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     subscribers:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/Newsletter'
 *                     pagination:
 *                       type: object
 *                       properties:
 *                         page:
 *                           type: integer
 *                         limit:
 *                           type: integer
 *                         total:
 *                           type: integer
 *                         pages:
 *                           type: integer
 *                     stats:
 *                       type: object
 *                       properties:
 *                         total:
 *                           type: integer
 *                         active:
 *                           type: integer
 *                         inactive:
 *                           type: integer
 *                         unconfirmed:
 *                           type: integer
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[10]++;
router.get('/subscribers', auth_1.authenticate, (0, auth_1.authorize)('ADMIN', 'EDITOR'), newsletterController_1.NewsletterController.getSubscribers);
/**
 * @swagger
 * /api/v1/newsletter/campaigns:
 *   get:
 *     summary: Listar campanhas (Admin)
 *     tags: [Newsletter]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *           minimum: 1
 *           default: 1
 *         description: Número da página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           minimum: 1
 *           maximum: 50
 *           default: 10
 *         description: Itens por página
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [DRAFT, SCHEDULED, SENDING, SENT, CANCELLED]
 *         description: Filtrar por status
 *     responses:
 *       200:
 *         description: Lista de campanhas
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     campaigns:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/NewsletterCampaign'
 *                     pagination:
 *                       type: object
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[11]++;
router.get('/campaigns', auth_1.authenticate, (0, auth_1.authorize)('ADMIN', 'EDITOR'), newsletterController_1.NewsletterController.getCampaigns);
/**
 * @swagger
 * /api/v1/newsletter/campaigns:
 *   post:
 *     summary: Criar nova campanha (Admin)
 *     tags: [Newsletter]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - title
 *               - subject
 *               - content
 *             properties:
 *               title:
 *                 type: string
 *                 minLength: 3
 *                 description: Título da campanha
 *               subject:
 *                 type: string
 *                 minLength: 5
 *                 description: Assunto do email
 *               content:
 *                 type: string
 *                 minLength: 10
 *                 description: Conteúdo da campanha
 *               htmlContent:
 *                 type: string
 *                 description: Conteúdo HTML (opcional)
 *               scheduledAt:
 *                 type: string
 *                 format: date-time
 *                 description: Data de agendamento (opcional)
 *     responses:
 *       201:
 *         description: Campanha criada com sucesso
 *       400:
 *         description: Dados inválidos
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[12]++;
router.post('/campaigns', auth_1.authenticate, (0, auth_1.authorize)('ADMIN', 'EDITOR'), newsletterController_1.NewsletterController.campaignValidation, newsletterController_1.NewsletterController.createCampaign);
/**
 * @swagger
 * /api/v1/newsletter/campaigns/{id}/send:
 *   post:
 *     summary: Enviar campanha (Admin)
 *     tags: [Newsletter]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID da campanha
 *     responses:
 *       200:
 *         description: Campanha enviada com sucesso
 *       400:
 *         description: Campanha não pode ser enviada
 *       401:
 *         description: Token inválido
 *       403:
 *         description: Sem permissão
 *       404:
 *         description: Campanha não encontrada
 */
/* istanbul ignore next */
cov_fbqzt4lpu().s[13]++;
router.post('/campaigns/:id/send', auth_1.authenticate, (0, auth_1.authorize)('ADMIN'), newsletterController_1.NewsletterController.sendCampaignToSubscribers);
/* istanbul ignore next */
cov_fbqzt4lpu().s[14]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,