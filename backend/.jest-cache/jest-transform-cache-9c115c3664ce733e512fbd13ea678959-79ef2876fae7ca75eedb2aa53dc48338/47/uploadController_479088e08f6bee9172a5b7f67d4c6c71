3e67470467c8861312fb46d5432c9b97
"use strict";

/* istanbul ignore next */
function cov_1cjwyw7014() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\uploadController.ts";
  var hash = "fa3bc5e83486086bd26536dc05aa43fc021d1273";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\uploadController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 34
        }
      },
      "39": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 42
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "41": {
        start: {
          line: 42,
          column: 13
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "42": {
        start: {
          line: 43,
          column: 11
        },
        end: {
          line: 43,
          column: 47
        }
      },
      "43": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 46
        }
      },
      "44": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 49
        }
      },
      "45": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "46": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "47": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "48": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 61
        }
      },
      "49": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "50": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "51": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 59
        }
      },
      "52": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 28
        }
      },
      "53": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 61,
          column: 48
        }
      },
      "54": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "55": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "56": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "57": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "58": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "59": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 23
        }
      },
      "60": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 73
        }
      },
      "61": {
        start: {
          line: 94,
          column: 15
        },
        end: {
          line: 101,
          column: 2
        }
      },
      "62": {
        start: {
          line: 109,
          column: 26
        },
        end: {
          line: 109,
          column: 47
        }
      },
      "63": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "64": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "65": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 27
        }
      },
      "66": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "67": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 30
        }
      },
      "68": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 23
        }
      },
      "69": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "70": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "71": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "72": {
        start: {
          line: 137,
          column: 26
        },
        end: {
          line: 137,
          column: 56
        }
      },
      "73": {
        start: {
          line: 138,
          column: 29
        },
        end: {
          line: 138,
          column: 51
        }
      },
      "74": {
        start: {
          line: 140,
          column: 26
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "75": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 31
        }
      },
      "76": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 46
        }
      },
      "77": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 50
        }
      },
      "78": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "79": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 165,
          column: 17
        }
      },
      "80": {
        start: {
          line: 151,
          column: 40
        },
        end: {
          line: 151,
          column: 83
        }
      },
      "81": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 158,
          column: 45
        }
      },
      "82": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 164,
          column: 22
        }
      },
      "83": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 174,
          column: 14
        }
      },
      "84": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 84
        }
      },
      "85": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 24
        }
      },
      "86": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "87": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 186,
          column: 40
        }
      },
      "88": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "89": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "90": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 192,
          column: 19
        }
      },
      "91": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 23
        }
      },
      "92": {
        start: {
          line: 195,
          column: 29
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "93": {
        start: {
          line: 196,
          column: 28
        },
        end: {
          line: 196,
          column: 55
        }
      },
      "94": {
        start: {
          line: 198,
          column: 27
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "95": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "96": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 89
        }
      },
      "97": {
        start: {
          line: 203,
          column: 33
        },
        end: {
          line: 215,
          column: 14
        }
      },
      "98": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "99": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "100": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 81
        }
      },
      "101": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "102": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "103": {
        start: {
          line: 256,
          column: 32
        },
        end: {
          line: 256,
          column: 40
        }
      },
      "104": {
        start: {
          line: 257,
          column: 26
        },
        end: {
          line: 257,
          column: 35
        }
      },
      "105": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "106": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 262,
          column: 19
        }
      },
      "107": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 23
        }
      },
      "108": {
        start: {
          line: 265,
          column: 34
        },
        end: {
          line: 265,
          column: 36
        }
      },
      "109": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "110": {
        start: {
          line: 267,
          column: 33
        },
        end: {
          line: 267,
          column: 76
        }
      },
      "111": {
        start: {
          line: 268,
          column: 32
        },
        end: {
          line: 268,
          column: 59
        }
      },
      "112": {
        start: {
          line: 270,
          column: 31
        },
        end: {
          line: 270,
          column: 35
        }
      },
      "113": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 273,
          column: 17
        }
      },
      "114": {
        start: {
          line: 272,
          column: 20
        },
        end: {
          line: 272,
          column: 93
        }
      },
      "115": {
        start: {
          line: 275,
          column: 37
        },
        end: {
          line: 287,
          column: 18
        }
      },
      "116": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 298,
          column: 19
        }
      },
      "117": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 305,
          column: 15
        }
      },
      "118": {
        start: {
          line: 304,
          column: 47
        },
        end: {
          line: 304,
          column: 81
        }
      },
      "119": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 310,
          column: 15
        }
      },
      "120": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 92
        }
      },
      "121": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 317,
          column: 15
        }
      },
      "122": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "123": {
        start: {
          line: 325,
          column: 141
        },
        end: {
          line: 325,
          column: 150
        }
      },
      "124": {
        start: {
          line: 326,
          column: 25
        },
        end: {
          line: 326,
          column: 59
        }
      },
      "125": {
        start: {
          line: 327,
          column: 25
        },
        end: {
          line: 327,
          column: 38
        }
      },
      "126": {
        start: {
          line: 329,
          column: 26
        },
        end: {
          line: 329,
          column: 28
        }
      },
      "127": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 332,
          column: 13
        }
      },
      "128": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 34
        }
      },
      "129": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 335,
          column: 13
        }
      },
      "130": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 42
        }
      },
      "131": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 341,
          column: 13
        }
      },
      "132": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 340,
          column: 18
        }
      },
      "133": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "134": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 42
        }
      },
      "135": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 355,
          column: 13
        }
      },
      "136": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 37
        }
      },
      "137": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 349,
          column: 17
        }
      },
      "138": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 61
        }
      },
      "139": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 354,
          column: 17
        }
      },
      "140": {
        start: {
          line: 351,
          column: 36
        },
        end: {
          line: 351,
          column: 52
        }
      },
      "141": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 54
        }
      },
      "142": {
        start: {
          line: 353,
          column: 20
        },
        end: {
          line: 353,
          column: 50
        }
      },
      "143": {
        start: {
          line: 357,
          column: 28
        },
        end: {
          line: 357,
          column: 30
        }
      },
      "144": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 40
        }
      },
      "145": {
        start: {
          line: 360,
          column: 35
        },
        end: {
          line: 377,
          column: 14
        }
      },
      "146": {
        start: {
          line: 378,
          column: 31
        },
        end: {
          line: 378,
          column: 54
        }
      },
      "147": {
        start: {
          line: 380,
          column: 26
        },
        end: {
          line: 384,
          column: 14
        }
      },
      "148": {
        start: {
          line: 385,
          column: 31
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "149": {
        start: {
          line: 387,
          column: 55
        },
        end: {
          line: 387,
          column: 82
        }
      },
      "150": {
        start: {
          line: 389,
          column: 20
        },
        end: {
          line: 392,
          column: 22
        }
      },
      "151": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 393,
          column: 31
        }
      },
      "152": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 414,
          column: 15
        }
      },
      "153": {
        start: {
          line: 400,
          column: 46
        },
        end: {
          line: 403,
          column: 21
        }
      },
      "154": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 73
        }
      },
      "155": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 421,
          column: 15
        }
      },
      "156": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "157": {
        start: {
          line: 429,
          column: 27
        },
        end: {
          line: 429,
          column: 37
        }
      },
      "158": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 436,
          column: 13
        }
      },
      "159": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 434,
          column: 19
        }
      },
      "160": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 435,
          column: 23
        }
      },
      "161": {
        start: {
          line: 437,
          column: 25
        },
        end: {
          line: 448,
          column: 14
        }
      },
      "162": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 455,
          column: 13
        }
      },
      "163": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 453,
          column: 19
        }
      },
      "164": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 23
        }
      },
      "165": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 465,
          column: 15
        }
      },
      "166": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 95
        }
      },
      "167": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 472,
          column: 15
        }
      },
      "168": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "169": {
        start: {
          line: 480,
          column: 27
        },
        end: {
          line: 480,
          column: 37
        }
      },
      "170": {
        start: {
          line: 481,
          column: 32
        },
        end: {
          line: 481,
          column: 40
        }
      },
      "171": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 488,
          column: 13
        }
      },
      "172": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 486,
          column: 19
        }
      },
      "173": {
        start: {
          line: 487,
          column: 16
        },
        end: {
          line: 487,
          column: 23
        }
      },
      "174": {
        start: {
          line: 489,
          column: 25
        },
        end: {
          line: 491,
          column: 14
        }
      },
      "175": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 498,
          column: 13
        }
      },
      "176": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 496,
          column: 19
        }
      },
      "177": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 23
        }
      },
      "178": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 506,
          column: 13
        }
      },
      "179": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 504,
          column: 19
        }
      },
      "180": {
        start: {
          line: 505,
          column: 16
        },
        end: {
          line: 505,
          column: 23
        }
      },
      "181": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 515,
          column: 13
        }
      },
      "182": {
        start: {
          line: 509,
          column: 16
        },
        end: {
          line: 509,
          column: 43
        }
      },
      "183": {
        start: {
          line: 514,
          column: 16
        },
        end: {
          line: 514,
          column: 100
        }
      },
      "184": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 519,
          column: 15
        }
      },
      "185": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 526,
          column: 15
        }
      },
      "186": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 530,
          column: 15
        }
      },
      "187": {
        start: {
          line: 533,
          column: 12
        },
        end: {
          line: 533,
          column: 96
        }
      },
      "188": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 537,
          column: 15
        }
      },
      "189": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 610,
          column: 9
        }
      },
      "190": {
        start: {
          line: 545,
          column: 32
        },
        end: {
          line: 545,
          column: 40
        }
      },
      "191": {
        start: {
          line: 546,
          column: 32
        },
        end: {
          line: 546,
          column: 40
        }
      },
      "192": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 553,
          column: 13
        }
      },
      "193": {
        start: {
          line: 548,
          column: 16
        },
        end: {
          line: 551,
          column: 19
        }
      },
      "194": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 552,
          column: 23
        }
      },
      "195": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 560,
          column: 13
        }
      },
      "196": {
        start: {
          line: 555,
          column: 16
        },
        end: {
          line: 558,
          column: 19
        }
      },
      "197": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 23
        }
      },
      "198": {
        start: {
          line: 562,
          column: 26
        },
        end: {
          line: 568,
          column: 14
        }
      },
      "199": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 575,
          column: 13
        }
      },
      "200": {
        start: {
          line: 570,
          column: 16
        },
        end: {
          line: 573,
          column: 19
        }
      },
      "201": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 574,
          column: 23
        }
      },
      "202": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 585,
          column: 13
        }
      },
      "203": {
        start: {
          line: 578,
          column: 16
        },
        end: {
          line: 584,
          column: 17
        }
      },
      "204": {
        start: {
          line: 579,
          column: 20
        },
        end: {
          line: 579,
          column: 47
        }
      },
      "205": {
        start: {
          line: 583,
          column: 20
        },
        end: {
          line: 583,
          column: 104
        }
      },
      "206": {
        start: {
          line: 587,
          column: 27
        },
        end: {
          line: 591,
          column: 14
        }
      },
      "207": {
        start: {
          line: 589,
          column: 45
        },
        end: {
          line: 589,
          column: 49
        }
      },
      "208": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 597,
          column: 15
        }
      },
      "209": {
        start: {
          line: 596,
          column: 39
        },
        end: {
          line: 596,
          column: 73
        }
      },
      "210": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 602,
          column: 15
        }
      },
      "211": {
        start: {
          line: 605,
          column: 12
        },
        end: {
          line: 605,
          column: 84
        }
      },
      "212": {
        start: {
          line: 606,
          column: 12
        },
        end: {
          line: 609,
          column: 15
        }
      },
      "213": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 680,
          column: 9
        }
      },
      "214": {
        start: {
          line: 617,
          column: 38
        },
        end: {
          line: 617,
          column: 47
        }
      },
      "215": {
        start: {
          line: 618,
          column: 31
        },
        end: {
          line: 618,
          column: 45
        }
      },
      "216": {
        start: {
          line: 619,
          column: 30
        },
        end: {
          line: 619,
          column: 40
        }
      },
      "217": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 64
        }
      },
      "218": {
        start: {
          line: 621,
          column: 57
        },
        end: {
          line: 643,
          column: 14
        }
      },
      "219": {
        start: {
          line: 644,
          column: 31
        },
        end: {
          line: 667,
          column: 13
        }
      },
      "220": {
        start: {
          line: 650,
          column: 24
        },
        end: {
          line: 653,
          column: 26
        }
      },
      "221": {
        start: {
          line: 654,
          column: 24
        },
        end: {
          line: 654,
          column: 35
        }
      },
      "222": {
        start: {
          line: 660,
          column: 24
        },
        end: {
          line: 663,
          column: 26
        }
      },
      "223": {
        start: {
          line: 664,
          column: 24
        },
        end: {
          line: 664,
          column: 35
        }
      },
      "224": {
        start: {
          line: 668,
          column: 12
        },
        end: {
          line: 672,
          column: 15
        }
      },
      "225": {
        start: {
          line: 675,
          column: 12
        },
        end: {
          line: 675,
          column: 88
        }
      },
      "226": {
        start: {
          line: 676,
          column: 12
        },
        end: {
          line: 679,
          column: 15
        }
      },
      "227": {
        start: {
          line: 683,
          column: 0
        },
        end: {
          line: 683,
          column: 44
        }
      },
      "228": {
        start: {
          line: 684,
          column: 0
        },
        end: {
          line: 684,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 50
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 60,
            column: 14
          },
          end: {
            line: 60,
            column: 15
          }
        },
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 60
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 20
          }
        },
        loc: {
          start: {
            line: 67,
            column: 38
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 67
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 117
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 38
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 184
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 47
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 254
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 304,
            column: 41
          },
          end: {
            line: 304,
            column: 42
          }
        },
        loc: {
          start: {
            line: 304,
            column: 47
          },
          end: {
            line: 304,
            column: 81
          }
        },
        line: 304
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 36
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 323
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 387,
            column: 40
          },
          end: {
            line: 387,
            column: 41
          }
        },
        loc: {
          start: {
            line: 387,
            column: 55
          },
          end: {
            line: 387,
            column: 82
          }
        },
        line: 387
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 388,
            column: 37
          },
          end: {
            line: 388,
            column: 38
          }
        },
        loc: {
          start: {
            line: 388,
            column: 52
          },
          end: {
            line: 394,
            column: 17
          }
        },
        line: 388
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 400,
            column: 37
          },
          end: {
            line: 400,
            column: 38
          }
        },
        loc: {
          start: {
            line: 400,
            column: 46
          },
          end: {
            line: 403,
            column: 21
          }
        },
        line: 400
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 39
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 427
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 38
          },
          end: {
            line: 539,
            column: 5
          }
        },
        line: 478
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 47
          },
          end: {
            line: 611,
            column: 5
          }
        },
        line: 543
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 589,
            column: 40
          },
          end: {
            line: 589,
            column: 41
          }
        },
        loc: {
          start: {
            line: 589,
            column: 45
          },
          end: {
            line: 589,
            column: 49
          }
        },
        line: 589
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 596,
            column: 33
          },
          end: {
            line: 596,
            column: 34
          }
        },
        loc: {
          start: {
            line: 596,
            column: 39
          },
          end: {
            line: 596,
            column: 73
          }
        },
        line: 596
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 615,
            column: 5
          }
        },
        loc: {
          start: {
            line: 615,
            column: 40
          },
          end: {
            line: 681,
            column: 5
          }
        },
        line: 615
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 649,
            column: 46
          },
          end: {
            line: 649,
            column: 47
          }
        },
        loc: {
          start: {
            line: 649,
            column: 61
          },
          end: {
            line: 655,
            column: 21
          }
        },
        line: 649
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 659,
            column: 47
          },
          end: {
            line: 659,
            column: 48
          }
        },
        loc: {
          start: {
            line: 659,
            column: 62
          },
          end: {
            line: 665,
            column: 21
          }
        },
        line: 659
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: 89,
            column: 9
          },
          end: {
            line: 91,
            column: 5
          }
        }],
        line: 86
      },
      "21": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "22": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 124,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 36
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 41
          }
        }, {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 44
          }
        }, {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 37
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "25": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 46
          }
        }, {
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 134,
            column: 78
          }
        }],
        line: 134
      },
      "26": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "27": {
        loc: {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 34
          }
        }, {
          start: {
            line: 150,
            column: 38
          },
          end: {
            line: 150,
            column: 65
          }
        }],
        line: 150
      },
      "28": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "29": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "30": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "31": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 22
          }
        }, {
          start: {
            line: 258,
            column: 26
          },
          end: {
            line: 258,
            column: 44
          }
        }],
        line: 258
      },
      "32": {
        loc: {
          start: {
            line: 271,
            column: 16
          },
          end: {
            line: 273,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 16
          },
          end: {
            line: 273,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "33": {
        loc: {
          start: {
            line: 325,
            column: 74
          },
          end: {
            line: 325,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 325,
            column: 81
          },
          end: {
            line: 325,
            column: 82
          }
        }],
        line: 325
      },
      "34": {
        loc: {
          start: {
            line: 325,
            column: 84
          },
          end: {
            line: 325,
            column: 94
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 325,
            column: 92
          },
          end: {
            line: 325,
            column: 94
          }
        }],
        line: 325
      },
      "35": {
        loc: {
          start: {
            line: 325,
            column: 96
          },
          end: {
            line: 325,
            column: 116
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 325,
            column: 105
          },
          end: {
            line: 325,
            column: 116
          }
        }],
        line: 325
      },
      "36": {
        loc: {
          start: {
            line: 325,
            column: 118
          },
          end: {
            line: 325,
            column: 136
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 325,
            column: 130
          },
          end: {
            line: 325,
            column: 136
          }
        }],
        line: 325
      },
      "37": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 332,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 332,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "38": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 335,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "39": {
        loc: {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "40": {
        loc: {
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "41": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "42": {
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 24
          }
        }, {
          start: {
            line: 345,
            column: 28
          },
          end: {
            line: 345,
            column: 34
          }
        }],
        line: 345
      },
      "43": {
        loc: {
          start: {
            line: 347,
            column: 16
          },
          end: {
            line: 349,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 16
          },
          end: {
            line: 349,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "44": {
        loc: {
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 354,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 354,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "45": {
        loc: {
          start: {
            line: 387,
            column: 62
          },
          end: {
            line: 387,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 62
          },
          end: {
            line: 387,
            column: 76
          }
        }, {
          start: {
            line: 387,
            column: 80
          },
          end: {
            line: 387,
            column: 81
          }
        }],
        line: 387
      },
      "46": {
        loc: {
          start: {
            line: 391,
            column: 30
          },
          end: {
            line: 391,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 30
          },
          end: {
            line: 391,
            column: 44
          }
        }, {
          start: {
            line: 391,
            column: 48
          },
          end: {
            line: 391,
            column: 49
          }
        }],
        line: 391
      },
      "47": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 436,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 436,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "48": {
        loc: {
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 455,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 455,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "49": {
        loc: {
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 488,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 488,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "50": {
        loc: {
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 498,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 498,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "51": {
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 506,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 506,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "52": {
        loc: {
          start: {
            line: 500,
            column: 16
          },
          end: {
            line: 500,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 500,
            column: 16
          },
          end: {
            line: 500,
            column: 44
          }
        }, {
          start: {
            line: 500,
            column: 48
          },
          end: {
            line: 500,
            column: 78
          }
        }],
        line: 500
      },
      "53": {
        loc: {
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 553,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 553,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 547
      },
      "54": {
        loc: {
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 24
          }
        }, {
          start: {
            line: 547,
            column: 28
          },
          end: {
            line: 547,
            column: 51
          }
        }, {
          start: {
            line: 547,
            column: 55
          },
          end: {
            line: 547,
            column: 75
          }
        }],
        line: 547
      },
      "55": {
        loc: {
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "56": {
        loc: {
          start: {
            line: 566,
            column: 24
          },
          end: {
            line: 566,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 566,
            column: 24
          },
          end: {
            line: 566,
            column: 52
          }
        }, {
          start: {
            line: 566,
            column: 56
          },
          end: {
            line: 566,
            column: 88
          }
        }],
        line: 566
      },
      "57": {
        loc: {
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 569
      },
      "58": {
        loc: {
          start: {
            line: 617,
            column: 20
          },
          end: {
            line: 617,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 617,
            column: 29
          },
          end: {
            line: 617,
            column: 33
          }
        }],
        line: 617
      },
      "59": {
        loc: {
          start: {
            line: 647,
            column: 26
          },
          end: {
            line: 647,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 647,
            column: 26
          },
          end: {
            line: 647,
            column: 45
          }
        }, {
          start: {
            line: 647,
            column: 49
          },
          end: {
            line: 647,
            column: 50
          }
        }],
        line: 647
      },
      "60": {
        loc: {
          start: {
            line: 648,
            column: 33
          },
          end: {
            line: 648,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 648,
            column: 33
          },
          end: {
            line: 648,
            column: 52
          }
        }, {
          start: {
            line: 648,
            column: 56
          },
          end: {
            line: 648,
            column: 57
          }
        }],
        line: 648
      },
      "61": {
        loc: {
          start: {
            line: 652,
            column: 34
          },
          end: {
            line: 652,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 652,
            column: 34
          },
          end: {
            line: 652,
            column: 48
          }
        }, {
          start: {
            line: 652,
            column: 52
          },
          end: {
            line: 652,
            column: 53
          }
        }],
        line: 652
      },
      "62": {
        loc: {
          start: {
            line: 662,
            column: 34
          },
          end: {
            line: 662,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 662,
            column: 34
          },
          end: {
            line: 662,
            column: 48
          }
        }, {
          start: {
            line: 662,
            column: 52
          },
          end: {
            line: 662,
            column: 53
          }
        }],
        line: 662
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0],
      "34": [0],
      "35": [0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0]
    },
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\uploadController.ts",
      mappings: "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",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\uploadController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { PrismaClient } from '@prisma/client';\r\nimport multer from 'multer';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs/promises';\r\nimport * as crypto from 'crypto';\r\nimport sharp from 'sharp';\r\nimport logger from '../utils/logger';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n// Interface para dados de arquivo\r\ninterface FileData {\r\n  originalName: string;\r\n  filename: string;\r\n  mimetype: string;\r\n  size: number;\r\n  path: string;\r\n  url: string;\r\n  type: 'IMAGE' | 'DOCUMENT' | 'OTHER';\r\n  // metadata removido pois n\xE3o existe no modelo Upload\r\n}\r\n\r\n// Interface para filtros de busca\r\ninterface FileFilters {\r\n  type?: string;\r\n  mimetype?: string;\r\n  search?: string;\r\n  uploadedBy?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  page?: number;\r\n  limit?: number;\r\n  sortBy?: 'createdAt' | 'originalName' | 'size';\r\n  sortOrder?: 'asc' | 'desc';\r\n}\r\n\r\n// Configura\xE7\xE3o do multer\r\nconst storage = multer.diskStorage({\r\n  destination: async (req, file, cb) => {\r\n    const uploadDir = path.join(process.cwd(), 'uploads');\r\n    try {\r\n      await fs.access(uploadDir);\r\n    } catch {\r\n      await fs.mkdir(uploadDir, { recursive: true });\r\n    }\r\n    cb(null, uploadDir);\r\n  },\r\n  filename: (req, file, cb) => {\r\n    const uniqueSuffix = crypto.randomUUID();\r\n    const ext = path.extname(file.originalname);\r\n    cb(null, `${uniqueSuffix}${ext}`);\r\n  }\r\n});\r\n\r\n// Filtros de arquivo\r\nconst fileFilter = (req: any, file: Express.Multer.File, cb: multer.FileFilterCallback) => {\r\n  // Tipos permitidos\r\n  const allowedMimes = [\r\n    // Imagens\r\n    'image/jpeg',\r\n    'image/jpg',\r\n    'image/png',\r\n    'image/gif',\r\n    'image/webp',\r\n    'image/svg+xml',\r\n    // Documentos\r\n    'application/pdf',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'text/plain',\r\n    'text/csv'\r\n  ];\r\n\r\n  if (allowedMimes.includes(file.mimetype)) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(new Error(`Tipo de arquivo n\xE3o permitido: ${file.mimetype}`));\r\n  }\r\n};\r\n\r\n// Configura\xE7\xE3o do multer\r\nconst upload = multer({\r\n  storage,\r\n  fileFilter,\r\n  limits: {\r\n    fileSize: 10 * 1024 * 1024, // 10MB\r\n    files: 5 // M\xE1ximo 5 arquivos por vez\r\n  }\r\n});\r\n\r\n/**\r\n * Controller respons\xE1vel pelo gerenciamento de uploads\r\n */\r\nexport class UploadController {\r\n  /**\r\n   * Middleware do multer para upload \xFAnico\r\n   */\r\n  static uploadSingle = upload.single('file');\r\n\r\n  /**\r\n   * Middleware do multer para m\xFAltiplos uploads\r\n   */\r\n  static uploadMultiple = upload.array('files', 5);\r\n\r\n  /**\r\n   * Determina o tipo de arquivo baseado no mimetype\r\n   */\r\n  private static getFileType(mimetype: string): 'IMAGE' | 'DOCUMENT' | 'OTHER' {\r\n    if (mimetype.startsWith('image/')) {\r\n      return 'IMAGE';\r\n    }\r\n    if (\r\n      mimetype.includes('pdf') ||\r\n      mimetype.includes('document') ||\r\n      mimetype.includes('spreadsheet') ||\r\n      mimetype.includes('text')\r\n    ) {\r\n      return 'DOCUMENT';\r\n    }\r\n    return 'OTHER';\r\n  }\r\n\r\n  /**\r\n   * Processa imagem (redimensionamento e otimiza\xE7\xE3o)\r\n   */\r\n  private static async processImage(filePath: string, mimetype: string): Promise<any> {\r\n    try {\r\n      if (!mimetype.startsWith('image/') || mimetype === 'image/svg+xml') {\r\n        return null;\r\n      }\r\n\r\n      const image = sharp(filePath);\r\n      const metadata = await image.metadata();\r\n\r\n      // Criar vers\xF5es redimensionadas\r\n      const sizes = [\r\n        { name: 'thumbnail', width: 150, height: 150 },\r\n        { name: 'small', width: 300, height: 300 },\r\n        { name: 'medium', width: 600, height: 600 },\r\n        { name: 'large', width: 1200, height: 1200 }\r\n      ];\r\n\r\n      const versions: any = {};\r\n      const dir = path.dirname(filePath);\r\n      const name = path.parse(filePath).name;\r\n\r\n      for (const size of sizes) {\r\n        if (metadata.width && metadata.width > size.width) {\r\n          const resizedPath = path.join(dir, `${name}_${size.name}.webp`);\r\n          await image\r\n            .resize(size.width, size.height, {\r\n              fit: 'inside',\r\n              withoutEnlargement: true\r\n            })\r\n            .webp({ quality: 80 })\r\n            .toFile(resizedPath);\r\n\r\n          versions[size.name] = {\r\n            path: resizedPath,\r\n            url: `/uploads/${path.basename(resizedPath)}`,\r\n            width: size.width,\r\n            height: size.height\r\n          };\r\n        }\r\n      }\r\n\r\n      return {\r\n        original: {\r\n          width: metadata.width,\r\n          height: metadata.height,\r\n          format: metadata.format\r\n        },\r\n        versions\r\n      };\r\n    } catch (error) {\r\n      logger.error('Erro ao processar imagem', { error, filePath });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload de arquivo \xFAnico\r\n   */\r\n  static async uploadFile(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const currentUser = (req as any).user;\r\n      const file = req.file;\r\n\r\n      if (!file) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Nenhum arquivo foi enviado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const fileType = UploadController.getFileType(file.mimetype);\r\n      const fileUrl = `/uploads/${file.filename}`;\r\n\r\n      // Processar imagem se necess\xE1rio\r\n      let metadata = null;\r\n      if (fileType === 'IMAGE') {\r\n        metadata = await UploadController.processImage(file.path, file.mimetype);\r\n      }\r\n\r\n      // Salvar informa\xE7\xF5es no banco\r\n      const uploadedFile = await prisma.upload.create({\r\n        data: {\r\n          originalName: file.originalname,\r\n          filename: file.filename,\r\n          mimetype: file.mimetype,\r\n          size: file.size,\r\n          path: file.path,\r\n          url: fileUrl,\r\n          type: fileType,\r\n          // Campo metadata removido pois n\xE3o existe no modelo Upload\r\n          userId: currentUser.id\r\n        }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('Arquivo enviado', {\r\n        fileId: uploadedFile.id,\r\n        filename: file.filename,\r\n        originalName: file.originalname,\r\n        size: file.size,\r\n        type: fileType,\r\n        uploadedBy: currentUser.id\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        message: 'Arquivo enviado com sucesso',\r\n        data: {\r\n          file: {\r\n            id: uploadedFile.id,\r\n            originalName: uploadedFile.originalName,\r\n            filename: uploadedFile.filename,\r\n            url: uploadedFile.url,\r\n            type: uploadedFile.type,\r\n            size: uploadedFile.size,\r\n            mimetype: uploadedFile.mimetype,\r\n            // metadata removido pois n\xE3o existe no modelo Upload\r\n            createdAt: uploadedFile.createdAt\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao fazer upload de arquivo', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload de m\xFAltiplos arquivos\r\n   */\r\n  static async uploadMultipleFiles(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const currentUser = (req as any).user;\r\n      const files = req.files as Express.Multer.File[];\r\n\r\n      if (!files || files.length === 0) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Nenhum arquivo foi enviado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const uploadedFiles = [];\r\n\r\n      for (const file of files) {\r\n        const fileType = UploadController.getFileType(file.mimetype);\r\n        const fileUrl = `/uploads/${file.filename}`;\r\n\r\n        // Processar imagem se necess\xE1rio\r\n        let metadata = null;\r\n        if (fileType === 'IMAGE') {\r\n          metadata = await UploadController.processImage(file.path, file.mimetype);\r\n        }\r\n\r\n        // Salvar informa\xE7\xF5es no banco\r\n        const uploadedFile = await prisma.upload.create({\r\n          data: {\r\n            originalName: file.originalname,\r\n            filename: file.filename,\r\n            mimetype: file.mimetype,\r\n            size: file.size,\r\n            path: file.path,\r\n            url: fileUrl,\r\n            type: fileType,\r\n            // Campo metadata removido pois n\xE3o existe no modelo Upload\r\n            userId: currentUser.id\r\n          }\r\n        });\r\n\r\n        uploadedFiles.push({\r\n          id: uploadedFile.id,\r\n          originalName: uploadedFile.originalName,\r\n          filename: uploadedFile.filename,\r\n          url: uploadedFile.url,\r\n          type: uploadedFile.type,\r\n          size: uploadedFile.size,\r\n          mimetype: uploadedFile.mimetype,\r\n          // metadata removido pois n\xE3o existe no modelo Upload\r\n          createdAt: uploadedFile.createdAt\r\n        });\r\n      }\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('M\xFAltiplos arquivos enviados', {\r\n        count: uploadedFiles.length,\r\n        uploadedBy: currentUser.id,\r\n        files: uploadedFiles.map(f => ({ id: f.id, name: f.originalName }))\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        message: `${uploadedFiles.length} arquivos enviados com sucesso`,\r\n        data: { files: uploadedFiles }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao fazer upload de m\xFAltiplos arquivos', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lista arquivos com pagina\xE7\xE3o e filtros\r\n   */\r\n  static async getFiles(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const {\r\n        type,\r\n        mimetype,\r\n        search,\r\n        uploadedBy,\r\n        dateFrom,\r\n        dateTo,\r\n        page = 1,\r\n        limit = 20,\r\n        sortBy = 'createdAt',\r\n        sortOrder = 'desc'\r\n      }: FileFilters = req.query;\r\n\r\n      const skip = (Number(page) - 1) * Number(limit);\r\n      const take = Number(limit);\r\n\r\n      // Construir filtros\r\n      const where: any = {};\r\n\r\n      if (type) {\r\n        where.type = type;\r\n      }\r\n\r\n      if (mimetype) {\r\n        where.mimetype = mimetype;\r\n      }\r\n\r\n      if (search) {\r\n        where.OR = [\r\n          { originalName: { contains: search, mode: 'insensitive' } },\r\n          { filename: { contains: search, mode: 'insensitive' } }\r\n        ];\r\n      }\r\n\r\n      if (uploadedBy) {\r\n        where.userId = uploadedBy;\r\n      }\r\n\r\n      if (dateFrom || dateTo) {\r\n        where.createdAt = {};\r\n        if (dateFrom) {\r\n          where.createdAt.gte = new Date(dateFrom);\r\n        }\r\n        if (dateTo) {\r\n          const endDate = new Date(dateTo);\r\n          endDate.setHours(23, 59, 59, 999);\r\n          where.createdAt.lte = endDate;\r\n        }\r\n      }\r\n\r\n      // Definir ordena\xE7\xE3o\r\n      const orderBy: any = {};\r\n      orderBy[sortBy] = sortOrder;\r\n\r\n      // Buscar arquivos\r\n      const [files, total] = await Promise.all([\r\n        prisma.upload.findMany({\r\n          where,\r\n          include: {\r\n            user: {\r\n              select: {\r\n                id: true,\r\n                name: true,\r\n                email: true\r\n              }\r\n            }\r\n          },\r\n          skip,\r\n          take,\r\n          orderBy\r\n        }),\r\n        prisma.upload.count({ where })\r\n      ]);\r\n\r\n      const totalPages = Math.ceil(total / take);\r\n\r\n      // Estat\xEDsticas\r\n      const stats = await prisma.upload.groupBy({\r\n        by: ['type'],\r\n        _count: true,\r\n        _sum: { size: true }\r\n      });\r\n\r\n      const statistics = {\r\n        total,\r\n        totalSize: stats.reduce((acc, stat) => acc + (stat._sum.size || 0), 0),\r\n        byType: stats.reduce((acc, stat) => {\r\n          acc[stat.type] = {\r\n            count: stat._count,\r\n            size: stat._sum.size || 0\r\n          };\r\n          return acc;\r\n        }, {} as any)\r\n      };\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Arquivos listados com sucesso',\r\n        data: {\r\n          files: files.map(file => ({\r\n            ...file,\r\n            // Campo metadata removido pois n\xE3o existe no modelo Upload\r\n          })),\r\n          statistics,\r\n          pagination: {\r\n            page: Number(page),\r\n            limit: take,\r\n            total,\r\n            totalPages,\r\n            hasNext: Number(page) < totalPages,\r\n            hasPrev: Number(page) > 1\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao listar arquivos', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Busca arquivo por ID\r\n   */\r\n  static async getFileById(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do arquivo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const file = await prisma.upload.findUnique({\r\n        where: { id },\r\n        include: {\r\n          user: {\r\n            select: {\r\n              id: true,\r\n              name: true,\r\n              email: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (!file) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Arquivo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Arquivo encontrado',\r\n        data: {\r\n          file: {\r\n            ...file,\r\n            // Campo metadata removido pois n\xE3o existe no modelo Upload\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao buscar arquivo', { error, fileId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove um arquivo\r\n   */\r\n  static async deleteFile(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const currentUser = (req as any).user;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do arquivo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const file = await prisma.upload.findUnique({\r\n        where: { id }\r\n      });\r\n\r\n      if (!file) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Arquivo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar permiss\xF5es (propriet\xE1rio ou admin)\r\n      if (currentUser.role !== 'ADMIN' && file.userId !== currentUser.id) {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Sem permiss\xE3o para deletar este arquivo'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Remover arquivo f\xEDsico\r\n      try {\r\n        await fs.unlink(file.path);\r\n        \r\n        // TODO: Implementar remo\xE7\xE3o de vers\xF5es redimensionadas quando o modelo Upload for atualizado para suportar metadata\r\n        // C\xF3digo removido pois o campo metadata n\xE3o existe no modelo Upload\r\n      } catch (error) {\r\n        logger.warn('Erro ao remover arquivo f\xEDsico', { path: file.path, error });\r\n      }\r\n\r\n      // Remover registro do banco\r\n      await prisma.upload.delete({\r\n        where: { id }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('Arquivo deletado', {\r\n        fileId: id,\r\n        filename: file.filename,\r\n        originalName: file.originalName,\r\n        deletedBy: currentUser.id\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Arquivo deletado com sucesso'\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao deletar arquivo', { error, fileId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove m\xFAltiplos arquivos\r\n   */\r\n  static async deleteMultipleFiles(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { fileIds }: { fileIds: string[] } = req.body;\r\n      const currentUser = (req as any).user;\r\n\r\n      if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Lista de IDs de arquivos \xE9 obrigat\xF3ria'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (fileIds.length > 50) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'M\xE1ximo de 50 arquivos por vez'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Buscar arquivos\r\n      const files = await prisma.upload.findMany({\r\n        where: {\r\n          id: { in: fileIds },\r\n          // Apenas admin pode deletar arquivos de outros usu\xE1rios\r\n          ...(currentUser.role !== 'ADMIN' && { uploadedById: currentUser.id })\r\n        }\r\n      });\r\n\r\n      if (files.length === 0) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Nenhum arquivo encontrado ou sem permiss\xE3o'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Remover arquivos f\xEDsicos\r\n      for (const file of files) {\r\n        try {\r\n          await fs.unlink(file.path);\r\n          \r\n          // TODO: Implementar remo\xE7\xE3o de vers\xF5es redimensionadas quando necess\xE1rio\r\n        } catch (error) {\r\n          logger.warn('Erro ao remover arquivo f\xEDsico', { path: file.path, error });\r\n        }\r\n      }\r\n\r\n      // Remover registros do banco\r\n      const result = await prisma.upload.deleteMany({\r\n        where: {\r\n          id: { in: files.map(f => f.id) }\r\n        }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('M\xFAltiplos arquivos deletados', {\r\n        count: result.count,\r\n        deletedBy: currentUser.id,\r\n        files: files.map(f => ({ id: f.id, name: f.originalName }))\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: `${result.count} arquivos deletados com sucesso`,\r\n        data: { deletedCount: result.count }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao deletar m\xFAltiplos arquivos', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obt\xE9m estat\xEDsticas de arquivos\r\n   */\r\n  static async getFileStats(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { period = '30' } = req.query;\r\n      const periodDays = Number(period);\r\n      const dateLimit = new Date();\r\n      dateLimit.setDate(dateLimit.getDate() - periodDays);\r\n\r\n      const [totalStats, periodStats, sizeStats] = await Promise.all([\r\n        // Estat\xEDsticas gerais\r\n        prisma.upload.groupBy({\r\n          by: ['type'],\r\n          _count: true,\r\n          _sum: { size: true }\r\n        }),\r\n        // Estat\xEDsticas do per\xEDodo\r\n        prisma.upload.groupBy({\r\n          by: ['type'],\r\n          where: {\r\n            createdAt: { gte: dateLimit }\r\n          },\r\n          _count: true,\r\n          _sum: { size: true }\r\n        }),\r\n        // Estat\xEDsticas de tamanho\r\n        prisma.upload.aggregate({\r\n          _sum: { size: true },\r\n          _avg: { size: true },\r\n          _count: true\r\n        })\r\n      ]);\r\n\r\n      const statistics = {\r\n        total: {\r\n          files: sizeStats._count,\r\n          size: sizeStats._sum.size || 0,\r\n          averageSize: sizeStats._avg.size || 0,\r\n          byType: totalStats.reduce((acc, stat) => {\r\n            acc[stat.type] = {\r\n              count: stat._count,\r\n              size: stat._sum.size || 0\r\n            };\r\n            return acc;\r\n          }, {} as any)\r\n        },\r\n        period: {\r\n          days: periodDays,\r\n          byType: periodStats.reduce((acc, stat) => {\r\n            acc[stat.type] = {\r\n              count: stat._count,\r\n              size: stat._sum.size || 0\r\n            };\r\n            return acc;\r\n          }, {} as any)\r\n        }\r\n      };\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Estat\xEDsticas obtidas com sucesso',\r\n        data: { statistics }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao obter estat\xEDsticas de arquivos', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default UploadController;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa3bc5e83486086bd26536dc05aa43fc021d1273"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cjwyw7014 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cjwyw7014();
var __createBinding =
/* istanbul ignore next */
(cov_1cjwyw7014().s[0]++,
/* istanbul ignore next */
(cov_1cjwyw7014().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1cjwyw7014().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1cjwyw7014().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1cjwyw7014().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[0]++;
  cov_1cjwyw7014().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1cjwyw7014().b[2][0]++;
    cov_1cjwyw7014().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1cjwyw7014().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1cjwyw7014().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1cjwyw7014().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[5][1]++,
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1cjwyw7014().b[3][0]++;
    cov_1cjwyw7014().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1cjwyw7014().f[1]++;
        cov_1cjwyw7014().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1cjwyw7014().b[3][1]++;
  }
  cov_1cjwyw7014().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1cjwyw7014().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[2]++;
  cov_1cjwyw7014().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1cjwyw7014().b[7][0]++;
    cov_1cjwyw7014().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1cjwyw7014().b[7][1]++;
  }
  cov_1cjwyw7014().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1cjwyw7014().s[11]++,
/* istanbul ignore next */
(cov_1cjwyw7014().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1cjwyw7014().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1cjwyw7014().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1cjwyw7014().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[3]++;
  cov_1cjwyw7014().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1cjwyw7014().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[4]++;
  cov_1cjwyw7014().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1cjwyw7014().s[14]++,
/* istanbul ignore next */
(cov_1cjwyw7014().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1cjwyw7014().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1cjwyw7014().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[5]++;
  cov_1cjwyw7014().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[6]++;
    cov_1cjwyw7014().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1cjwyw7014().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[17]++, []);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1cjwyw7014().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1cjwyw7014().b[12][0]++;
          cov_1cjwyw7014().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1cjwyw7014().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1cjwyw7014().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1cjwyw7014().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1cjwyw7014().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[8]++;
    cov_1cjwyw7014().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1cjwyw7014().b[13][0]++;
      cov_1cjwyw7014().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1cjwyw7014().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1cjwyw7014().s[26]++, {});
    /* istanbul ignore next */
    cov_1cjwyw7014().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1cjwyw7014().b[15][0]++;
      cov_1cjwyw7014().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1cjwyw7014().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1cjwyw7014().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1cjwyw7014().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1cjwyw7014().b[16][0]++;
          cov_1cjwyw7014().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1cjwyw7014().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1cjwyw7014().b[15][1]++;
    }
    cov_1cjwyw7014().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1cjwyw7014().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_1cjwyw7014().s[35]++,
/* istanbul ignore next */
(cov_1cjwyw7014().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1cjwyw7014().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1cjwyw7014().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[9]++;
  cov_1cjwyw7014().s[36]++;
  return /* istanbul ignore next */(cov_1cjwyw7014().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_1cjwyw7014().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1cjwyw7014().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1cjwyw7014().s[38]++;
exports.UploadController = void 0;
const client_1 =
/* istanbul ignore next */
(cov_1cjwyw7014().s[39]++, require("@prisma/client"));
const multer_1 =
/* istanbul ignore next */
(cov_1cjwyw7014().s[40]++, __importDefault(require("multer")));
const path =
/* istanbul ignore next */
(cov_1cjwyw7014().s[41]++, __importStar(require("path")));
const fs =
/* istanbul ignore next */
(cov_1cjwyw7014().s[42]++, __importStar(require("fs/promises")));
const crypto =
/* istanbul ignore next */
(cov_1cjwyw7014().s[43]++, __importStar(require("crypto")));
const sharp_1 =
/* istanbul ignore next */
(cov_1cjwyw7014().s[44]++, __importDefault(require("sharp")));
const logger_1 =
/* istanbul ignore next */
(cov_1cjwyw7014().s[45]++, __importDefault(require("../utils/logger")));
const prisma =
/* istanbul ignore next */
(cov_1cjwyw7014().s[46]++, new client_1.PrismaClient());
// Configuração do multer
const storage =
/* istanbul ignore next */
(cov_1cjwyw7014().s[47]++, multer_1.default.diskStorage({
  destination: async (req, file, cb) => {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[10]++;
    const uploadDir =
    /* istanbul ignore next */
    (cov_1cjwyw7014().s[48]++, path.join(process.cwd(), 'uploads'));
    /* istanbul ignore next */
    cov_1cjwyw7014().s[49]++;
    try {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[50]++;
      await fs.access(uploadDir);
    } catch {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[51]++;
      await fs.mkdir(uploadDir, {
        recursive: true
      });
    }
    /* istanbul ignore next */
    cov_1cjwyw7014().s[52]++;
    cb(null, uploadDir);
  },
  filename: (req, file, cb) => {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[11]++;
    const uniqueSuffix =
    /* istanbul ignore next */
    (cov_1cjwyw7014().s[53]++, crypto.randomUUID());
    const ext =
    /* istanbul ignore next */
    (cov_1cjwyw7014().s[54]++, path.extname(file.originalname));
    /* istanbul ignore next */
    cov_1cjwyw7014().s[55]++;
    cb(null, `${uniqueSuffix}${ext}`);
  }
}));
// Filtros de arquivo
/* istanbul ignore next */
cov_1cjwyw7014().s[56]++;
const fileFilter = (req, file, cb) => {
  /* istanbul ignore next */
  cov_1cjwyw7014().f[12]++;
  // Tipos permitidos
  const allowedMimes =
  /* istanbul ignore next */
  (cov_1cjwyw7014().s[57]++, [
  // Imagens
  'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml',
  // Documentos
  'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/plain', 'text/csv']);
  /* istanbul ignore next */
  cov_1cjwyw7014().s[58]++;
  if (allowedMimes.includes(file.mimetype)) {
    /* istanbul ignore next */
    cov_1cjwyw7014().b[20][0]++;
    cov_1cjwyw7014().s[59]++;
    cb(null, true);
  } else {
    /* istanbul ignore next */
    cov_1cjwyw7014().b[20][1]++;
    cov_1cjwyw7014().s[60]++;
    cb(new Error(`Tipo de arquivo não permitido: ${file.mimetype}`));
  }
};
// Configuração do multer
const upload =
/* istanbul ignore next */
(cov_1cjwyw7014().s[61]++, (0, multer_1.default)({
  storage,
  fileFilter,
  limits: {
    fileSize: 10 * 1024 * 1024,
    // 10MB
    files: 5 // Máximo 5 arquivos por vez
  }
}));
/**
 * Controller responsável pelo gerenciamento de uploads
 */
class UploadController {
  /**
   * Middleware do multer para upload único
   */
  static uploadSingle =
  /* istanbul ignore next */
  (cov_1cjwyw7014().s[62]++, upload.single('file'));
  /**
   * Middleware do multer para múltiplos uploads
   */
  static uploadMultiple =
  /* istanbul ignore next */
  (cov_1cjwyw7014().s[63]++, upload.array('files', 5));
  /**
   * Determina o tipo de arquivo baseado no mimetype
   */
  static getFileType(mimetype) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[13]++;
    cov_1cjwyw7014().s[64]++;
    if (mimetype.startsWith('image/')) {
      /* istanbul ignore next */
      cov_1cjwyw7014().b[21][0]++;
      cov_1cjwyw7014().s[65]++;
      return 'IMAGE';
    } else
    /* istanbul ignore next */
    {
      cov_1cjwyw7014().b[21][1]++;
    }
    cov_1cjwyw7014().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[23][0]++, mimetype.includes('pdf')) ||
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[23][1]++, mimetype.includes('document')) ||
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[23][2]++, mimetype.includes('spreadsheet')) ||
    /* istanbul ignore next */
    (cov_1cjwyw7014().b[23][3]++, mimetype.includes('text'))) {
      /* istanbul ignore next */
      cov_1cjwyw7014().b[22][0]++;
      cov_1cjwyw7014().s[67]++;
      return 'DOCUMENT';
    } else
    /* istanbul ignore next */
    {
      cov_1cjwyw7014().b[22][1]++;
    }
    cov_1cjwyw7014().s[68]++;
    return 'OTHER';
  }
  /**
   * Processa imagem (redimensionamento e otimização)
   */
  static async processImage(filePath, mimetype) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[14]++;
    cov_1cjwyw7014().s[69]++;
    try {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[25][0]++, !mimetype.startsWith('image/')) ||
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[25][1]++, mimetype === 'image/svg+xml')) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[24][0]++;
        cov_1cjwyw7014().s[71]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[24][1]++;
      }
      const image =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[72]++, (0, sharp_1.default)(filePath));
      const metadata =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[73]++, await image.metadata());
      // Criar versões redimensionadas
      const sizes =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[74]++, [{
        name: 'thumbnail',
        width: 150,
        height: 150
      }, {
        name: 'small',
        width: 300,
        height: 300
      }, {
        name: 'medium',
        width: 600,
        height: 600
      }, {
        name: 'large',
        width: 1200,
        height: 1200
      }]);
      const versions =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[75]++, {});
      const dir =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[76]++, path.dirname(filePath));
      const name =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[77]++, path.parse(filePath).name);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[78]++;
      for (const size of sizes) {
        /* istanbul ignore next */
        cov_1cjwyw7014().s[79]++;
        if (
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[27][0]++, metadata.width) &&
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[27][1]++, metadata.width > size.width)) {
          /* istanbul ignore next */
          cov_1cjwyw7014().b[26][0]++;
          const resizedPath =
          /* istanbul ignore next */
          (cov_1cjwyw7014().s[80]++, path.join(dir, `${name}_${size.name}.webp`));
          /* istanbul ignore next */
          cov_1cjwyw7014().s[81]++;
          await image.resize(size.width, size.height, {
            fit: 'inside',
            withoutEnlargement: true
          }).webp({
            quality: 80
          }).toFile(resizedPath);
          /* istanbul ignore next */
          cov_1cjwyw7014().s[82]++;
          versions[size.name] = {
            path: resizedPath,
            url: `/uploads/${path.basename(resizedPath)}`,
            width: size.width,
            height: size.height
          };
        } else
        /* istanbul ignore next */
        {
          cov_1cjwyw7014().b[26][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1cjwyw7014().s[83]++;
      return {
        original: {
          width: metadata.width,
          height: metadata.height,
          format: metadata.format
        },
        versions
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[84]++;
      logger_1.default.error('Erro ao processar imagem', {
        error,
        filePath
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[85]++;
      return null;
    }
  }
  /**
   * Upload de arquivo único
   */
  static async uploadFile(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[15]++;
    cov_1cjwyw7014().s[86]++;
    try {
      const currentUser =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[87]++, req.user);
      const file =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[88]++, req.file);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[89]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[28][0]++;
        cov_1cjwyw7014().s[90]++;
        res.status(400).json({
          success: false,
          message: 'Nenhum arquivo foi enviado'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[91]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[28][1]++;
      }
      const fileType =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[92]++, UploadController.getFileType(file.mimetype));
      const fileUrl =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[93]++, `/uploads/${file.filename}`);
      // Processar imagem se necessário
      let metadata =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[94]++, null);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[95]++;
      if (fileType === 'IMAGE') {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[29][0]++;
        cov_1cjwyw7014().s[96]++;
        metadata = await UploadController.processImage(file.path, file.mimetype);
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[29][1]++;
      }
      // Salvar informações no banco
      const uploadedFile =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[97]++, await prisma.upload.create({
        data: {
          originalName: file.originalname,
          filename: file.filename,
          mimetype: file.mimetype,
          size: file.size,
          path: file.path,
          url: fileUrl,
          type: fileType,
          // Campo metadata removido pois não existe no modelo Upload
          userId: currentUser.id
        }
      }));
      // Log da ação
      /* istanbul ignore next */
      cov_1cjwyw7014().s[98]++;
      logger_1.default.info('Arquivo enviado', {
        fileId: uploadedFile.id,
        filename: file.filename,
        originalName: file.originalname,
        size: file.size,
        type: fileType,
        uploadedBy: currentUser.id
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[99]++;
      res.status(201).json({
        success: true,
        message: 'Arquivo enviado com sucesso',
        data: {
          file: {
            id: uploadedFile.id,
            originalName: uploadedFile.originalName,
            filename: uploadedFile.filename,
            url: uploadedFile.url,
            type: uploadedFile.type,
            size: uploadedFile.size,
            mimetype: uploadedFile.mimetype,
            // metadata removido pois não existe no modelo Upload
            createdAt: uploadedFile.createdAt
          }
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[100]++;
      logger_1.default.error('Erro ao fazer upload de arquivo', {
        error
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[101]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Upload de múltiplos arquivos
   */
  static async uploadMultipleFiles(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[16]++;
    cov_1cjwyw7014().s[102]++;
    try {
      const currentUser =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[103]++, req.user);
      const files =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[104]++, req.files);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[105]++;
      if (
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[31][0]++, !files) ||
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[31][1]++, files.length === 0)) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[30][0]++;
        cov_1cjwyw7014().s[106]++;
        res.status(400).json({
          success: false,
          message: 'Nenhum arquivo foi enviado'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[107]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[30][1]++;
      }
      const uploadedFiles =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[108]++, []);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[109]++;
      for (const file of files) {
        const fileType =
        /* istanbul ignore next */
        (cov_1cjwyw7014().s[110]++, UploadController.getFileType(file.mimetype));
        const fileUrl =
        /* istanbul ignore next */
        (cov_1cjwyw7014().s[111]++, `/uploads/${file.filename}`);
        // Processar imagem se necessário
        let metadata =
        /* istanbul ignore next */
        (cov_1cjwyw7014().s[112]++, null);
        /* istanbul ignore next */
        cov_1cjwyw7014().s[113]++;
        if (fileType === 'IMAGE') {
          /* istanbul ignore next */
          cov_1cjwyw7014().b[32][0]++;
          cov_1cjwyw7014().s[114]++;
          metadata = await UploadController.processImage(file.path, file.mimetype);
        } else
        /* istanbul ignore next */
        {
          cov_1cjwyw7014().b[32][1]++;
        }
        // Salvar informações no banco
        const uploadedFile =
        /* istanbul ignore next */
        (cov_1cjwyw7014().s[115]++, await prisma.upload.create({
          data: {
            originalName: file.originalname,
            filename: file.filename,
            mimetype: file.mimetype,
            size: file.size,
            path: file.path,
            url: fileUrl,
            type: fileType,
            // Campo metadata removido pois não existe no modelo Upload
            userId: currentUser.id
          }
        }));
        /* istanbul ignore next */
        cov_1cjwyw7014().s[116]++;
        uploadedFiles.push({
          id: uploadedFile.id,
          originalName: uploadedFile.originalName,
          filename: uploadedFile.filename,
          url: uploadedFile.url,
          type: uploadedFile.type,
          size: uploadedFile.size,
          mimetype: uploadedFile.mimetype,
          // metadata removido pois não existe no modelo Upload
          createdAt: uploadedFile.createdAt
        });
      }
      // Log da ação
      /* istanbul ignore next */
      cov_1cjwyw7014().s[117]++;
      logger_1.default.info('Múltiplos arquivos enviados', {
        count: uploadedFiles.length,
        uploadedBy: currentUser.id,
        files: uploadedFiles.map(f => {
          /* istanbul ignore next */
          cov_1cjwyw7014().f[17]++;
          cov_1cjwyw7014().s[118]++;
          return {
            id: f.id,
            name: f.originalName
          };
        })
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[119]++;
      res.status(201).json({
        success: true,
        message: `${uploadedFiles.length} arquivos enviados com sucesso`,
        data: {
          files: uploadedFiles
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[120]++;
      logger_1.default.error('Erro ao fazer upload de múltiplos arquivos', {
        error
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[121]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Lista arquivos com paginação e filtros
   */
  static async getFiles(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[18]++;
    cov_1cjwyw7014().s[122]++;
    try {
      const {
        type,
        mimetype,
        search,
        uploadedBy,
        dateFrom,
        dateTo,
        page =
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[33][0]++, 1),
        limit =
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[34][0]++, 20),
        sortBy =
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[35][0]++, 'createdAt'),
        sortOrder =
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[36][0]++, 'desc')
      } =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[123]++, req.query);
      const skip =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[124]++, (Number(page) - 1) * Number(limit));
      const take =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[125]++, Number(limit));
      // Construir filtros
      const where =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[126]++, {});
      /* istanbul ignore next */
      cov_1cjwyw7014().s[127]++;
      if (type) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[37][0]++;
        cov_1cjwyw7014().s[128]++;
        where.type = type;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[37][1]++;
      }
      cov_1cjwyw7014().s[129]++;
      if (mimetype) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[38][0]++;
        cov_1cjwyw7014().s[130]++;
        where.mimetype = mimetype;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[38][1]++;
      }
      cov_1cjwyw7014().s[131]++;
      if (search) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[39][0]++;
        cov_1cjwyw7014().s[132]++;
        where.OR = [{
          originalName: {
            contains: search,
            mode: 'insensitive'
          }
        }, {
          filename: {
            contains: search,
            mode: 'insensitive'
          }
        }];
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[39][1]++;
      }
      cov_1cjwyw7014().s[133]++;
      if (uploadedBy) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[40][0]++;
        cov_1cjwyw7014().s[134]++;
        where.userId = uploadedBy;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[40][1]++;
      }
      cov_1cjwyw7014().s[135]++;
      if (
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[42][0]++, dateFrom) ||
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[42][1]++, dateTo)) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[41][0]++;
        cov_1cjwyw7014().s[136]++;
        where.createdAt = {};
        /* istanbul ignore next */
        cov_1cjwyw7014().s[137]++;
        if (dateFrom) {
          /* istanbul ignore next */
          cov_1cjwyw7014().b[43][0]++;
          cov_1cjwyw7014().s[138]++;
          where.createdAt.gte = new Date(dateFrom);
        } else
        /* istanbul ignore next */
        {
          cov_1cjwyw7014().b[43][1]++;
        }
        cov_1cjwyw7014().s[139]++;
        if (dateTo) {
          /* istanbul ignore next */
          cov_1cjwyw7014().b[44][0]++;
          const endDate =
          /* istanbul ignore next */
          (cov_1cjwyw7014().s[140]++, new Date(dateTo));
          /* istanbul ignore next */
          cov_1cjwyw7014().s[141]++;
          endDate.setHours(23, 59, 59, 999);
          /* istanbul ignore next */
          cov_1cjwyw7014().s[142]++;
          where.createdAt.lte = endDate;
        } else
        /* istanbul ignore next */
        {
          cov_1cjwyw7014().b[44][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[41][1]++;
      }
      // Definir ordenação
      const orderBy =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[143]++, {});
      /* istanbul ignore next */
      cov_1cjwyw7014().s[144]++;
      orderBy[sortBy] = sortOrder;
      // Buscar arquivos
      const [files, total] =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[145]++, await Promise.all([prisma.upload.findMany({
        where,
        include: {
          user: {
            select: {
              id: true,
              name: true,
              email: true
            }
          }
        },
        skip,
        take,
        orderBy
      }), prisma.upload.count({
        where
      })]));
      const totalPages =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[146]++, Math.ceil(total / take));
      // Estatísticas
      const stats =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[147]++, await prisma.upload.groupBy({
        by: ['type'],
        _count: true,
        _sum: {
          size: true
        }
      }));
      const statistics =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[148]++, {
        total,
        totalSize: stats.reduce((acc, stat) => {
          /* istanbul ignore next */
          cov_1cjwyw7014().f[19]++;
          cov_1cjwyw7014().s[149]++;
          return acc + (
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[45][0]++, stat._sum.size) ||
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[45][1]++, 0));
        }, 0),
        byType: stats.reduce((acc, stat) => {
          /* istanbul ignore next */
          cov_1cjwyw7014().f[20]++;
          cov_1cjwyw7014().s[150]++;
          acc[stat.type] = {
            count: stat._count,
            size:
            /* istanbul ignore next */
            (cov_1cjwyw7014().b[46][0]++, stat._sum.size) ||
            /* istanbul ignore next */
            (cov_1cjwyw7014().b[46][1]++, 0)
          };
          /* istanbul ignore next */
          cov_1cjwyw7014().s[151]++;
          return acc;
        }, {})
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[152]++;
      res.status(200).json({
        success: true,
        message: 'Arquivos listados com sucesso',
        data: {
          files: files.map(file => {
            /* istanbul ignore next */
            cov_1cjwyw7014().f[21]++;
            cov_1cjwyw7014().s[153]++;
            return {
              ...file
              // Campo metadata removido pois não existe no modelo Upload
            };
          }),
          statistics,
          pagination: {
            page: Number(page),
            limit: take,
            total,
            totalPages,
            hasNext: Number(page) < totalPages,
            hasPrev: Number(page) > 1
          }
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[154]++;
      logger_1.default.error('Erro ao listar arquivos', {
        error
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[155]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Busca arquivo por ID
   */
  static async getFileById(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[22]++;
    cov_1cjwyw7014().s[156]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[157]++, req.params);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[158]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[47][0]++;
        cov_1cjwyw7014().s[159]++;
        res.status(400).json({
          success: false,
          message: 'ID do arquivo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[160]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[47][1]++;
      }
      const file =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[161]++, await prisma.upload.findUnique({
        where: {
          id
        },
        include: {
          user: {
            select: {
              id: true,
              name: true,
              email: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_1cjwyw7014().s[162]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[48][0]++;
        cov_1cjwyw7014().s[163]++;
        res.status(404).json({
          success: false,
          message: 'Arquivo não encontrado'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[164]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[48][1]++;
      }
      cov_1cjwyw7014().s[165]++;
      res.status(200).json({
        success: true,
        message: 'Arquivo encontrado',
        data: {
          file: {
            ...file
            // Campo metadata removido pois não existe no modelo Upload
          }
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[166]++;
      logger_1.default.error('Erro ao buscar arquivo', {
        error,
        fileId: req.params.id
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[167]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Remove um arquivo
   */
  static async deleteFile(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[23]++;
    cov_1cjwyw7014().s[168]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[169]++, req.params);
      const currentUser =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[170]++, req.user);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[171]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[49][0]++;
        cov_1cjwyw7014().s[172]++;
        res.status(400).json({
          success: false,
          message: 'ID do arquivo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[173]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[49][1]++;
      }
      const file =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[174]++, await prisma.upload.findUnique({
        where: {
          id
        }
      }));
      /* istanbul ignore next */
      cov_1cjwyw7014().s[175]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[50][0]++;
        cov_1cjwyw7014().s[176]++;
        res.status(404).json({
          success: false,
          message: 'Arquivo não encontrado'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[177]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[50][1]++;
      }
      // Verificar permissões (proprietário ou admin)
      cov_1cjwyw7014().s[178]++;
      if (
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[52][0]++, currentUser.role !== 'ADMIN') &&
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[52][1]++, file.userId !== currentUser.id)) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[51][0]++;
        cov_1cjwyw7014().s[179]++;
        res.status(403).json({
          success: false,
          message: 'Sem permissão para deletar este arquivo'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[180]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[51][1]++;
      }
      // Remover arquivo físico
      cov_1cjwyw7014().s[181]++;
      try {
        /* istanbul ignore next */
        cov_1cjwyw7014().s[182]++;
        await fs.unlink(file.path);
        // TODO: Implementar remoção de versões redimensionadas quando o modelo Upload for atualizado para suportar metadata
        // Código removido pois o campo metadata não existe no modelo Upload
      } catch (error) {
        /* istanbul ignore next */
        cov_1cjwyw7014().s[183]++;
        logger_1.default.warn('Erro ao remover arquivo físico', {
          path: file.path,
          error
        });
      }
      // Remover registro do banco
      /* istanbul ignore next */
      cov_1cjwyw7014().s[184]++;
      await prisma.upload.delete({
        where: {
          id
        }
      });
      // Log da ação
      /* istanbul ignore next */
      cov_1cjwyw7014().s[185]++;
      logger_1.default.info('Arquivo deletado', {
        fileId: id,
        filename: file.filename,
        originalName: file.originalName,
        deletedBy: currentUser.id
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[186]++;
      res.status(200).json({
        success: true,
        message: 'Arquivo deletado com sucesso'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[187]++;
      logger_1.default.error('Erro ao deletar arquivo', {
        error,
        fileId: req.params.id
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[188]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Remove múltiplos arquivos
   */
  static async deleteMultipleFiles(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[24]++;
    cov_1cjwyw7014().s[189]++;
    try {
      const {
        fileIds
      } =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[190]++, req.body);
      const currentUser =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[191]++, req.user);
      /* istanbul ignore next */
      cov_1cjwyw7014().s[192]++;
      if (
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[54][0]++, !fileIds) ||
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[54][1]++, !Array.isArray(fileIds)) ||
      /* istanbul ignore next */
      (cov_1cjwyw7014().b[54][2]++, fileIds.length === 0)) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[53][0]++;
        cov_1cjwyw7014().s[193]++;
        res.status(400).json({
          success: false,
          message: 'Lista de IDs de arquivos é obrigatória'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[194]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[53][1]++;
      }
      cov_1cjwyw7014().s[195]++;
      if (fileIds.length > 50) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[55][0]++;
        cov_1cjwyw7014().s[196]++;
        res.status(400).json({
          success: false,
          message: 'Máximo de 50 arquivos por vez'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[197]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[55][1]++;
      }
      // Buscar arquivos
      const files =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[198]++, await prisma.upload.findMany({
        where: {
          id: {
            in: fileIds
          },
          // Apenas admin pode deletar arquivos de outros usuários
          ...(
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[56][0]++, currentUser.role !== 'ADMIN') &&
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[56][1]++, {
            uploadedById: currentUser.id
          }))
        }
      }));
      /* istanbul ignore next */
      cov_1cjwyw7014().s[199]++;
      if (files.length === 0) {
        /* istanbul ignore next */
        cov_1cjwyw7014().b[57][0]++;
        cov_1cjwyw7014().s[200]++;
        res.status(404).json({
          success: false,
          message: 'Nenhum arquivo encontrado ou sem permissão'
        });
        /* istanbul ignore next */
        cov_1cjwyw7014().s[201]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1cjwyw7014().b[57][1]++;
      }
      // Remover arquivos físicos
      cov_1cjwyw7014().s[202]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_1cjwyw7014().s[203]++;
        try {
          /* istanbul ignore next */
          cov_1cjwyw7014().s[204]++;
          await fs.unlink(file.path);
          // TODO: Implementar remoção de versões redimensionadas quando necessário
        } catch (error) {
          /* istanbul ignore next */
          cov_1cjwyw7014().s[205]++;
          logger_1.default.warn('Erro ao remover arquivo físico', {
            path: file.path,
            error
          });
        }
      }
      // Remover registros do banco
      const result =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[206]++, await prisma.upload.deleteMany({
        where: {
          id: {
            in: files.map(f => {
              /* istanbul ignore next */
              cov_1cjwyw7014().f[25]++;
              cov_1cjwyw7014().s[207]++;
              return f.id;
            })
          }
        }
      }));
      // Log da ação
      /* istanbul ignore next */
      cov_1cjwyw7014().s[208]++;
      logger_1.default.info('Múltiplos arquivos deletados', {
        count: result.count,
        deletedBy: currentUser.id,
        files: files.map(f => {
          /* istanbul ignore next */
          cov_1cjwyw7014().f[26]++;
          cov_1cjwyw7014().s[209]++;
          return {
            id: f.id,
            name: f.originalName
          };
        })
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[210]++;
      res.status(200).json({
        success: true,
        message: `${result.count} arquivos deletados com sucesso`,
        data: {
          deletedCount: result.count
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[211]++;
      logger_1.default.error('Erro ao deletar múltiplos arquivos', {
        error
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[212]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Obtém estatísticas de arquivos
   */
  static async getFileStats(req, res) {
    /* istanbul ignore next */
    cov_1cjwyw7014().f[27]++;
    cov_1cjwyw7014().s[213]++;
    try {
      const {
        period =
        /* istanbul ignore next */
        (cov_1cjwyw7014().b[58][0]++, '30')
      } =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[214]++, req.query);
      const periodDays =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[215]++, Number(period));
      const dateLimit =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[216]++, new Date());
      /* istanbul ignore next */
      cov_1cjwyw7014().s[217]++;
      dateLimit.setDate(dateLimit.getDate() - periodDays);
      const [totalStats, periodStats, sizeStats] =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[218]++, await Promise.all([
      // Estatísticas gerais
      prisma.upload.groupBy({
        by: ['type'],
        _count: true,
        _sum: {
          size: true
        }
      }),
      // Estatísticas do período
      prisma.upload.groupBy({
        by: ['type'],
        where: {
          createdAt: {
            gte: dateLimit
          }
        },
        _count: true,
        _sum: {
          size: true
        }
      }),
      // Estatísticas de tamanho
      prisma.upload.aggregate({
        _sum: {
          size: true
        },
        _avg: {
          size: true
        },
        _count: true
      })]));
      const statistics =
      /* istanbul ignore next */
      (cov_1cjwyw7014().s[219]++, {
        total: {
          files: sizeStats._count,
          size:
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[59][0]++, sizeStats._sum.size) ||
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[59][1]++, 0),
          averageSize:
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[60][0]++, sizeStats._avg.size) ||
          /* istanbul ignore next */
          (cov_1cjwyw7014().b[60][1]++, 0),
          byType: totalStats.reduce((acc, stat) => {
            /* istanbul ignore next */
            cov_1cjwyw7014().f[28]++;
            cov_1cjwyw7014().s[220]++;
            acc[stat.type] = {
              count: stat._count,
              size:
              /* istanbul ignore next */
              (cov_1cjwyw7014().b[61][0]++, stat._sum.size) ||
              /* istanbul ignore next */
              (cov_1cjwyw7014().b[61][1]++, 0)
            };
            /* istanbul ignore next */
            cov_1cjwyw7014().s[221]++;
            return acc;
          }, {})
        },
        period: {
          days: periodDays,
          byType: periodStats.reduce((acc, stat) => {
            /* istanbul ignore next */
            cov_1cjwyw7014().f[29]++;
            cov_1cjwyw7014().s[222]++;
            acc[stat.type] = {
              count: stat._count,
              size:
              /* istanbul ignore next */
              (cov_1cjwyw7014().b[62][0]++, stat._sum.size) ||
              /* istanbul ignore next */
              (cov_1cjwyw7014().b[62][1]++, 0)
            };
            /* istanbul ignore next */
            cov_1cjwyw7014().s[223]++;
            return acc;
          }, {})
        }
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[224]++;
      res.status(200).json({
        success: true,
        message: 'Estatísticas obtidas com sucesso',
        data: {
          statistics
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1cjwyw7014().s[225]++;
      logger_1.default.error('Erro ao obter estatísticas de arquivos', {
        error
      });
      /* istanbul ignore next */
      cov_1cjwyw7014().s[226]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
}
/* istanbul ignore next */
cov_1cjwyw7014().s[227]++;
exports.UploadController = UploadController;
/* istanbul ignore next */
cov_1cjwyw7014().s[228]++;
exports.default = UploadController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,