{"version":3,"names":["cov_xj0vkrqbs","actualCoverage","cors_1","s","__importDefault","require","helmet_1","express_rate_limit_1","compression_1","exports","corsMiddleware","default","origin","callback","f","allowedOrigins","process","env","FRONTEND_URL","ADMIN_URL","filter","Boolean","b","includes","Error","credentials","methods","allowedHeaders","exposedHeaders","maxAge","helmetMiddleware","contentSecurityPolicy","directives","defaultSrc","styleSrc","fontSrc","imgSrc","scriptSrc","connectSrc","frameSrc","objectSrc","mediaSrc","manifestSrc","crossOriginEmbedderPolicy","hsts","includeSubDomains","preload","generalRateLimit","windowMs","max","message","error","retryAfter","standardHeaders","legacyHeaders","skip","req","NODE_ENV","ip","socket","remoteAddress","startsWith","authRateLimit","skipSuccessfulRequests","uploadRateLimit","apiRateLimit","compressionMiddleware","level","threshold","res","headers","customSecurityHeaders","next","removeHeader","setHeader","API_VERSION","Date","now","toString","securityLogger","startTime","console","log","toISOString","method","path","get","on","duration","statusCode"],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\middlewares\\security.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport rateLimit from 'express-rate-limit';\r\nimport compression from 'compression';\r\n\r\n/**\r\n * Configuração do CORS para permitir requisições de origens específicas\r\n */\r\nexport const corsMiddleware = cors({\r\n  origin: (origin, callback) => {\r\n    // Lista de origens permitidas\r\n    const allowedOrigins = [\r\n      'http://localhost:3000',\r\n      'http://localhost:5173',\r\n      'http://localhost:4173',\r\n      process.env.FRONTEND_URL,\r\n      process.env.ADMIN_URL\r\n    ].filter(Boolean); // Remove valores undefined/null\r\n\r\n    // Permite requisições sem origin (ex: aplicações mobile, Postman)\r\n    if (!origin) return callback(null, true);\r\n\r\n    if (allowedOrigins.includes(origin)) {\r\n      callback(null, true);\r\n    } else {\r\n      callback(new Error('Não permitido pelo CORS'));\r\n    }\r\n  },\r\n  credentials: true, // Permite cookies e headers de autenticação\r\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\r\n  allowedHeaders: [\r\n    'Origin',\r\n    'X-Requested-With',\r\n    'Content-Type',\r\n    'Accept',\r\n    'Authorization',\r\n    'Cache-Control',\r\n    'Pragma'\r\n  ],\r\n  exposedHeaders: ['X-Total-Count', 'X-Page-Count'],\r\n  maxAge: 86400 // Cache preflight por 24 horas\r\n});\r\n\r\n/**\r\n * Configuração do Helmet para segurança de headers HTTP\r\n */\r\nexport const helmetMiddleware = helmet({\r\n  contentSecurityPolicy: {\r\n    directives: {\r\n      defaultSrc: [\"'self'\"],\r\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\r\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\r\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\r\n      scriptSrc: [\"'self'\"],\r\n      connectSrc: [\"'self'\"],\r\n      frameSrc: [\"'none'\"],\r\n      objectSrc: [\"'none'\"],\r\n      mediaSrc: [\"'self'\"],\r\n      manifestSrc: [\"'self'\"]\r\n    }\r\n  },\r\n  crossOriginEmbedderPolicy: false, // Desabilita para compatibilidade\r\n  hsts: {\r\n    maxAge: 31536000, // 1 ano\r\n    includeSubDomains: true,\r\n    preload: true\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiting geral para todas as rotas\r\n */\r\nexport const generalRateLimit = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutos\r\n  max: 1000, // Máximo 1000 requisições por IP por janela\r\n  message: {\r\n    error: 'Muitas requisições deste IP, tente novamente em 15 minutos.',\r\n    retryAfter: 15 * 60\r\n  },\r\n  standardHeaders: true, // Retorna rate limit info nos headers `RateLimit-*`\r\n  legacyHeaders: false, // Desabilita headers `X-RateLimit-*`\r\n  skip: (req: Request): boolean => {\r\n    // Pula rate limiting para IPs locais em desenvolvimento\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const ip = req.ip || req.socket.remoteAddress;\r\n      return ip === '127.0.0.1' || ip === '::1' || (ip?.startsWith('192.168.') ?? false);\r\n    }\r\n    return false;\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiting mais restritivo para rotas de autenticação\r\n */\r\nexport const authRateLimit = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutos\r\n  max: 10, // Máximo 10 tentativas de login por IP por janela\r\n  message: {\r\n    error: 'Muitas tentativas de login. Tente novamente em 15 minutos.',\r\n    retryAfter: 15 * 60\r\n  },\r\n  standardHeaders: true,\r\n  legacyHeaders: false,\r\n  skipSuccessfulRequests: true, // Não conta requisições bem-sucedidas\r\n  skip: (req: Request): boolean => {\r\n    // Pula rate limiting para IPs locais em desenvolvimento\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const ip = req.ip || req.socket.remoteAddress;\r\n      return ip === '127.0.0.1' || ip === '::1' || (ip?.startsWith('192.168.') ?? false);\r\n    }\r\n    return false;\r\n  }\r\n});\r\n\r\n/**\r\n * Rate limiting para rotas de upload\r\n */\r\nexport const uploadRateLimit = rateLimit({\r\n  windowMs: 60 * 60 * 1000, // 1 hora\r\n  max: 50, // Máximo 50 uploads por IP por hora\r\n  message: {\r\n    error: 'Limite de uploads excedido. Tente novamente em 1 hora.',\r\n    retryAfter: 60 * 60\r\n  },\r\n  standardHeaders: true,\r\n  legacyHeaders: false\r\n});\r\n\r\n/**\r\n * Rate limiting para rotas de API em geral\r\n */\r\nexport const apiRateLimit = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutos\r\n  max: 500, // Máximo 500 requisições por IP por janela\r\n  message: {\r\n    error: 'Limite de requisições da API excedido. Tente novamente em 15 minutos.',\r\n    retryAfter: 15 * 60\r\n  },\r\n  standardHeaders: true,\r\n  legacyHeaders: false\r\n});\r\n\r\n/**\r\n * Middleware de compressão para otimizar o tamanho das respostas\r\n */\r\nexport const compressionMiddleware = compression({\r\n  level: 6, // Nível de compressão (0-9)\r\n  threshold: 1024, // Só comprime se a resposta for maior que 1KB\r\n  filter: (req: Request, res: Response) => {\r\n    // Não comprime se o cliente não suporta\r\n    if (req.headers['x-no-compression']) {\r\n      return false;\r\n    }\r\n    // Usa o filtro padrão do compression\r\n    return compression.filter(req, res);\r\n  }\r\n});\r\n\r\n/**\r\n * Middleware para adicionar headers de segurança customizados\r\n */\r\nexport const customSecurityHeaders = (req: Request, res: Response, next: NextFunction) => {\r\n  // Remove header que expõe informações do servidor\r\n  res.removeHeader('X-Powered-By');\r\n  \r\n  // Adiciona headers de segurança customizados\r\n  res.setHeader('X-API-Version', process.env.API_VERSION || '1.0.0');\r\n  res.setHeader('X-Response-Time', Date.now().toString());\r\n  \r\n  // Previne ataques de clickjacking\r\n  res.setHeader('X-Frame-Options', 'DENY');\r\n  \r\n  // Previne MIME type sniffing\r\n  res.setHeader('X-Content-Type-Options', 'nosniff');\r\n  \r\n  // Força HTTPS em produção\r\n  if (process.env.NODE_ENV === 'production') {\r\n    res.setHeader('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');\r\n  }\r\n  \r\n  next();\r\n};\r\n\r\n/**\r\n * Middleware para log de requisições de segurança\r\n */\r\nexport const securityLogger = (req: Request, res: Response, next: NextFunction) => {\r\n  const startTime = Date.now();\r\n  \r\n  // Log da requisição\r\n  console.log(`[${new Date().toISOString()}] ${req.method} ${req.path} - IP: ${req.ip} - User-Agent: ${req.get('User-Agent')}`);\r\n  \r\n  // Log da resposta quando terminar\r\n  res.on('finish', () => {\r\n    const duration = Date.now() - startTime;\r\n    console.log(`[${new Date().toISOString()}] ${req.method} ${req.path} - ${res.statusCode} - ${duration}ms`);\r\n  });\r\n  \r\n  next();\r\n};"],"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","ignoreList":[]}