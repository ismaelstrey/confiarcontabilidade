8db8036489c0717ee695324e71097e67
"use strict";

/* istanbul ignore next */
function cov_1bkbpoafh1() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\repositories\\userRepository.ts";
  var hash = "74fcc88aa7eb988a4001476382587c24c056603e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\repositories\\userRepository.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 12,
          column: 11
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "5": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "6": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "7": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "8": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "9": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "10": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "11": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 40
        }
      },
      "12": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "13": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "14": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 46
        }
      },
      "15": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "16": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 81,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 21
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 46
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 64
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 68
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 75,
            column: 29
          }
        },
        loc: {
          start: {
            line: 75,
            column: 43
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 75
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {},
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\repositories\\userRepository.ts",
      mappings: ";;;AAEA,MAAa,cAAc;IACL;IAApB,YAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IAAG,CAAC;IAE5C,KAAK,CAAC,MAAM,CAAC,IAA4B;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE;gBACN,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,IAAI;gBACX,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,IAAI;gBAEd,4BAA4B;gBAC5B,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,EAAE,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,KAAa;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,EAAE,KAAK,EAAE;SACjB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,IAA4B;QACnD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE,EAAE,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IAED,2EAA2E;IAE3E,sGAAsG;IAEtG,KAAK,CAAC,cAAc,CAAC,EAAU,EAAE,cAAsB;QACrD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,IAAI,EAAE;gBACJ,QAAQ,EAAE,cAAc;aACzB;SACF,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,uEAAuE;QACvE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3C,EAAE,EAAE,CAAC,MAAM,CAAC;YACZ,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAClC,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAA4B,CAAC,CAAC;IACnC,CAAC;CACF;AAvFD,wCAuFC",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\repositories\\userRepository.ts"],
      sourcesContent: ["import { PrismaClient, User, Prisma } from '@prisma/client';\r\n\r\nexport class UserRepository {\r\n  constructor(private prisma: PrismaClient) {}\r\n\r\n  async create(data: Prisma.UserCreateInput): Promise<User> {\r\n    return this.prisma.user.create({\r\n      data,\r\n    });\r\n  }\r\n\r\n  async findAll(): Promise<Omit<User, 'password'>[]> {\r\n    return this.prisma.user.findMany({\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n        email: true,\r\n        role: true,\r\n        avatar: true,\r\n        createdAt: true,\r\n        updatedAt: true,\r\n        isActive: true,\r\n\r\n        // Excluir senha da consulta\r\n        password: false,\r\n      },\r\n    });\r\n  }\r\n\r\n  async findById(id: string): Promise<User | null> {\r\n    return this.prisma.user.findUnique({\r\n      where: { id },\r\n    });\r\n  }\r\n\r\n  async findByEmail(email: string): Promise<User | null> {\r\n    return this.prisma.user.findUnique({\r\n      where: { email },\r\n    });\r\n  }\r\n\r\n  async update(id: string, data: Prisma.UserUpdateInput): Promise<User> {\r\n    return this.prisma.user.update({\r\n      where: { id },\r\n      data,\r\n    });\r\n  }\r\n\r\n  async delete(id: string): Promise<User> {\r\n    return this.prisma.user.delete({\r\n      where: { id },\r\n    });\r\n  }\r\n\r\n  // M\xE9todos de profile removidos - modelo Profile n\xE3o existe no schema atual\r\n\r\n  // M\xE9todos de reset token removidos - campos resetToken e resetTokenExpiry n\xE3o existem no schema atual\r\n  \r\n  async updatePassword(id: string, hashedPassword: string): Promise<User> {\r\n    return this.prisma.user.update({\r\n      where: { id },\r\n      data: {\r\n        password: hashedPassword,\r\n      },\r\n    });\r\n  }\r\n\r\n  async countUsers(): Promise<number> {\r\n    return this.prisma.user.count();\r\n  }\r\n\r\n  async countActiveUsers(): Promise<number> {\r\n    // Como n\xE3o temos campo isActive, retornamos contagem total de usu\xE1rios\r\n    return this.prisma.user.count();\r\n  }\r\n\r\n  async countUsersByRole(): Promise<Record<string, number>> {\r\n    const users = await this.prisma.user.groupBy({\r\n      by: ['role'],\r\n      _count: {\r\n        role: true,\r\n      },\r\n    });\r\n\r\n    return users.reduce((acc, user) => {\r\n      acc[user.role] = user._count.role;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "74fcc88aa7eb988a4001476382587c24c056603e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bkbpoafh1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bkbpoafh1();
cov_1bkbpoafh1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1bkbpoafh1().s[1]++;
exports.UserRepository = void 0;
class UserRepository {
  prisma;
  constructor(prisma) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[0]++;
    cov_1bkbpoafh1().s[2]++;
    this.prisma = prisma;
  }
  async create(data) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[1]++;
    cov_1bkbpoafh1().s[3]++;
    return this.prisma.user.create({
      data
    });
  }
  async findAll() {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[2]++;
    cov_1bkbpoafh1().s[4]++;
    return this.prisma.user.findMany({
      select: {
        id: true,
        name: true,
        email: true,
        role: true,
        avatar: true,
        createdAt: true,
        updatedAt: true,
        isActive: true,
        // Excluir senha da consulta
        password: false
      }
    });
  }
  async findById(id) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[3]++;
    cov_1bkbpoafh1().s[5]++;
    return this.prisma.user.findUnique({
      where: {
        id
      }
    });
  }
  async findByEmail(email) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[4]++;
    cov_1bkbpoafh1().s[6]++;
    return this.prisma.user.findUnique({
      where: {
        email
      }
    });
  }
  async update(id, data) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[5]++;
    cov_1bkbpoafh1().s[7]++;
    return this.prisma.user.update({
      where: {
        id
      },
      data
    });
  }
  async delete(id) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[6]++;
    cov_1bkbpoafh1().s[8]++;
    return this.prisma.user.delete({
      where: {
        id
      }
    });
  }
  // Métodos de profile removidos - modelo Profile não existe no schema atual
  // Métodos de reset token removidos - campos resetToken e resetTokenExpiry não existem no schema atual
  async updatePassword(id, hashedPassword) {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[7]++;
    cov_1bkbpoafh1().s[9]++;
    return this.prisma.user.update({
      where: {
        id
      },
      data: {
        password: hashedPassword
      }
    });
  }
  async countUsers() {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[8]++;
    cov_1bkbpoafh1().s[10]++;
    return this.prisma.user.count();
  }
  async countActiveUsers() {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[9]++;
    cov_1bkbpoafh1().s[11]++;
    // Como não temos campo isActive, retornamos contagem total de usuários
    return this.prisma.user.count();
  }
  async countUsersByRole() {
    /* istanbul ignore next */
    cov_1bkbpoafh1().f[10]++;
    const users =
    /* istanbul ignore next */
    (cov_1bkbpoafh1().s[12]++, await this.prisma.user.groupBy({
      by: ['role'],
      _count: {
        role: true
      }
    }));
    /* istanbul ignore next */
    cov_1bkbpoafh1().s[13]++;
    return users.reduce((acc, user) => {
      /* istanbul ignore next */
      cov_1bkbpoafh1().f[11]++;
      cov_1bkbpoafh1().s[14]++;
      acc[user.role] = user._count.role;
      /* istanbul ignore next */
      cov_1bkbpoafh1().s[15]++;
      return acc;
    }, {});
  }
}
/* istanbul ignore next */
cov_1bkbpoafh1().s[16]++;
exports.UserRepository = UserRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,