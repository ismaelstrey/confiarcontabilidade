d6034bac1bc038ba8795015c7c685ae5
"use strict";

/**
 * @swagger
 * components:
 *   schemas:
 *     RegisterRequest:
 *       type: object
 *       required:
 *         - name
 *         - email
 *         - password
 *         - confirmPassword
 *       properties:
 *         name:
 *           type: string
 *           minLength: 2
 *           maxLength: 100
 *           example: João Silva
 *           description: Nome completo do usuário
 *         email:
 *           type: string
 *           format: email
 *           example: joao@example.com
 *           description: Email válido para login
 *         password:
 *           type: string
 *           format: password
 *           minLength: 8
 *           example: Senha123!
 *           description: Senha com pelo menos 8 caracteres
 *         confirmPassword:
 *           type: string
 *           format: password
 *           example: Senha123!
 *           description: Confirmação da senha (deve ser igual à senha)
 *
 *     LoginRequest:
 *       type: object
 *       required:
 *         - email
 *         - password
 *       properties:
 *         email:
 *           type: string
 *           format: email
 *           example: joao@example.com
 *           description: Email cadastrado
 *         password:
 *           type: string
 *           format: password
 *           example: Senha123!
 *           description: Senha do usuário
 *
 *     RefreshTokenRequest:
 *       type: object
 *       required:
 *         - refreshToken
 *       properties:
 *         refreshToken:
 *           type: string
 *           example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
 *           description: Token de renovação válido
 *
 *     ChangePasswordRequest:
 *       type: object
 *       required:
 *         - currentPassword
 *         - newPassword
 *         - confirmPassword
 *       properties:
 *         currentPassword:
 *           type: string
 *           format: password
 *           example: SenhaAtual123!
 *           description: Senha atual do usuário
 *         newPassword:
 *           type: string
 *           format: password
 *           minLength: 8
 *           example: NovaSenha123!
 *           description: Nova senha com pelo menos 8 caracteres
 *         confirmPassword:
 *           type: string
 *           format: password
 *           example: NovaSenha123!
 *           description: Confirmação da nova senha
 *
 *     ForgotPasswordRequest:
 *       type: object
 *       required:
 *         - email
 *       properties:
 *         email:
 *           type: string
 *           format: email
 *           example: joao@example.com
 *           description: Email cadastrado para recuperação
 *
 *     ResetPasswordRequest:
 *       type: object
 *       required:
 *         - token
 *         - newPassword
 *         - confirmPassword
 *       properties:
 *         token:
 *           type: string
 *           example: abc123def456
 *           description: Token de recuperação recebido por email
 *         newPassword:
 *           type: string
 *           format: password
 *           minLength: 8
 *           example: NovaSenha123!
 *           description: Nova senha
 *         confirmPassword:
 *           type: string
 *           format: password
 *           example: NovaSenha123!
 *           description: Confirmação da nova senha
 *
 *     AuthResponse:
 *       type: object
 *       properties:
 *         status:
 *           type: string
 *           example: success
 *         message:
 *           type: string
 *           example: Login realizado com sucesso
 *         data:
 *           type: object
 *           properties:
 *             user:
 *               $ref: '#/components/schemas/User'
 *             tokens:
 *               type: object
 *               properties:
 *                 accessToken:
 *                   type: string
 *                   example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
 *                   description: Token de acesso JWT
 *                 refreshToken:
 *                   type: string
 *                   example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
 *                   description: Token de renovação
 *                 expiresIn:
 *                   type: number
 *                   example: 3600
 *                   description: Tempo de expiração em segundos
 *
 *     User:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           example: clm123abc456
 *           description: ID único do usuário
 *         name:
 *           type: string
 *           example: João Silva
 *           description: Nome completo
 *         email:
 *           type: string
 *           format: email
 *           example: joao@example.com
 *           description: Email do usuário
 *         role:
 *           type: string
 *           enum: [USER, ADMIN]
 *           example: USER
 *           description: Papel do usuário no sistema
 *         isActive:
 *           type: boolean
 *           example: true
 *           description: Status ativo do usuário
 *         createdAt:
 *           type: string
 *           format: date-time
 *           example: 2024-01-15T10:30:00Z
 *           description: Data de criação
 *         updatedAt:
 *           type: string
 *           format: date-time
 *           example: 2024-01-15T10:30:00Z
 *           description: Data da última atualização
 */
/* istanbul ignore next */
function cov_1baiyf18rf() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\docs\\schemas\\auth.ts";
  var hash = "0d7a6841fe3025c14749fec807d72b8f777f3f96";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\docs\\schemas\\auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 188,
          column: 0
        },
        end: {
          line: 188,
          column: 62
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\docs\\schemas\\auth.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyLG",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\docs\\schemas\\auth.ts"],
      sourcesContent: ["/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     RegisterRequest:\r\n *       type: object\r\n *       required:\r\n *         - name\r\n *         - email\r\n *         - password\r\n *         - confirmPassword\r\n *       properties:\r\n *         name:\r\n *           type: string\r\n *           minLength: 2\r\n *           maxLength: 100\r\n *           example: Jo\xE3o Silva\r\n *           description: Nome completo do usu\xE1rio\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           example: joao@example.com\r\n *           description: Email v\xE1lido para login\r\n *         password:\r\n *           type: string\r\n *           format: password\r\n *           minLength: 8\r\n *           example: Senha123!\r\n *           description: Senha com pelo menos 8 caracteres\r\n *         confirmPassword:\r\n *           type: string\r\n *           format: password\r\n *           example: Senha123!\r\n *           description: Confirma\xE7\xE3o da senha (deve ser igual \xE0 senha)\r\n *     \r\n *     LoginRequest:\r\n *       type: object\r\n *       required:\r\n *         - email\r\n *         - password\r\n *       properties:\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           example: joao@example.com\r\n *           description: Email cadastrado\r\n *         password:\r\n *           type: string\r\n *           format: password\r\n *           example: Senha123!\r\n *           description: Senha do usu\xE1rio\r\n *     \r\n *     RefreshTokenRequest:\r\n *       type: object\r\n *       required:\r\n *         - refreshToken\r\n *       properties:\r\n *         refreshToken:\r\n *           type: string\r\n *           example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\r\n *           description: Token de renova\xE7\xE3o v\xE1lido\r\n *     \r\n *     ChangePasswordRequest:\r\n *       type: object\r\n *       required:\r\n *         - currentPassword\r\n *         - newPassword\r\n *         - confirmPassword\r\n *       properties:\r\n *         currentPassword:\r\n *           type: string\r\n *           format: password\r\n *           example: SenhaAtual123!\r\n *           description: Senha atual do usu\xE1rio\r\n *         newPassword:\r\n *           type: string\r\n *           format: password\r\n *           minLength: 8\r\n *           example: NovaSenha123!\r\n *           description: Nova senha com pelo menos 8 caracteres\r\n *         confirmPassword:\r\n *           type: string\r\n *           format: password\r\n *           example: NovaSenha123!\r\n *           description: Confirma\xE7\xE3o da nova senha\r\n *     \r\n *     ForgotPasswordRequest:\r\n *       type: object\r\n *       required:\r\n *         - email\r\n *       properties:\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           example: joao@example.com\r\n *           description: Email cadastrado para recupera\xE7\xE3o\r\n *     \r\n *     ResetPasswordRequest:\r\n *       type: object\r\n *       required:\r\n *         - token\r\n *         - newPassword\r\n *         - confirmPassword\r\n *       properties:\r\n *         token:\r\n *           type: string\r\n *           example: abc123def456\r\n *           description: Token de recupera\xE7\xE3o recebido por email\r\n *         newPassword:\r\n *           type: string\r\n *           format: password\r\n *           minLength: 8\r\n *           example: NovaSenha123!\r\n *           description: Nova senha\r\n *         confirmPassword:\r\n *           type: string\r\n *           format: password\r\n *           example: NovaSenha123!\r\n *           description: Confirma\xE7\xE3o da nova senha\r\n *     \r\n *     AuthResponse:\r\n *       type: object\r\n *       properties:\r\n *         status:\r\n *           type: string\r\n *           example: success\r\n *         message:\r\n *           type: string\r\n *           example: Login realizado com sucesso\r\n *         data:\r\n *           type: object\r\n *           properties:\r\n *             user:\r\n *               $ref: '#/components/schemas/User'\r\n *             tokens:\r\n *               type: object\r\n *               properties:\r\n *                 accessToken:\r\n *                   type: string\r\n *                   example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\r\n *                   description: Token de acesso JWT\r\n *                 refreshToken:\r\n *                   type: string\r\n *                   example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\r\n *                   description: Token de renova\xE7\xE3o\r\n *                 expiresIn:\r\n *                   type: number\r\n *                   example: 3600\r\n *                   description: Tempo de expira\xE7\xE3o em segundos\r\n *     \r\n *     User:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           example: clm123abc456\r\n *           description: ID \xFAnico do usu\xE1rio\r\n *         name:\r\n *           type: string\r\n *           example: Jo\xE3o Silva\r\n *           description: Nome completo\r\n *         email:\r\n *           type: string\r\n *           format: email\r\n *           example: joao@example.com\r\n *           description: Email do usu\xE1rio\r\n *         role:\r\n *           type: string\r\n *           enum: [USER, ADMIN]\r\n *           example: USER\r\n *           description: Papel do usu\xE1rio no sistema\r\n *         isActive:\r\n *           type: boolean\r\n *           example: true\r\n *           description: Status ativo do usu\xE1rio\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *           example: 2024-01-15T10:30:00Z\r\n *           description: Data de cria\xE7\xE3o\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *           example: 2024-01-15T10:30:00Z\r\n *           description: Data da \xFAltima atualiza\xE7\xE3o\r\n */\r\n\r\n// Este arquivo cont\xE9m apenas defini\xE7\xF5es de esquemas Swagger\r\n// N\xE3o h\xE1 c\xF3digo TypeScript execut\xE1vel aqui\r\nexport {};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0d7a6841fe3025c14749fec807d72b8f777f3f96"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1baiyf18rf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1baiyf18rf();
cov_1baiyf18rf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,