{"file":"D:\\dev\\contabil\\contabil-site\\backend\\src\\tests\\helpers\\testServer.ts","mappings":"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","names":[],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\tests\\helpers\\testServer.ts"],"sourcesContent":["import express from 'express';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport compression from 'compression';\r\nimport rateLimit from 'express-rate-limit';\r\nimport { setupSwagger } from '../../docs/swagger';\r\nimport routes from '../../routes';\r\nimport { requestLogger } from '../../middlewares/requestLogger';\r\nimport { errorHandler } from '../../middlewares/errorHandler';\r\n\r\n/**\r\n * Cria uma instância do aplicativo Express para testes\r\n * @returns Aplicativo Express configurado\r\n */\r\nexport const createTestServer = () => {\r\n  const app = express();\r\n\r\n  // Middlewares básicos\r\n  app.use(helmet());\r\n  app.use(compression());\r\n  app.use(cors({\r\n    origin: process.env.CORS_ORIGIN || 'http://localhost:5173',\r\n    credentials: true,\r\n  }));\r\n\r\n  // Rate limiting mais permissivo para testes\r\n  const limiter = rateLimit({\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    max: 1000, // Limite alto para testes\r\n    message: 'Muitas requisições deste IP, tente novamente em alguns minutos.',\r\n  });\r\n  app.use(limiter);\r\n\r\n  // Parsing de JSON e URL encoded\r\n  app.use(express.json({ limit: '10mb' }));\r\n  app.use(express.urlencoded({ extended: true, limit: '10mb' }));\r\n\r\n  // Middleware de logging (apenas para testes de integração)\r\n  if (process.env.TEST_LOGGING === 'true') {\r\n    app.use(requestLogger);\r\n  }\r\n\r\n  // Health check\r\n  app.get('/health', (req, res) => {\r\n    res.status(200).json({\r\n      status: 'OK',\r\n      timestamp: new Date().toISOString(),\r\n      environment: process.env.NODE_ENV || 'development',\r\n    });\r\n  });\r\n\r\n  // Documentação Swagger (apenas se não for teste unitário)\r\n  if (process.env.JEST_WORKER_ID === undefined || process.env.TEST_SWAGGER === 'true') {\r\n    setupSwagger(app);\r\n  }\r\n\r\n  // Rotas da API\r\n  app.use('/api', routes);\r\n\r\n  // Middleware de tratamento de erros\r\n  app.use(errorHandler);\r\n\r\n  // Rota 404\r\n  app.use('*', (req, res) => {\r\n    res.status(404).json({\r\n      success: false,\r\n      message: 'Rota não encontrada',\r\n      path: req.originalUrl,\r\n    });\r\n  });\r\n\r\n  return app;\r\n};\r\n\r\n/**\r\n * Cria um servidor de teste simplificado para testes unitários\r\n * @returns Aplicativo Express mínimo\r\n */\r\nexport const createMinimalTestServer = () => {\r\n  const app = express();\r\n  \r\n  app.use(express.json());\r\n  app.use(express.urlencoded({ extended: true }));\r\n  \r\n  return app;\r\n};"],"version":3}