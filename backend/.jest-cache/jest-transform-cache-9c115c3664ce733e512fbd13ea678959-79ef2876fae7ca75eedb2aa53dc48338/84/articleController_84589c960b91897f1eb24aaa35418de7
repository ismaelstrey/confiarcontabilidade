8e3627f95239589c25baf524fea487f2
"use strict";

/* istanbul ignore next */
function cov_1xyvz3ailp() {
  var path = "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\articleController.ts";
  var hash = "5afb21fa38b7ffd4769462047e5950563f9db641";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\articleController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 35
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "8": {
        start: {
          line: 19,
          column: 133
        },
        end: {
          line: 19,
          column: 142
        }
      },
      "9": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "10": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "11": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "12": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 30,
          column: 13
        }
      },
      "13": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 29,
          column: 18
        }
      },
      "14": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "15": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 34,
          column: 18
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "17": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 39,
          column: 18
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "19": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "21": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 42
        }
      },
      "22": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "23": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 40
        }
      },
      "24": {
        start: {
          line: 51,
          column: 38
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "25": {
        start: {
          line: 85,
          column: 31
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "26": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "27": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 72
        }
      },
      "28": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 107,
          column: 15
        }
      },
      "29": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "30": {
        start: {
          line: 115,
          column: 35
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "31": {
        start: {
          line: 116,
          column: 49
        },
        end: {
          line: 116,
          column: 58
        }
      },
      "32": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "33": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 121,
          column: 19
        }
      },
      "34": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 23
        }
      },
      "35": {
        start: {
          line: 125,
          column: 26
        },
        end: {
          line: 156,
          column: 14
        }
      },
      "36": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "37": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "38": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "39": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 196,
          column: 19
        }
      },
      "40": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 23
        }
      },
      "41": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "42": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "43": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 35
        }
      },
      "44": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "45": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 106
        }
      },
      "46": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 218,
          column: 15
        }
      },
      "47": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "48": {
        start: {
          line: 226,
          column: 113
        },
        end: {
          line: 226,
          column: 121
        }
      },
      "49": {
        start: {
          line: 227,
          column: 32
        },
        end: {
          line: 227,
          column: 40
        }
      },
      "50": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "51": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 233,
          column: 19
        }
      },
      "52": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 23
        }
      },
      "53": {
        start: {
          line: 237,
          column: 30
        },
        end: {
          line: 237,
          column: 34
        }
      },
      "54": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "55": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 246,
          column: 28
        }
      },
      "56": {
        start: {
          line: 249,
          column: 36
        },
        end: {
          line: 251,
          column: 14
        }
      },
      "57": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "58": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 61
        }
      },
      "59": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 268,
          column: 13
        }
      },
      "60": {
        start: {
          line: 258,
          column: 33
        },
        end: {
          line: 260,
          column: 18
        }
      },
      "61": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 267,
          column: 17
        }
      },
      "62": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 265,
          column: 23
        }
      },
      "63": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 27
        }
      },
      "64": {
        start: {
          line: 270,
          column: 33
        },
        end: {
          line: 270,
          column: 40
        }
      },
      "65": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "66": {
        start: {
          line: 273,
          column: 34
        },
        end: {
          line: 273,
          column: 65
        }
      },
      "67": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 276,
          column: 32
        }
      },
      "68": {
        start: {
          line: 279,
          column: 32
        },
        end: {
          line: 291,
          column: 13
        }
      },
      "69": {
        start: {
          line: 289,
          column: 50
        },
        end: {
          line: 289,
          column: 59
        }
      },
      "70": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "71": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 296,
          column: 18
        }
      },
      "72": {
        start: {
          line: 298,
          column: 28
        },
        end: {
          line: 320,
          column: 14
        }
      },
      "73": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 327,
          column: 15
        }
      },
      "74": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 332,
          column: 15
        }
      },
      "75": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 70
        }
      },
      "76": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 339,
          column: 15
        }
      },
      "77": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "78": {
        start: {
          line: 347,
          column: 27
        },
        end: {
          line: 347,
          column: 37
        }
      },
      "79": {
        start: {
          line: 348,
          column: 100
        },
        end: {
          line: 348,
          column: 108
        }
      },
      "80": {
        start: {
          line: 349,
          column: 32
        },
        end: {
          line: 349,
          column: 40
        }
      },
      "81": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "82": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 354,
          column: 19
        }
      },
      "83": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 23
        }
      },
      "84": {
        start: {
          line: 358,
          column: 36
        },
        end: {
          line: 360,
          column: 14
        }
      },
      "85": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 367,
          column: 13
        }
      },
      "86": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 365,
          column: 19
        }
      },
      "87": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 23
        }
      },
      "88": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 375,
          column: 13
        }
      },
      "89": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 373,
          column: 19
        }
      },
      "90": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 374,
          column: 23
        }
      },
      "91": {
        start: {
          line: 377,
          column: 31
        },
        end: {
          line: 377,
          column: 33
        }
      },
      "92": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 379,
          column: 41
        }
      },
      "93": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 41
        }
      },
      "94": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 381,
          column: 45
        }
      },
      "95": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 45
        }
      },
      "96": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 383,
          column: 45
        }
      },
      "97": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 45
        }
      },
      "98": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 385,
          column: 57
        }
      },
      "99": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 57
        }
      },
      "100": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "101": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 409,
          column: 17
        }
      },
      "102": {
        start: {
          line: 390,
          column: 37
        },
        end: {
          line: 392,
          column: 22
        }
      },
      "103": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 399,
          column: 21
        }
      },
      "104": {
        start: {
          line: 394,
          column: 24
        },
        end: {
          line: 397,
          column: 27
        }
      },
      "105": {
        start: {
          line: 398,
          column: 24
        },
        end: {
          line: 398,
          column: 31
        }
      },
      "106": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 403,
          column: 22
        }
      },
      "107": {
        start: {
          line: 406,
          column: 20
        },
        end: {
          line: 408,
          column: 22
        }
      },
      "108": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 417,
          column: 13
        }
      },
      "109": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 416,
          column: 18
        }
      },
      "110": {
        start: {
          line: 415,
          column: 49
        },
        end: {
          line: 415,
          column: 58
        }
      },
      "111": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 434,
          column: 13
        }
      },
      "112": {
        start: {
          line: 420,
          column: 34
        },
        end: {
          line: 425,
          column: 18
        }
      },
      "113": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "114": {
        start: {
          line: 427,
          column: 20
        },
        end: {
          line: 430,
          column: 23
        }
      },
      "115": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 27
        }
      },
      "116": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 39
        }
      },
      "117": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 446,
          column: 13
        }
      },
      "118": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 72
        }
      },
      "119": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 441,
          column: 17
        }
      },
      "120": {
        start: {
          line: 440,
          column: 20
        },
        end: {
          line: 440,
          column: 56
        }
      },
      "121": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 445,
          column: 17
        }
      },
      "122": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 50
        }
      },
      "123": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 46
        }
      },
      "124": {
        start: {
          line: 449,
          column: 35
        },
        end: {
          line: 472,
          column: 14
        }
      },
      "125": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 478,
          column: 15
        }
      },
      "126": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 483,
          column: 15
        }
      },
      "127": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 100
        }
      },
      "128": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 490,
          column: 15
        }
      },
      "129": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 663,
          column: 9
        }
      },
      "130": {
        start: {
          line: 558,
          column: 27
        },
        end: {
          line: 558,
          column: 37
        }
      },
      "131": {
        start: {
          line: 559,
          column: 34
        },
        end: {
          line: 559,
          column: 43
        }
      },
      "132": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 566,
          column: 13
        }
      },
      "133": {
        start: {
          line: 561,
          column: 16
        },
        end: {
          line: 564,
          column: 19
        }
      },
      "134": {
        start: {
          line: 565,
          column: 16
        },
        end: {
          line: 565,
          column: 23
        }
      },
      "135": {
        start: {
          line: 568,
          column: 35
        },
        end: {
          line: 582,
          column: 14
        }
      },
      "136": {
        start: {
          line: 583,
          column: 12
        },
        end: {
          line: 589,
          column: 13
        }
      },
      "137": {
        start: {
          line: 584,
          column: 16
        },
        end: {
          line: 587,
          column: 19
        }
      },
      "138": {
        start: {
          line: 588,
          column: 16
        },
        end: {
          line: 588,
          column: 23
        }
      },
      "139": {
        start: {
          line: 591,
          column: 36
        },
        end: {
          line: 650,
          column: 14
        }
      },
      "140": {
        start: {
          line: 603,
          column: 89
        },
        end: {
          line: 603,
          column: 103
        }
      },
      "141": {
        start: {
          line: 613,
          column: 83
        },
        end: {
          line: 613,
          column: 92
        }
      },
      "142": {
        start: {
          line: 651,
          column: 12
        },
        end: {
          line: 655,
          column: 15
        }
      },
      "143": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 658,
          column: 111
        }
      },
      "144": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 662,
          column: 15
        }
      },
      "145": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 731,
          column: 9
        }
      },
      "146": {
        start: {
          line: 670,
          column: 50
        },
        end: {
          line: 670,
          column: 59
        }
      },
      "147": {
        start: {
          line: 672,
          column: 31
        },
        end: {
          line: 672,
          column: 45
        }
      },
      "148": {
        start: {
          line: 673,
          column: 30
        },
        end: {
          line: 673,
          column: 40
        }
      },
      "149": {
        start: {
          line: 674,
          column: 12
        },
        end: {
          line: 674,
          column: 64
        }
      },
      "150": {
        start: {
          line: 675,
          column: 36
        },
        end: {
          line: 718,
          column: 14
        }
      },
      "151": {
        start: {
          line: 719,
          column: 12
        },
        end: {
          line: 723,
          column: 15
        }
      },
      "152": {
        start: {
          line: 726,
          column: 12
        },
        end: {
          line: 726,
          column: 82
        }
      },
      "153": {
        start: {
          line: 727,
          column: 12
        },
        end: {
          line: 730,
          column: 15
        }
      },
      "154": {
        start: {
          line: 737,
          column: 8
        },
        end: {
          line: 787,
          column: 9
        }
      },
      "155": {
        start: {
          line: 738,
          column: 27
        },
        end: {
          line: 738,
          column: 37
        }
      },
      "156": {
        start: {
          line: 739,
          column: 32
        },
        end: {
          line: 739,
          column: 40
        }
      },
      "157": {
        start: {
          line: 740,
          column: 12
        },
        end: {
          line: 746,
          column: 13
        }
      },
      "158": {
        start: {
          line: 741,
          column: 16
        },
        end: {
          line: 744,
          column: 19
        }
      },
      "159": {
        start: {
          line: 745,
          column: 16
        },
        end: {
          line: 745,
          column: 23
        }
      },
      "160": {
        start: {
          line: 748,
          column: 36
        },
        end: {
          line: 750,
          column: 14
        }
      },
      "161": {
        start: {
          line: 751,
          column: 12
        },
        end: {
          line: 757,
          column: 13
        }
      },
      "162": {
        start: {
          line: 752,
          column: 16
        },
        end: {
          line: 755,
          column: 19
        }
      },
      "163": {
        start: {
          line: 756,
          column: 16
        },
        end: {
          line: 756,
          column: 23
        }
      },
      "164": {
        start: {
          line: 759,
          column: 12
        },
        end: {
          line: 765,
          column: 13
        }
      },
      "165": {
        start: {
          line: 760,
          column: 16
        },
        end: {
          line: 763,
          column: 19
        }
      },
      "166": {
        start: {
          line: 764,
          column: 16
        },
        end: {
          line: 764,
          column: 23
        }
      },
      "167": {
        start: {
          line: 767,
          column: 12
        },
        end: {
          line: 769,
          column: 15
        }
      },
      "168": {
        start: {
          line: 771,
          column: 12
        },
        end: {
          line: 775,
          column: 15
        }
      },
      "169": {
        start: {
          line: 776,
          column: 12
        },
        end: {
          line: 779,
          column: 15
        }
      },
      "170": {
        start: {
          line: 782,
          column: 12
        },
        end: {
          line: 782,
          column: 98
        }
      },
      "171": {
        start: {
          line: 783,
          column: 12
        },
        end: {
          line: 786,
          column: 15
        }
      },
      "172": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 865,
          column: 9
        }
      },
      "173": {
        start: {
          line: 794,
          column: 27
        },
        end: {
          line: 794,
          column: 37
        }
      },
      "174": {
        start: {
          line: 795,
          column: 32
        },
        end: {
          line: 795,
          column: 40
        }
      },
      "175": {
        start: {
          line: 796,
          column: 12
        },
        end: {
          line: 802,
          column: 13
        }
      },
      "176": {
        start: {
          line: 797,
          column: 16
        },
        end: {
          line: 800,
          column: 19
        }
      },
      "177": {
        start: {
          line: 801,
          column: 16
        },
        end: {
          line: 801,
          column: 23
        }
      },
      "178": {
        start: {
          line: 804,
          column: 28
        },
        end: {
          line: 806,
          column: 14
        }
      },
      "179": {
        start: {
          line: 807,
          column: 12
        },
        end: {
          line: 813,
          column: 13
        }
      },
      "180": {
        start: {
          line: 808,
          column: 16
        },
        end: {
          line: 811,
          column: 19
        }
      },
      "181": {
        start: {
          line: 812,
          column: 16
        },
        end: {
          line: 812,
          column: 23
        }
      },
      "182": {
        start: {
          line: 815,
          column: 33
        },
        end: {
          line: 822,
          column: 14
        }
      },
      "183": {
        start: {
          line: 823,
          column: 24
        },
        end: {
          line: 823,
          column: 29
        }
      },
      "184": {
        start: {
          line: 824,
          column: 12
        },
        end: {
          line: 845,
          column: 13
        }
      },
      "185": {
        start: {
          line: 826,
          column: 16
        },
        end: {
          line: 833,
          column: 19
        }
      },
      "186": {
        start: {
          line: 834,
          column: 16
        },
        end: {
          line: 834,
          column: 30
        }
      },
      "187": {
        start: {
          line: 838,
          column: 16
        },
        end: {
          line: 843,
          column: 19
        }
      },
      "188": {
        start: {
          line: 844,
          column: 16
        },
        end: {
          line: 844,
          column: 29
        }
      },
      "189": {
        start: {
          line: 847,
          column: 31
        },
        end: {
          line: 849,
          column: 14
        }
      },
      "190": {
        start: {
          line: 850,
          column: 12
        },
        end: {
          line: 857,
          column: 15
        }
      },
      "191": {
        start: {
          line: 860,
          column: 12
        },
        end: {
          line: 860,
          column: 97
        }
      },
      "192": {
        start: {
          line: 861,
          column: 12
        },
        end: {
          line: 864,
          column: 15
        }
      },
      "193": {
        start: {
          line: 871,
          column: 8
        },
        end: {
          line: 943,
          column: 9
        }
      },
      "194": {
        start: {
          line: 872,
          column: 27
        },
        end: {
          line: 872,
          column: 37
        }
      },
      "195": {
        start: {
          line: 873,
          column: 65
        },
        end: {
          line: 873,
          column: 74
        }
      },
      "196": {
        start: {
          line: 874,
          column: 12
        },
        end: {
          line: 880,
          column: 13
        }
      },
      "197": {
        start: {
          line: 875,
          column: 16
        },
        end: {
          line: 878,
          column: 19
        }
      },
      "198": {
        start: {
          line: 879,
          column: 16
        },
        end: {
          line: 879,
          column: 23
        }
      },
      "199": {
        start: {
          line: 882,
          column: 28
        },
        end: {
          line: 884,
          column: 14
        }
      },
      "200": {
        start: {
          line: 885,
          column: 12
        },
        end: {
          line: 891,
          column: 13
        }
      },
      "201": {
        start: {
          line: 886,
          column: 16
        },
        end: {
          line: 889,
          column: 19
        }
      },
      "202": {
        start: {
          line: 890,
          column: 16
        },
        end: {
          line: 890,
          column: 23
        }
      },
      "203": {
        start: {
          line: 892,
          column: 25
        },
        end: {
          line: 892,
          column: 59
        }
      },
      "204": {
        start: {
          line: 893,
          column: 25
        },
        end: {
          line: 893,
          column: 38
        }
      },
      "205": {
        start: {
          line: 895,
          column: 38
        },
        end: {
          line: 919,
          column: 14
        }
      },
      "206": {
        start: {
          line: 920,
          column: 31
        },
        end: {
          line: 920,
          column: 54
        }
      },
      "207": {
        start: {
          line: 921,
          column: 12
        },
        end: {
          line: 935,
          column: 15
        }
      },
      "208": {
        start: {
          line: 938,
          column: 12
        },
        end: {
          line: 938,
          column: 102
        }
      },
      "209": {
        start: {
          line: 939,
          column: 12
        },
        end: {
          line: 942,
          column: 15
        }
      },
      "210": {
        start: {
          line: 949,
          column: 8
        },
        end: {
          line: 1013,
          column: 9
        }
      },
      "211": {
        start: {
          line: 950,
          column: 27
        },
        end: {
          line: 950,
          column: 37
        }
      },
      "212": {
        start: {
          line: 951,
          column: 32
        },
        end: {
          line: 951,
          column: 40
        }
      },
      "213": {
        start: {
          line: 952,
          column: 32
        },
        end: {
          line: 952,
          column: 40
        }
      },
      "214": {
        start: {
          line: 953,
          column: 12
        },
        end: {
          line: 959,
          column: 13
        }
      },
      "215": {
        start: {
          line: 954,
          column: 16
        },
        end: {
          line: 957,
          column: 19
        }
      },
      "216": {
        start: {
          line: 958,
          column: 16
        },
        end: {
          line: 958,
          column: 23
        }
      },
      "217": {
        start: {
          line: 960,
          column: 12
        },
        end: {
          line: 966,
          column: 13
        }
      },
      "218": {
        start: {
          line: 961,
          column: 16
        },
        end: {
          line: 964,
          column: 19
        }
      },
      "219": {
        start: {
          line: 965,
          column: 16
        },
        end: {
          line: 965,
          column: 23
        }
      },
      "220": {
        start: {
          line: 968,
          column: 28
        },
        end: {
          line: 970,
          column: 14
        }
      },
      "221": {
        start: {
          line: 971,
          column: 12
        },
        end: {
          line: 977,
          column: 13
        }
      },
      "222": {
        start: {
          line: 972,
          column: 16
        },
        end: {
          line: 975,
          column: 19
        }
      },
      "223": {
        start: {
          line: 976,
          column: 16
        },
        end: {
          line: 976,
          column: 23
        }
      },
      "224": {
        start: {
          line: 979,
          column: 28
        },
        end: {
          line: 994,
          column: 14
        }
      },
      "225": {
        start: {
          line: 996,
          column: 12
        },
        end: {
          line: 1000,
          column: 15
        }
      },
      "226": {
        start: {
          line: 1001,
          column: 12
        },
        end: {
          line: 1005,
          column: 15
        }
      },
      "227": {
        start: {
          line: 1008,
          column: 12
        },
        end: {
          line: 1008,
          column: 100
        }
      },
      "228": {
        start: {
          line: 1009,
          column: 12
        },
        end: {
          line: 1012,
          column: 15
        }
      },
      "229": {
        start: {
          line: 1016,
          column: 0
        },
        end: {
          line: 1016,
          column: 46
        }
      },
      "230": {
        start: {
          line: 1017,
          column: 0
        },
        end: {
          line: 1017,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 113
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 41
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 224
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 289,
            column: 38
          },
          end: {
            line: 289,
            column: 39
          }
        },
        loc: {
          start: {
            line: 289,
            column: 50
          },
          end: {
            line: 289,
            column: 59
          }
        },
        line: 289
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 41
          },
          end: {
            line: 492,
            column: 5
          }
        },
        line: 345
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 415,
            column: 37
          },
          end: {
            line: 415,
            column: 38
          }
        },
        loc: {
          start: {
            line: 415,
            column: 49
          },
          end: {
            line: 415,
            column: 58
          }
        },
        line: 415
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 556,
            column: 4
          },
          end: {
            line: 556,
            column: 5
          }
        },
        loc: {
          start: {
            line: 556,
            column: 46
          },
          end: {
            line: 664,
            column: 5
          }
        },
        line: 556
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 603,
            column: 82
          },
          end: {
            line: 603,
            column: 83
          }
        },
        loc: {
          start: {
            line: 603,
            column: 89
          },
          end: {
            line: 603,
            column: 103
          }
        },
        line: 603
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 613,
            column: 76
          },
          end: {
            line: 613,
            column: 77
          }
        },
        loc: {
          start: {
            line: 613,
            column: 83
          },
          end: {
            line: 613,
            column: 92
          }
        },
        line: 613
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 668,
            column: 4
          },
          end: {
            line: 668,
            column: 5
          }
        },
        loc: {
          start: {
            line: 668,
            column: 46
          },
          end: {
            line: 732,
            column: 5
          }
        },
        line: 668
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 736,
            column: 4
          },
          end: {
            line: 736,
            column: 5
          }
        },
        loc: {
          start: {
            line: 736,
            column: 41
          },
          end: {
            line: 788,
            column: 5
          }
        },
        line: 736
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 792,
            column: 4
          },
          end: {
            line: 792,
            column: 5
          }
        },
        loc: {
          start: {
            line: 792,
            column: 39
          },
          end: {
            line: 866,
            column: 5
          }
        },
        line: 792
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 870,
            column: 4
          },
          end: {
            line: 870,
            column: 5
          }
        },
        loc: {
          start: {
            line: 870,
            column: 46
          },
          end: {
            line: 944,
            column: 5
          }
        },
        line: 870
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 948,
            column: 4
          },
          end: {
            line: 948,
            column: 5
          }
        },
        loc: {
          start: {
            line: 948,
            column: 41
          },
          end: {
            line: 1014,
            column: 5
          }
        },
        line: 948
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 66
          },
          end: {
            line: 19,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 73
          },
          end: {
            line: 19,
            column: 74
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 76
          },
          end: {
            line: 19,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 84
          },
          end: {
            line: 19,
            column: 86
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 88
          },
          end: {
            line: 19,
            column: 108
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 97
          },
          end: {
            line: 19,
            column: 108
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 110
          },
          end: {
            line: 19,
            column: 128
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 122
          },
          end: {
            line: 19,
            column: 128
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "8": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 42,
            column: 56
          }
        }, {
          start: {
            line: 42,
            column: 59
          },
          end: {
            line: 42,
            column: 66
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 37
          },
          end: {
            line: 116,
            column: 44
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "15": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "16": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "17": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "18": {
        loc: {
          start: {
            line: 226,
            column: 66
          },
          end: {
            line: 226,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 226,
            column: 80
          },
          end: {
            line: 226,
            column: 85
          }
        }],
        line: 226
      },
      "19": {
        loc: {
          start: {
            line: 226,
            column: 87
          },
          end: {
            line: 226,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 226,
            column: 94
          },
          end: {
            line: 226,
            column: 96
          }
        }],
        line: 226
      },
      "20": {
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "21": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 229,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 229,
            column: 22
          }
        }, {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 34
          }
        }],
        line: 229
      },
      "22": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "23": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "24": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "25": {
        loc: {
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 267,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 267,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "26": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "27": {
        loc: {
          start: {
            line: 274,
            column: 33
          },
          end: {
            line: 276,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 22
          },
          end: {
            line: 275,
            column: 57
          }
        }, {
          start: {
            line: 276,
            column: 22
          },
          end: {
            line: 276,
            column: 31
          }
        }],
        line: 274
      },
      "28": {
        loc: {
          start: {
            line: 280,
            column: 23
          },
          end: {
            line: 280,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 23
          },
          end: {
            line: 280,
            column: 28
          }
        }, {
          start: {
            line: 280,
            column: 32
          },
          end: {
            line: 280,
            column: 34
          }
        }],
        line: 280
      },
      "29": {
        loc: {
          start: {
            line: 281,
            column: 25
          },
          end: {
            line: 281,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 25
          },
          end: {
            line: 281,
            column: 32
          }
        }, {
          start: {
            line: 281,
            column: 36
          },
          end: {
            line: 281,
            column: 38
          }
        }],
        line: 281
      },
      "30": {
        loc: {
          start: {
            line: 284,
            column: 31
          },
          end: {
            line: 284,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 31
          },
          end: {
            line: 284,
            column: 44
          }
        }, {
          start: {
            line: 284,
            column: 48
          },
          end: {
            line: 284,
            column: 57
          }
        }],
        line: 284
      },
      "31": {
        loc: {
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 285,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 38
          },
          end: {
            line: 285,
            column: 49
          }
        }, {
          start: {
            line: 285,
            column: 52
          },
          end: {
            line: 285,
            column: 59
          }
        }],
        line: 285
      },
      "32": {
        loc: {
          start: {
            line: 286,
            column: 29
          },
          end: {
            line: 286,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 43
          },
          end: {
            line: 286,
            column: 53
          }
        }, {
          start: {
            line: 286,
            column: 56
          },
          end: {
            line: 286,
            column: 60
          }
        }],
        line: 286
      },
      "33": {
        loc: {
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 61
          }
        }, {
          start: {
            line: 289,
            column: 65
          },
          end: {
            line: 289,
            column: 67
          }
        }],
        line: 289
      },
      "34": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "35": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "36": {
        loc: {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 367,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 367,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "37": {
        loc: {
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "38": {
        loc: {
          start: {
            line: 369,
            column: 16
          },
          end: {
            line: 369,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 16
          },
          end: {
            line: 369,
            column: 44
          }
        }, {
          start: {
            line: 369,
            column: 48
          },
          end: {
            line: 369,
            column: 91
          }
        }],
        line: 369
      },
      "39": {
        loc: {
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 379,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 379,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "40": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 381,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 381,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "41": {
        loc: {
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 383,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 383,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "42": {
        loc: {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 385,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 385,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "43": {
        loc: {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "44": {
        loc: {
          start: {
            line: 388,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        }, {
          start: {
            line: 405,
            column: 21
          },
          end: {
            line: 409,
            column: 17
          }
        }],
        line: 388
      },
      "45": {
        loc: {
          start: {
            line: 393,
            column: 20
          },
          end: {
            line: 399,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 20
          },
          end: {
            line: 399,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "46": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "47": {
        loc: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 434,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 434,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "48": {
        loc: {
          start: {
            line: 419,
            column: 16
          },
          end: {
            line: 419,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 419,
            column: 16
          },
          end: {
            line: 419,
            column: 20
          }
        }, {
          start: {
            line: 419,
            column: 24
          },
          end: {
            line: 419,
            column: 53
          }
        }],
        line: 419
      },
      "49": {
        loc: {
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "50": {
        loc: {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 446,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 446,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "51": {
        loc: {
          start: {
            line: 437,
            column: 36
          },
          end: {
            line: 437,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 437,
            column: 50
          },
          end: {
            line: 437,
            column: 61
          }
        }, {
          start: {
            line: 437,
            column: 64
          },
          end: {
            line: 437,
            column: 71
          }
        }],
        line: 437
      },
      "52": {
        loc: {
          start: {
            line: 439,
            column: 16
          },
          end: {
            line: 441,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 16
          },
          end: {
            line: 441,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "53": {
        loc: {
          start: {
            line: 439,
            column: 20
          },
          end: {
            line: 439,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 20
          },
          end: {
            line: 439,
            column: 31
          }
        }, {
          start: {
            line: 439,
            column: 35
          },
          end: {
            line: 439,
            column: 73
          }
        }],
        line: 439
      },
      "54": {
        loc: {
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "55": {
        loc: {
          start: {
            line: 443,
            column: 20
          },
          end: {
            line: 443,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 20
          },
          end: {
            line: 443,
            column: 32
          }
        }, {
          start: {
            line: 443,
            column: 36
          },
          end: {
            line: 443,
            column: 74
          }
        }],
        line: 443
      },
      "56": {
        loc: {
          start: {
            line: 559,
            column: 20
          },
          end: {
            line: 559,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 559,
            column: 28
          },
          end: {
            line: 559,
            column: 29
          }
        }],
        line: 559
      },
      "57": {
        loc: {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 566,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 566,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "58": {
        loc: {
          start: {
            line: 583,
            column: 12
          },
          end: {
            line: 589,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 583,
            column: 12
          },
          end: {
            line: 589,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 583
      },
      "59": {
        loc: {
          start: {
            line: 599,
            column: 32
          },
          end: {
            line: 607,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 599,
            column: 71
          },
          end: {
            line: 607,
            column: 33
          }
        }, {
          start: {
            line: 607,
            column: 36
          },
          end: {
            line: 607,
            column: 38
          }
        }],
        line: 599
      },
      "60": {
        loc: {
          start: {
            line: 609,
            column: 32
          },
          end: {
            line: 617,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 609,
            column: 65
          },
          end: {
            line: 617,
            column: 33
          }
        }, {
          start: {
            line: 617,
            column: 36
          },
          end: {
            line: 617,
            column: 38
          }
        }],
        line: 609
      },
      "61": {
        loc: {
          start: {
            line: 670,
            column: 20
          },
          end: {
            line: 670,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 670,
            column: 28
          },
          end: {
            line: 670,
            column: 30
          }
        }],
        line: 670
      },
      "62": {
        loc: {
          start: {
            line: 670,
            column: 32
          },
          end: {
            line: 670,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 670,
            column: 41
          },
          end: {
            line: 670,
            column: 45
          }
        }],
        line: 670
      },
      "63": {
        loc: {
          start: {
            line: 740,
            column: 12
          },
          end: {
            line: 746,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 740,
            column: 12
          },
          end: {
            line: 746,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 740
      },
      "64": {
        loc: {
          start: {
            line: 751,
            column: 12
          },
          end: {
            line: 757,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 751,
            column: 12
          },
          end: {
            line: 757,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 751
      },
      "65": {
        loc: {
          start: {
            line: 759,
            column: 12
          },
          end: {
            line: 765,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 759,
            column: 12
          },
          end: {
            line: 765,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 759
      },
      "66": {
        loc: {
          start: {
            line: 759,
            column: 16
          },
          end: {
            line: 759,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 759,
            column: 16
          },
          end: {
            line: 759,
            column: 44
          }
        }, {
          start: {
            line: 759,
            column: 48
          },
          end: {
            line: 759,
            column: 91
          }
        }],
        line: 759
      },
      "67": {
        loc: {
          start: {
            line: 796,
            column: 12
          },
          end: {
            line: 802,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 796,
            column: 12
          },
          end: {
            line: 802,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 796
      },
      "68": {
        loc: {
          start: {
            line: 807,
            column: 12
          },
          end: {
            line: 813,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 807,
            column: 12
          },
          end: {
            line: 813,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 807
      },
      "69": {
        loc: {
          start: {
            line: 824,
            column: 12
          },
          end: {
            line: 845,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 824,
            column: 12
          },
          end: {
            line: 845,
            column: 13
          }
        }, {
          start: {
            line: 836,
            column: 17
          },
          end: {
            line: 845,
            column: 13
          }
        }],
        line: 824
      },
      "70": {
        loc: {
          start: {
            line: 852,
            column: 25
          },
          end: {
            line: 852,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 852,
            column: 33
          },
          end: {
            line: 852,
            column: 49
          }
        }, {
          start: {
            line: 852,
            column: 52
          },
          end: {
            line: 852,
            column: 70
          }
        }],
        line: 852
      },
      "71": {
        loc: {
          start: {
            line: 873,
            column: 20
          },
          end: {
            line: 873,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 873,
            column: 27
          },
          end: {
            line: 873,
            column: 28
          }
        }],
        line: 873
      },
      "72": {
        loc: {
          start: {
            line: 873,
            column: 30
          },
          end: {
            line: 873,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 873,
            column: 38
          },
          end: {
            line: 873,
            column: 40
          }
        }],
        line: 873
      },
      "73": {
        loc: {
          start: {
            line: 873,
            column: 42
          },
          end: {
            line: 873,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 873,
            column: 54
          },
          end: {
            line: 873,
            column: 60
          }
        }],
        line: 873
      },
      "74": {
        loc: {
          start: {
            line: 874,
            column: 12
          },
          end: {
            line: 880,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 874,
            column: 12
          },
          end: {
            line: 880,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 874
      },
      "75": {
        loc: {
          start: {
            line: 885,
            column: 12
          },
          end: {
            line: 891,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 885,
            column: 12
          },
          end: {
            line: 891,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 885
      },
      "76": {
        loc: {
          start: {
            line: 953,
            column: 12
          },
          end: {
            line: 959,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 953,
            column: 12
          },
          end: {
            line: 959,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 953
      },
      "77": {
        loc: {
          start: {
            line: 960,
            column: 12
          },
          end: {
            line: 966,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 960,
            column: 12
          },
          end: {
            line: 966,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 960
      },
      "78": {
        loc: {
          start: {
            line: 960,
            column: 16
          },
          end: {
            line: 960,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 960,
            column: 16
          },
          end: {
            line: 960,
            column: 24
          }
        }, {
          start: {
            line: 960,
            column: 28
          },
          end: {
            line: 960,
            column: 55
          }
        }],
        line: 960
      },
      "79": {
        loc: {
          start: {
            line: 971,
            column: 12
          },
          end: {
            line: 977,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 971,
            column: 12
          },
          end: {
            line: 977,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 971
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0],
      "62": [0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0],
      "72": [0],
      "73": [0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0]
    },
    inputSourceMap: {
      file: "D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\articleController.ts",
      mappings: "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",
      names: [],
      sources: ["D:\\dev\\contabil\\contabil-site\\backend\\src\\controllers\\articleController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { PrismaClient } from '@prisma/client';\r\nimport logger from '../utils/logger';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n// Interface para dados de artigo\r\ninterface ArticleData {\r\n  title?: string;\r\n  content?: string;\r\n  excerpt?: string;\r\n  slug?: string;\r\n  featuredImage?: string;\r\n  isPublished?: boolean;\r\n  publishedAt?: Date;\r\n  tags?: string[];\r\n  categoryId?: string;\r\n}\r\n\r\n// Interface para filtros de busca\r\ninterface ArticleFilters {\r\n  search?: string;\r\n  category?: string;\r\n  tag?: string;\r\n  isPublished?: boolean;\r\n  authorId?: string;\r\n  page?: number;\r\n  limit?: number;\r\n  sortBy?: 'createdAt' | 'publishedAt' | 'title' | 'views';\r\n  sortOrder?: 'asc' | 'desc';\r\n}\r\n\r\n/**\r\n * Controller respons\xE1vel pelo gerenciamento de artigos\r\n */\r\nexport class ArticleController {\r\n  /**\r\n   * Lista todos os artigos com pagina\xE7\xE3o e filtros\r\n   */\r\n  static async getArticles(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const {\r\n        search,\r\n        category,\r\n        tag,\r\n        isPublished,\r\n        authorId,\r\n        page = 1,\r\n        limit = 10,\r\n        sortBy = 'createdAt',\r\n        sortOrder = 'desc'\r\n      }: ArticleFilters = req.query;\r\n\r\n      const skip = (Number(page) - 1) * Number(limit);\r\n      const take = Number(limit);\r\n\r\n      // Construir filtros\r\n      const where: any = {};\r\n\r\n      if (search) {\r\n        where.OR = [\r\n          { title: { contains: search, mode: 'insensitive' } },\r\n          { content: { contains: search, mode: 'insensitive' } },\r\n          { excerpt: { contains: search, mode: 'insensitive' } }\r\n        ];\r\n      }\r\n\r\n      if (category) {\r\n        where.category = {\r\n          slug: category\r\n        };\r\n      }\r\n\r\n      if (tag) {\r\n        where.tags = {\r\n          has: tag\r\n        };\r\n      }\r\n\r\n      if (isPublished !== undefined) {\r\n        where.status = isPublished ? 'PUBLISHED' : 'DRAFT';\r\n      }\r\n\r\n      if (authorId) {\r\n        where.authorId = authorId;\r\n      }\r\n\r\n      // Definir ordena\xE7\xE3o\r\n      const orderBy: any = {};\r\n      orderBy[sortBy] = sortOrder;\r\n\r\n      // Buscar artigos\r\n      const [articles, total] = await Promise.all([\r\n        prisma.article.findMany({\r\n          where,\r\n          include: {\r\n            author: {\r\n              select: {\r\n                id: true,\r\n                name: true,\r\n                email: true\r\n              }\r\n            },\r\n            categories: {\r\n              include: {\r\n                category: {\r\n                  select: {\r\n                    id: true,\r\n                    name: true,\r\n                    slug: true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            _count: {\r\n              select: {\r\n                comments: true\r\n              }\r\n            }\r\n          },\r\n          skip,\r\n          take,\r\n          orderBy\r\n        }),\r\n        prisma.article.count({ where })\r\n      ]);\r\n\r\n      const totalPages = Math.ceil(total / take);\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Artigos listados com sucesso',\r\n        data: {\r\n          articles,\r\n          pagination: {\r\n            page: Number(page),\r\n            limit: take,\r\n            total,\r\n            totalPages,\r\n            hasNext: Number(page) < totalPages,\r\n            hasPrev: Number(page) > 1\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao listar artigos', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Busca um artigo por ID ou slug\r\n   */\r\n  static async getArticle(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { identifier } = req.params;\r\n      const { incrementViews = 'false' } = req.query;\r\n\r\n      if (!identifier) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID ou slug do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Tentar buscar por ID primeiro, depois por slug\r\n      let article = await prisma.article.findUnique({\r\n        where: { id: identifier },\r\n        include: {\r\n          author: {\r\n            select: {\r\n              id: true,\r\n              name: true,\r\n              email: true\r\n            }\r\n          },\r\n          categories: {\r\n            include: {\r\n              category: {\r\n                select: {\r\n                  id: true,\r\n                  name: true,\r\n                  slug: true\r\n                }\r\n              }\r\n            }\r\n          },\r\n          comments: {\r\n            where: { isApproved: true },\r\n            orderBy: { createdAt: 'desc' }\r\n          },\r\n          _count: {\r\n            select: {\r\n              comments: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      // Se n\xE3o encontrou por ID, tentar por slug\r\n      if (!article) {\r\n        article = await prisma.article.findUnique({\r\n          where: { slug: identifier },\r\n          include: {\r\n            author: {\r\n              select: {\r\n                id: true,\r\n                name: true,\r\n                email: true\r\n              }\r\n            },\r\n            categories: {\r\n              include: {\r\n                category: {\r\n                  select: {\r\n                    id: true,\r\n                    name: true,\r\n                    slug: true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            comments: {\r\n              where: { isApproved: true },\r\n              orderBy: { createdAt: 'desc' }\r\n            },\r\n            _count: {\r\n              select: {\r\n                comments: true\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (!article) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Incrementar visualiza\xE7\xF5es se solicitado\r\n      if (incrementViews === 'true') {\r\n        await prisma.article.update({\r\n          where: { id: article.id },\r\n          data: { views: { increment: 1 } }\r\n        });\r\n        article.views += 1;\r\n      }\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Artigo encontrado',\r\n        data: { article }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao buscar artigo', { error, identifier: req.params.identifier });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cria um novo artigo\r\n   */\r\n  static async createArticle(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const {\r\n        title,\r\n        content,\r\n        excerpt,\r\n        slug,\r\n        featuredImage,\r\n        isPublished = false,\r\n        tags = [],\r\n        categoryId\r\n      }: ArticleData = req.body;\r\n      const currentUser = (req as any).user;\r\n\r\n      // Valida\xE7\xF5es b\xE1sicas\r\n      if (!title || !content) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'T\xEDtulo e conte\xFAdo s\xE3o obrigat\xF3rios'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Gerar slug se n\xE3o fornecido\r\n      let articleSlug = slug;\r\n      if (!articleSlug) {\r\n        articleSlug = title\r\n          .toLowerCase()\r\n          .normalize('NFD')\r\n          .replace(/[\\u0300-\\u036f]/g, '')\r\n          .replace(/[^a-z0-9\\s-]/g, '')\r\n          .replace(/\\s+/g, '-')\r\n          .replace(/-+/g, '-')\r\n          .trim();\r\n      }\r\n\r\n      // Verificar se o slug j\xE1 existe\r\n      const existingArticle = await prisma.article.findUnique({\r\n        where: { slug: articleSlug }\r\n      });\r\n\r\n      if (existingArticle) {\r\n        // Adicionar timestamp ao slug para torn\xE1-lo \xFAnico\r\n        articleSlug = `${articleSlug}-${Date.now()}`;\r\n      }\r\n\r\n      // Verificar se a categoria existe (se fornecida)\r\n      if (categoryId) {\r\n        const category = await prisma.category.findUnique({\r\n          where: { id: categoryId }\r\n        });\r\n\r\n        if (!category) {\r\n          res.status(400).json({\r\n            success: false,\r\n            message: 'Categoria n\xE3o encontrada'\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Gerar excerpt se n\xE3o fornecido\r\n      let articleExcerpt = excerpt;\r\n      if (!articleExcerpt) {\r\n        // Remover tags HTML e pegar os primeiros 200 caracteres\r\n        const plainText = content.replace(/<[^>]*>/g, '');\r\n        articleExcerpt = plainText.length > 200\r\n          ? plainText.substring(0, 200) + '...'\r\n          : plainText;\r\n      }\r\n\r\n      // Criar artigo\r\n      const articleData: any = {\r\n        title: title || '',\r\n        content: content || '',\r\n        excerpt: articleExcerpt,\r\n        slug: articleSlug,\r\n        featuredImage: featuredImage || undefined,\r\n        status: isPublished ? 'PUBLISHED' : 'DRAFT',\r\n        publishedAt: isPublished ? new Date() : null,\r\n        authorId: currentUser.id as string,\r\n        tags: {\r\n          create: tags?.map((tagId: string) => ({ tagId })) || []\r\n        }\r\n      };\r\n      \r\n      // Add categories if provided\r\n      if (categoryId) {\r\n        articleData.categories = {\r\n          create: [{ categoryId }]\r\n        };\r\n      }\r\n      \r\n      const article = await prisma.article.create({\r\n        data: articleData,\r\n        include: {\r\n          author: {\r\n            select: {\r\n              id: true,\r\n              name: true,\r\n              email: true\r\n\r\n            }\r\n          },\r\n          categories: {\r\n            include: {\r\n              category: {\r\n                select: {\r\n                  id: true,\r\n                  name: true,\r\n                  slug: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('Artigo criado', {\r\n        articleId: article.id,\r\n        title: article.title,\r\n        authorId: currentUser.id,\r\n        status: article.status\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        message: 'Artigo criado com sucesso',\r\n        data: { article }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao criar artigo', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atualiza um artigo existente\r\n   */\r\n  static async updateArticle(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const {\r\n        title,\r\n        content,\r\n        excerpt,\r\n        slug,\r\n        featuredImage,\r\n        isPublished,\r\n        tags,\r\n        categoryId\r\n      }: ArticleData = req.body;\r\n      const currentUser = (req as any).user;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar se o artigo existe\r\n      const existingArticle = await prisma.article.findUnique({\r\n        where: { id }\r\n      });\r\n\r\n      if (!existingArticle) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar permiss\xF5es (autor ou admin)\r\n      if (currentUser.role !== 'ADMIN' && existingArticle.authorId !== currentUser.id) {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Sem permiss\xE3o para editar este artigo'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Preparar dados para atualiza\xE7\xE3o\r\n      const updateData: any = {};\r\n\r\n      if (title) updateData.title = title;\r\n      if (content) updateData.content = content;\r\n      if (excerpt) updateData.excerpt = excerpt;\r\n      if (featuredImage !== undefined) updateData.featuredImage = featuredImage;\r\n      \r\n      // Handle categories relationship\r\n      if (categoryId !== undefined) {\r\n        if (categoryId) {\r\n          // Verificar se a categoria existe\r\n          const category = await prisma.category.findUnique({\r\n            where: { id: categoryId }\r\n          });\r\n\r\n          if (!category) {\r\n            res.status(400).json({\r\n              success: false,\r\n              message: 'Categoria n\xE3o encontrada'\r\n            });\r\n            return;\r\n          }\r\n          \r\n          updateData.categories = {\r\n            deleteMany: {},\r\n            create: [{ categoryId }]\r\n          };\r\n        } else {\r\n          updateData.categories = {\r\n            deleteMany: {}\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Handle tags relationship\r\n      if (tags) {\r\n        updateData.tags = {\r\n          deleteMany: {},\r\n          create: tags.map((tagId: string) => ({ tagId }))\r\n        };\r\n      }\r\n\r\n      // Verificar slug \xFAnico se fornecido\r\n      if (slug && slug !== existingArticle.slug) {\r\n        const slugInUse = await prisma.article.findFirst({\r\n          where: {\r\n            slug,\r\n            id: { not: id }\r\n          }\r\n        });\r\n\r\n        if (slugInUse) {\r\n          res.status(409).json({\r\n            success: false,\r\n            message: 'Slug j\xE1 est\xE1 em uso por outro artigo'\r\n          });\r\n          return;\r\n        }\r\n\r\n        updateData.slug = slug;\r\n      }\r\n\r\n      // Gerenciar publica\xE7\xE3o\r\n      if (isPublished !== undefined) {\r\n        updateData.status = isPublished ? 'PUBLISHED' : 'DRAFT';\r\n\r\n        // Se est\xE1 sendo publicado pela primeira vez\r\n        if (isPublished && existingArticle.status !== 'PUBLISHED') {\r\n          updateData.publishedAt = new Date();\r\n        }\r\n\r\n        // Se est\xE1 sendo despublicado\r\n        if (!isPublished && existingArticle.status === 'PUBLISHED') {\r\n          updateData.publishedAt = null;\r\n        }\r\n      }\r\n\r\n      updateData.updatedAt = new Date();\r\n\r\n      // Atualizar artigo\r\n      const updatedArticle = await prisma.article.update({\r\n        where: { id },\r\n        data: updateData,\r\n        include: {\r\n          author: {\r\n            select: {\r\n              id: true,\r\n              name: true,\r\n              email: true\r\n            }\r\n          },\r\n          categories: {\r\n            include: {\r\n              category: {\r\n                select: {\r\n                  id: true,\r\n                  name: true,\r\n                  slug: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('Artigo atualizado', {\r\n        articleId: id,\r\n        updatedBy: currentUser.id,\r\n        changes: Object.keys(updateData)\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Artigo atualizado com sucesso',\r\n        data: { article: updatedArticle }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao atualizar artigo', { error, articleId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove um artigo\r\n   */\r\n  // static async deleteArticle(req: Request, res: Response): Promise<void> {\r\n  //   try {\r\n  //     const { id } = req.params;\r\n  //     const currentUser = (req as any).user;\r\n\r\n  //     if (!id) {\r\n  //       res.status(400).json({\r\n  //         success: false,\r\n  //         message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n  //       });\r\n  //       return;\r\n  //     }\r\n\r\n  //     // Verificar se o artigo existe\r\n  //     const existingArticle = await prisma.article.findUnique({\r\n  //       where: { id }\r\n  //     });\r\n\r\n  //     if (!existingArticle) {\r\n  //       res.status(404).json({\r\n  //         success: false,\r\n  //         message: 'Artigo n\xE3o encontrado'\r\n  //       });\r\n  //       return;\r\n  //     }\r\n\r\n  //     // Verificar permiss\xF5es (autor ou admin)\r\n  //     if (currentUser.role !== 'ADMIN' && existingArticle.authorId !== currentUser.id) {\r\n  //       res.status(403).json({\r\n  //         success: false,\r\n  //         message: 'Sem permiss\xE3o para deletar este artigo'\r\n  //       });\r\n  //       return;\r\n  //     }\r\n\r\n  //     // Deletar artigo e coment\xE1rios relacionados\r\n  //     await prisma.$transaction([\r\n  //       prisma.articleComment.deleteMany({\r\n  //         where: { articleId: id }\r\n  //       }),\r\n  //       prisma.article.delete({\r\n  //         where: { id }\r\n  //       })\r\n  //     ]);\r\n\r\n  //     // Log da a\xE7\xE3o\r\n  //     logger.info('Artigo deletado', {\r\n  //       articleId: id,\r\n  //       title: existingArticle.title,\r\n  //       deletedBy: currentUser.id\r\n  //     });\r\n\r\n  //     res.status(200).json({\r\n  //       success: true,\r\n  //       message: 'Artigo deletado com sucesso'\r\n  //     });\r\n  //   } catch (error) {\r\n  //     logger.error('Erro ao deletar artigo', { error, articleId: req.params.id });\r\n  //     res.status(500).json({\r\n  //       success: false,\r\n  //       message: 'Erro interno do servidor'\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Busca artigos relacionados\r\n   */\r\n  static async getRelatedArticles(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const { limit = 5 } = req.query;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Buscar o artigo atual\r\n      const currentArticle = await prisma.article.findUnique({\r\n        where: { id },\r\n        select: {\r\n          categories: {\r\n            select: {\r\n              categoryId: true\r\n            }\r\n          },\r\n          tags: {\r\n            select: {\r\n              tagId: true\r\n            }\r\n          }\r\n        }\r\n      }) as { categories: { categoryId: string }[]; tags: { tagId: string }[] } | null;\r\n\r\n      if (!currentArticle) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Buscar artigos relacionados\r\n      const relatedArticles = await prisma.article.findMany({\r\n        where: {\r\n          AND: [\r\n            { id: { not: id } },\r\n            { status: 'PUBLISHED' },\r\n            {\r\n              OR: [\r\n                // Mesma categoria\r\n                currentArticle.categories.length > 0 ? {\r\n                  categories: {\r\n                    some: {\r\n                      categoryId: {\r\n                        in: currentArticle.categories.map(cat => cat.categoryId)\r\n                      }\r\n                    }\r\n                  }\r\n                } : {},\r\n                // Tags em comum\r\n                currentArticle.tags.length > 0 ? {\r\n                  tags: {\r\n                    some: {\r\n                      tagId: {\r\n                        in: currentArticle.tags.map(tag => tag.tagId)\r\n                      }\r\n                    }\r\n                  }\r\n                } : {}\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        select: {\r\n          id: true,\r\n          title: true,\r\n          excerpt: true,\r\n          slug: true,\r\n          featuredImage: true,\r\n          publishedAt: true,\r\n          views: true,\r\n          author: {\r\n            select: {\r\n              id: true,\r\n              name: true\r\n            }\r\n          },\r\n          categories: {\r\n            include: {\r\n              category: {\r\n                select: {\r\n                  id: true,\r\n                  name: true,\r\n                  slug: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        take: Number(limit),\r\n        orderBy: { publishedAt: 'desc' }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Artigos relacionados encontrados',\r\n        data: { articles: relatedArticles }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao buscar artigos relacionados', { error, articleId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Busca artigos populares\r\n   */\r\n  static async getPopularArticles(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { limit = 10, period = '30' } = req.query;\r\n\r\n      // Calcular data limite baseada no per\xEDodo\r\n      const periodDays = Number(period);\r\n      const dateLimit = new Date();\r\n      dateLimit.setDate(dateLimit.getDate() - periodDays);\r\n\r\n      const popularArticles = await prisma.article.findMany({\r\n        where: {\r\n          status: 'PUBLISHED',\r\n          publishedAt: {\r\n            gte: dateLimit\r\n          }\r\n        },\r\n        select: {\r\n          id: true,\r\n          title: true,\r\n          excerpt: true,\r\n          slug: true,\r\n          featuredImage: true,\r\n          publishedAt: true,\r\n          views: true,\r\n          author: {\r\n            select: {\r\n              id: true,\r\n              name: true\r\n            }\r\n          },\r\n          categories: {\r\n            include: {\r\n              category: {\r\n                select: {\r\n                  id: true,\r\n                  name: true,\r\n                  slug: true\r\n                }\r\n              }\r\n            }\r\n          },\r\n          _count: {\r\n            select: {\r\n              comments: true\r\n            }\r\n          }\r\n        },\r\n        take: Number(limit),\r\n        orderBy: [\r\n          { views: 'desc' },\r\n          { publishedAt: 'desc' }\r\n        ]\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Artigos populares encontrados',\r\n        data: { articles: popularArticles }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao buscar artigos populares', { error });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deleta um artigo\r\n   */\r\n  static async deleteArticle(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const currentUser = (req as any).user;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar se o artigo existe\r\n      const existingArticle = await prisma.article.findUnique({\r\n        where: { id }\r\n      });\r\n\r\n      if (!existingArticle) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar permiss\xF5es (autor ou admin)\r\n      if (currentUser.role !== 'ADMIN' && existingArticle.authorId !== currentUser.id) {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Sem permiss\xE3o para deletar este artigo'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Deletar artigo (cascade ir\xE1 deletar relacionamentos)\r\n      await prisma.article.delete({\r\n        where: { id }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('Artigo deletado', {\r\n        articleId: id,\r\n        title: existingArticle.title,\r\n        authorId: currentUser.id\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Artigo deletado com sucesso'\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao deletar artigo', { error, articleId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Curtir/descurtir um artigo\r\n   */\r\n  static async likeArticle(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const currentUser = (req as any).user;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar se o artigo existe\r\n      const article = await prisma.article.findUnique({\r\n        where: { id }\r\n      });\r\n\r\n      if (!article) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar se j\xE1 curtiu\r\n      const existingLike = await prisma.articleLike.findUnique({\r\n        where: {\r\n          userId_articleId: {\r\n            userId: currentUser.id,\r\n            articleId: id\r\n          }\r\n        }\r\n      });\r\n\r\n      let liked = false;\r\n      if (existingLike) {\r\n        // Remover curtida\r\n        await prisma.articleLike.delete({\r\n          where: {\r\n            userId_articleId: {\r\n              userId: currentUser.id,\r\n              articleId: id\r\n            }\r\n          }\r\n        });\r\n        liked = false;\r\n      } else {\r\n        // Adicionar curtida\r\n        await prisma.articleLike.create({\r\n          data: {\r\n            userId: currentUser.id,\r\n            articleId: id\r\n          }\r\n        });\r\n        liked = true;\r\n      }\r\n\r\n      // Contar total de curtidas\r\n      const likesCount = await prisma.articleLike.count({\r\n        where: { articleId: id }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: liked ? 'Artigo curtido' : 'Curtida removida',\r\n        data: {\r\n          liked,\r\n          likesCount\r\n        }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao curtir artigo', { error, articleId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Buscar coment\xE1rios de um artigo\r\n   */\r\n  static async getArticleComments(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const { page = 1, limit = 10, sortOrder = 'desc' } = req.query;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar se o artigo existe\r\n      const article = await prisma.article.findUnique({\r\n        where: { id }\r\n      });\r\n\r\n      if (!article) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const skip = (Number(page) - 1) * Number(limit);\r\n      const take = Number(limit);\r\n\r\n      // Buscar coment\xE1rios aprovados\r\n      const [comments, total] = await Promise.all([\r\n        prisma.comment.findMany({\r\n          where: {\r\n            articleId: id,\r\n            isApproved: true\r\n          },\r\n          include: {\r\n            author: {\r\n              select: {\r\n                id: true,\r\n                name: true\r\n              }\r\n            }\r\n          },\r\n          skip,\r\n          take,\r\n          orderBy: { createdAt: sortOrder as 'asc' | 'desc' }\r\n        }),\r\n        prisma.comment.count({\r\n          where: {\r\n            articleId: id,\r\n            isApproved: true\r\n          }\r\n        })\r\n      ]);\r\n\r\n      const totalPages = Math.ceil(total / take);\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Coment\xE1rios encontrados',\r\n        data: {\r\n          comments,\r\n          pagination: {\r\n            page: Number(page),\r\n            limit: take,\r\n            total,\r\n            totalPages,\r\n            hasNext: Number(page) < totalPages,\r\n            hasPrev: Number(page) > 1\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao buscar coment\xE1rios', { error, articleId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Criar coment\xE1rio em um artigo\r\n   */\r\n  static async createComment(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { id } = req.params;\r\n      const { content } = req.body;\r\n      const currentUser = (req as any).user;\r\n\r\n      if (!id) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'ID do artigo \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!content || content.trim().length === 0) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Conte\xFAdo do coment\xE1rio \xE9 obrigat\xF3rio'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar se o artigo existe\r\n      const article = await prisma.article.findUnique({\r\n        where: { id }\r\n      });\r\n\r\n      if (!article) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Artigo n\xE3o encontrado'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Criar coment\xE1rio\r\n      const comment = await prisma.comment.create({\r\n        data: {\r\n          content: content.trim(),\r\n          articleId: id,\r\n          authorId: currentUser.id,\r\n          isApproved: false // Coment\xE1rios precisam de aprova\xE7\xE3o\r\n        },\r\n        include: {\r\n          author: {\r\n            select: {\r\n              id: true,\r\n              name: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      // Log da a\xE7\xE3o\r\n      logger.info('Coment\xE1rio criado', {\r\n        commentId: comment.id,\r\n        articleId: id,\r\n        authorId: currentUser.id\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        message: 'Coment\xE1rio criado com sucesso. Aguardando aprova\xE7\xE3o.',\r\n        data: { comment }\r\n      });\r\n    } catch (error) {\r\n      logger.error('Erro ao criar coment\xE1rio', { error, articleId: req.params.id });\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Erro interno do servidor'\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default ArticleController;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5afb21fa38b7ffd4769462047e5950563f9db641"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xyvz3ailp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xyvz3ailp();
var __importDefault =
/* istanbul ignore next */
(cov_1xyvz3ailp().s[0]++,
/* istanbul ignore next */
(cov_1xyvz3ailp().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1xyvz3ailp().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1xyvz3ailp().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1xyvz3ailp().f[0]++;
  cov_1xyvz3ailp().s[1]++;
  return /* istanbul ignore next */(cov_1xyvz3ailp().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1xyvz3ailp().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1xyvz3ailp().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1xyvz3ailp().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1xyvz3ailp().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xyvz3ailp().s[3]++;
exports.ArticleController = void 0;
const client_1 =
/* istanbul ignore next */
(cov_1xyvz3ailp().s[4]++, require("@prisma/client"));
const logger_1 =
/* istanbul ignore next */
(cov_1xyvz3ailp().s[5]++, __importDefault(require("../utils/logger")));
const prisma =
/* istanbul ignore next */
(cov_1xyvz3ailp().s[6]++, new client_1.PrismaClient());
/**
 * Controller responsável pelo gerenciamento de artigos
 */
class ArticleController {
  /**
   * Lista todos os artigos com paginação e filtros
   */
  static async getArticles(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[1]++;
    cov_1xyvz3ailp().s[7]++;
    try {
      const {
        search,
        category,
        tag,
        isPublished,
        authorId,
        page =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[3][0]++, 1),
        limit =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[4][0]++, 10),
        sortBy =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[5][0]++, 'createdAt'),
        sortOrder =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[6][0]++, 'desc')
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[8]++, req.query);
      const skip =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[9]++, (Number(page) - 1) * Number(limit));
      const take =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[10]++, Number(limit));
      // Construir filtros
      const where =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[11]++, {});
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[12]++;
      if (search) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[7][0]++;
        cov_1xyvz3ailp().s[13]++;
        where.OR = [{
          title: {
            contains: search,
            mode: 'insensitive'
          }
        }, {
          content: {
            contains: search,
            mode: 'insensitive'
          }
        }, {
          excerpt: {
            contains: search,
            mode: 'insensitive'
          }
        }];
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[7][1]++;
      }
      cov_1xyvz3ailp().s[14]++;
      if (category) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[8][0]++;
        cov_1xyvz3ailp().s[15]++;
        where.category = {
          slug: category
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[8][1]++;
      }
      cov_1xyvz3ailp().s[16]++;
      if (tag) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[9][0]++;
        cov_1xyvz3ailp().s[17]++;
        where.tags = {
          has: tag
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[9][1]++;
      }
      cov_1xyvz3ailp().s[18]++;
      if (isPublished !== undefined) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[10][0]++;
        cov_1xyvz3ailp().s[19]++;
        where.status = isPublished ?
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[11][0]++, 'PUBLISHED') :
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[11][1]++, 'DRAFT');
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[10][1]++;
      }
      cov_1xyvz3ailp().s[20]++;
      if (authorId) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[12][0]++;
        cov_1xyvz3ailp().s[21]++;
        where.authorId = authorId;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[12][1]++;
      }
      // Definir ordenação
      const orderBy =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[22]++, {});
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[23]++;
      orderBy[sortBy] = sortOrder;
      // Buscar artigos
      const [articles, total] =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[24]++, await Promise.all([prisma.article.findMany({
        where,
        include: {
          author: {
            select: {
              id: true,
              name: true,
              email: true
            }
          },
          categories: {
            include: {
              category: {
                select: {
                  id: true,
                  name: true,
                  slug: true
                }
              }
            }
          },
          _count: {
            select: {
              comments: true
            }
          }
        },
        skip,
        take,
        orderBy
      }), prisma.article.count({
        where
      })]));
      const totalPages =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[25]++, Math.ceil(total / take));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[26]++;
      res.status(200).json({
        success: true,
        message: 'Artigos listados com sucesso',
        data: {
          articles,
          pagination: {
            page: Number(page),
            limit: take,
            total,
            totalPages,
            hasNext: Number(page) < totalPages,
            hasPrev: Number(page) > 1
          }
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[27]++;
      logger_1.default.error('Erro ao listar artigos', {
        error
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[28]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Busca um artigo por ID ou slug
   */
  static async getArticle(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[2]++;
    cov_1xyvz3ailp().s[29]++;
    try {
      const {
        identifier
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[30]++, req.params);
      const {
        incrementViews =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[13][0]++, 'false')
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[31]++, req.query);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[32]++;
      if (!identifier) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[14][0]++;
        cov_1xyvz3ailp().s[33]++;
        res.status(400).json({
          success: false,
          message: 'ID ou slug do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[34]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[14][1]++;
      }
      // Tentar buscar por ID primeiro, depois por slug
      let article =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[35]++, await prisma.article.findUnique({
        where: {
          id: identifier
        },
        include: {
          author: {
            select: {
              id: true,
              name: true,
              email: true
            }
          },
          categories: {
            include: {
              category: {
                select: {
                  id: true,
                  name: true,
                  slug: true
                }
              }
            }
          },
          comments: {
            where: {
              isApproved: true
            },
            orderBy: {
              createdAt: 'desc'
            }
          },
          _count: {
            select: {
              comments: true
            }
          }
        }
      }));
      // Se não encontrou por ID, tentar por slug
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[36]++;
      if (!article) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[15][0]++;
        cov_1xyvz3ailp().s[37]++;
        article = await prisma.article.findUnique({
          where: {
            slug: identifier
          },
          include: {
            author: {
              select: {
                id: true,
                name: true,
                email: true
              }
            },
            categories: {
              include: {
                category: {
                  select: {
                    id: true,
                    name: true,
                    slug: true
                  }
                }
              }
            },
            comments: {
              where: {
                isApproved: true
              },
              orderBy: {
                createdAt: 'desc'
              }
            },
            _count: {
              select: {
                comments: true
              }
            }
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[15][1]++;
      }
      cov_1xyvz3ailp().s[38]++;
      if (!article) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[16][0]++;
        cov_1xyvz3ailp().s[39]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[40]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[16][1]++;
      }
      // Incrementar visualizações se solicitado
      cov_1xyvz3ailp().s[41]++;
      if (incrementViews === 'true') {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[17][0]++;
        cov_1xyvz3ailp().s[42]++;
        await prisma.article.update({
          where: {
            id: article.id
          },
          data: {
            views: {
              increment: 1
            }
          }
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[43]++;
        article.views += 1;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[17][1]++;
      }
      cov_1xyvz3ailp().s[44]++;
      res.status(200).json({
        success: true,
        message: 'Artigo encontrado',
        data: {
          article
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[45]++;
      logger_1.default.error('Erro ao buscar artigo', {
        error,
        identifier: req.params.identifier
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[46]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Cria um novo artigo
   */
  static async createArticle(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[3]++;
    cov_1xyvz3ailp().s[47]++;
    try {
      const {
        title,
        content,
        excerpt,
        slug,
        featuredImage,
        isPublished =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[18][0]++, false),
        tags =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[19][0]++, []),
        categoryId
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[48]++, req.body);
      const currentUser =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[49]++, req.user);
      // Validações básicas
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[50]++;
      if (
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[21][0]++, !title) ||
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[21][1]++, !content)) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[20][0]++;
        cov_1xyvz3ailp().s[51]++;
        res.status(400).json({
          success: false,
          message: 'Título e conteúdo são obrigatórios'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[52]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[20][1]++;
      }
      // Gerar slug se não fornecido
      let articleSlug =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[53]++, slug);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[54]++;
      if (!articleSlug) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[22][0]++;
        cov_1xyvz3ailp().s[55]++;
        articleSlug = title.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '').replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').trim();
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[22][1]++;
      }
      // Verificar se o slug já existe
      const existingArticle =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[56]++, await prisma.article.findUnique({
        where: {
          slug: articleSlug
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[57]++;
      if (existingArticle) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[23][0]++;
        cov_1xyvz3ailp().s[58]++;
        // Adicionar timestamp ao slug para torná-lo único
        articleSlug = `${articleSlug}-${Date.now()}`;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[23][1]++;
      }
      // Verificar se a categoria existe (se fornecida)
      cov_1xyvz3ailp().s[59]++;
      if (categoryId) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[24][0]++;
        const category =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().s[60]++, await prisma.category.findUnique({
          where: {
            id: categoryId
          }
        }));
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[61]++;
        if (!category) {
          /* istanbul ignore next */
          cov_1xyvz3ailp().b[25][0]++;
          cov_1xyvz3ailp().s[62]++;
          res.status(400).json({
            success: false,
            message: 'Categoria não encontrada'
          });
          /* istanbul ignore next */
          cov_1xyvz3ailp().s[63]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1xyvz3ailp().b[25][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[24][1]++;
      }
      // Gerar excerpt se não fornecido
      let articleExcerpt =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[64]++, excerpt);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[65]++;
      if (!articleExcerpt) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[26][0]++;
        // Remover tags HTML e pegar os primeiros 200 caracteres
        const plainText =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().s[66]++, content.replace(/<[^>]*>/g, ''));
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[67]++;
        articleExcerpt = plainText.length > 200 ?
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[27][0]++, plainText.substring(0, 200) + '...') :
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[27][1]++, plainText);
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[26][1]++;
      }
      // Criar artigo
      const articleData =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[68]++, {
        title:
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[28][0]++, title) ||
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[28][1]++, ''),
        content:
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[29][0]++, content) ||
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[29][1]++, ''),
        excerpt: articleExcerpt,
        slug: articleSlug,
        featuredImage:
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[30][0]++, featuredImage) ||
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[30][1]++, undefined),
        status: isPublished ?
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[31][0]++, 'PUBLISHED') :
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[31][1]++, 'DRAFT'),
        publishedAt: isPublished ?
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[32][0]++, new Date()) :
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[32][1]++, null),
        authorId: currentUser.id,
        tags: {
          create:
          /* istanbul ignore next */
          (cov_1xyvz3ailp().b[33][0]++, tags?.map(tagId => {
            /* istanbul ignore next */
            cov_1xyvz3ailp().f[4]++;
            cov_1xyvz3ailp().s[69]++;
            return {
              tagId
            };
          })) ||
          /* istanbul ignore next */
          (cov_1xyvz3ailp().b[33][1]++, [])
        }
      });
      // Add categories if provided
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[70]++;
      if (categoryId) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[34][0]++;
        cov_1xyvz3ailp().s[71]++;
        articleData.categories = {
          create: [{
            categoryId
          }]
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[34][1]++;
      }
      const article =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[72]++, await prisma.article.create({
        data: articleData,
        include: {
          author: {
            select: {
              id: true,
              name: true,
              email: true
            }
          },
          categories: {
            include: {
              category: {
                select: {
                  id: true,
                  name: true,
                  slug: true
                }
              }
            }
          }
        }
      }));
      // Log da ação
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[73]++;
      logger_1.default.info('Artigo criado', {
        articleId: article.id,
        title: article.title,
        authorId: currentUser.id,
        status: article.status
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[74]++;
      res.status(201).json({
        success: true,
        message: 'Artigo criado com sucesso',
        data: {
          article
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[75]++;
      logger_1.default.error('Erro ao criar artigo', {
        error
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[76]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Atualiza um artigo existente
   */
  static async updateArticle(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[5]++;
    cov_1xyvz3ailp().s[77]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[78]++, req.params);
      const {
        title,
        content,
        excerpt,
        slug,
        featuredImage,
        isPublished,
        tags,
        categoryId
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[79]++, req.body);
      const currentUser =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[80]++, req.user);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[81]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[35][0]++;
        cov_1xyvz3ailp().s[82]++;
        res.status(400).json({
          success: false,
          message: 'ID do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[83]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[35][1]++;
      }
      // Verificar se o artigo existe
      const existingArticle =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[84]++, await prisma.article.findUnique({
        where: {
          id
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[85]++;
      if (!existingArticle) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[36][0]++;
        cov_1xyvz3ailp().s[86]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[87]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[36][1]++;
      }
      // Verificar permissões (autor ou admin)
      cov_1xyvz3ailp().s[88]++;
      if (
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[38][0]++, currentUser.role !== 'ADMIN') &&
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[38][1]++, existingArticle.authorId !== currentUser.id)) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[37][0]++;
        cov_1xyvz3ailp().s[89]++;
        res.status(403).json({
          success: false,
          message: 'Sem permissão para editar este artigo'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[90]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[37][1]++;
      }
      // Preparar dados para atualização
      const updateData =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[91]++, {});
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[92]++;
      if (title) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[39][0]++;
        cov_1xyvz3ailp().s[93]++;
        updateData.title = title;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[39][1]++;
      }
      cov_1xyvz3ailp().s[94]++;
      if (content) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[40][0]++;
        cov_1xyvz3ailp().s[95]++;
        updateData.content = content;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[40][1]++;
      }
      cov_1xyvz3ailp().s[96]++;
      if (excerpt) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[41][0]++;
        cov_1xyvz3ailp().s[97]++;
        updateData.excerpt = excerpt;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[41][1]++;
      }
      cov_1xyvz3ailp().s[98]++;
      if (featuredImage !== undefined) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[42][0]++;
        cov_1xyvz3ailp().s[99]++;
        updateData.featuredImage = featuredImage;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[42][1]++;
      }
      // Handle categories relationship
      cov_1xyvz3ailp().s[100]++;
      if (categoryId !== undefined) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[43][0]++;
        cov_1xyvz3ailp().s[101]++;
        if (categoryId) {
          /* istanbul ignore next */
          cov_1xyvz3ailp().b[44][0]++;
          // Verificar se a categoria existe
          const category =
          /* istanbul ignore next */
          (cov_1xyvz3ailp().s[102]++, await prisma.category.findUnique({
            where: {
              id: categoryId
            }
          }));
          /* istanbul ignore next */
          cov_1xyvz3ailp().s[103]++;
          if (!category) {
            /* istanbul ignore next */
            cov_1xyvz3ailp().b[45][0]++;
            cov_1xyvz3ailp().s[104]++;
            res.status(400).json({
              success: false,
              message: 'Categoria não encontrada'
            });
            /* istanbul ignore next */
            cov_1xyvz3ailp().s[105]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1xyvz3ailp().b[45][1]++;
          }
          cov_1xyvz3ailp().s[106]++;
          updateData.categories = {
            deleteMany: {},
            create: [{
              categoryId
            }]
          };
        } else {
          /* istanbul ignore next */
          cov_1xyvz3ailp().b[44][1]++;
          cov_1xyvz3ailp().s[107]++;
          updateData.categories = {
            deleteMany: {}
          };
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[43][1]++;
      }
      // Handle tags relationship
      cov_1xyvz3ailp().s[108]++;
      if (tags) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[46][0]++;
        cov_1xyvz3ailp().s[109]++;
        updateData.tags = {
          deleteMany: {},
          create: tags.map(tagId => {
            /* istanbul ignore next */
            cov_1xyvz3ailp().f[6]++;
            cov_1xyvz3ailp().s[110]++;
            return {
              tagId
            };
          })
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[46][1]++;
      }
      // Verificar slug único se fornecido
      cov_1xyvz3ailp().s[111]++;
      if (
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[48][0]++, slug) &&
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[48][1]++, slug !== existingArticle.slug)) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[47][0]++;
        const slugInUse =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().s[112]++, await prisma.article.findFirst({
          where: {
            slug,
            id: {
              not: id
            }
          }
        }));
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[113]++;
        if (slugInUse) {
          /* istanbul ignore next */
          cov_1xyvz3ailp().b[49][0]++;
          cov_1xyvz3ailp().s[114]++;
          res.status(409).json({
            success: false,
            message: 'Slug já está em uso por outro artigo'
          });
          /* istanbul ignore next */
          cov_1xyvz3ailp().s[115]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1xyvz3ailp().b[49][1]++;
        }
        cov_1xyvz3ailp().s[116]++;
        updateData.slug = slug;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[47][1]++;
      }
      // Gerenciar publicação
      cov_1xyvz3ailp().s[117]++;
      if (isPublished !== undefined) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[50][0]++;
        cov_1xyvz3ailp().s[118]++;
        updateData.status = isPublished ?
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[51][0]++, 'PUBLISHED') :
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[51][1]++, 'DRAFT');
        // Se está sendo publicado pela primeira vez
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[119]++;
        if (
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[53][0]++, isPublished) &&
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[53][1]++, existingArticle.status !== 'PUBLISHED')) {
          /* istanbul ignore next */
          cov_1xyvz3ailp().b[52][0]++;
          cov_1xyvz3ailp().s[120]++;
          updateData.publishedAt = new Date();
        } else
        /* istanbul ignore next */
        {
          cov_1xyvz3ailp().b[52][1]++;
        }
        // Se está sendo despublicado
        cov_1xyvz3ailp().s[121]++;
        if (
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[55][0]++, !isPublished) &&
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[55][1]++, existingArticle.status === 'PUBLISHED')) {
          /* istanbul ignore next */
          cov_1xyvz3ailp().b[54][0]++;
          cov_1xyvz3ailp().s[122]++;
          updateData.publishedAt = null;
        } else
        /* istanbul ignore next */
        {
          cov_1xyvz3ailp().b[54][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[50][1]++;
      }
      cov_1xyvz3ailp().s[123]++;
      updateData.updatedAt = new Date();
      // Atualizar artigo
      const updatedArticle =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[124]++, await prisma.article.update({
        where: {
          id
        },
        data: updateData,
        include: {
          author: {
            select: {
              id: true,
              name: true,
              email: true
            }
          },
          categories: {
            include: {
              category: {
                select: {
                  id: true,
                  name: true,
                  slug: true
                }
              }
            }
          }
        }
      }));
      // Log da ação
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[125]++;
      logger_1.default.info('Artigo atualizado', {
        articleId: id,
        updatedBy: currentUser.id,
        changes: Object.keys(updateData)
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[126]++;
      res.status(200).json({
        success: true,
        message: 'Artigo atualizado com sucesso',
        data: {
          article: updatedArticle
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[127]++;
      logger_1.default.error('Erro ao atualizar artigo', {
        error,
        articleId: req.params.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[128]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Remove um artigo
   */
  // static async deleteArticle(req: Request, res: Response): Promise<void> {
  //   try {
  //     const { id } = req.params;
  //     const currentUser = (req as any).user;
  //     if (!id) {
  //       res.status(400).json({
  //         success: false,
  //         message: 'ID do artigo é obrigatório'
  //       });
  //       return;
  //     }
  //     // Verificar se o artigo existe
  //     const existingArticle = await prisma.article.findUnique({
  //       where: { id }
  //     });
  //     if (!existingArticle) {
  //       res.status(404).json({
  //         success: false,
  //         message: 'Artigo não encontrado'
  //       });
  //       return;
  //     }
  //     // Verificar permissões (autor ou admin)
  //     if (currentUser.role !== 'ADMIN' && existingArticle.authorId !== currentUser.id) {
  //       res.status(403).json({
  //         success: false,
  //         message: 'Sem permissão para deletar este artigo'
  //       });
  //       return;
  //     }
  //     // Deletar artigo e comentários relacionados
  //     await prisma.$transaction([
  //       prisma.articleComment.deleteMany({
  //         where: { articleId: id }
  //       }),
  //       prisma.article.delete({
  //         where: { id }
  //       })
  //     ]);
  //     // Log da ação
  //     logger.info('Artigo deletado', {
  //       articleId: id,
  //       title: existingArticle.title,
  //       deletedBy: currentUser.id
  //     });
  //     res.status(200).json({
  //       success: true,
  //       message: 'Artigo deletado com sucesso'
  //     });
  //   } catch (error) {
  //     logger.error('Erro ao deletar artigo', { error, articleId: req.params.id });
  //     res.status(500).json({
  //       success: false,
  //       message: 'Erro interno do servidor'
  //     });
  //   }
  // }
  /**
   * Busca artigos relacionados
   */
  static async getRelatedArticles(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[7]++;
    cov_1xyvz3ailp().s[129]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[130]++, req.params);
      const {
        limit =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[56][0]++, 5)
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[131]++, req.query);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[132]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[57][0]++;
        cov_1xyvz3ailp().s[133]++;
        res.status(400).json({
          success: false,
          message: 'ID do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[134]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[57][1]++;
      }
      // Buscar o artigo atual
      const currentArticle =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[135]++, await prisma.article.findUnique({
        where: {
          id
        },
        select: {
          categories: {
            select: {
              categoryId: true
            }
          },
          tags: {
            select: {
              tagId: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[136]++;
      if (!currentArticle) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[58][0]++;
        cov_1xyvz3ailp().s[137]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[138]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[58][1]++;
      }
      // Buscar artigos relacionados
      const relatedArticles =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[139]++, await prisma.article.findMany({
        where: {
          AND: [{
            id: {
              not: id
            }
          }, {
            status: 'PUBLISHED'
          }, {
            OR: [
            // Mesma categoria
            currentArticle.categories.length > 0 ?
            /* istanbul ignore next */
            (cov_1xyvz3ailp().b[59][0]++, {
              categories: {
                some: {
                  categoryId: {
                    in: currentArticle.categories.map(cat => {
                      /* istanbul ignore next */
                      cov_1xyvz3ailp().f[8]++;
                      cov_1xyvz3ailp().s[140]++;
                      return cat.categoryId;
                    })
                  }
                }
              }
            }) :
            /* istanbul ignore next */
            (cov_1xyvz3ailp().b[59][1]++, {}),
            // Tags em comum
            currentArticle.tags.length > 0 ?
            /* istanbul ignore next */
            (cov_1xyvz3ailp().b[60][0]++, {
              tags: {
                some: {
                  tagId: {
                    in: currentArticle.tags.map(tag => {
                      /* istanbul ignore next */
                      cov_1xyvz3ailp().f[9]++;
                      cov_1xyvz3ailp().s[141]++;
                      return tag.tagId;
                    })
                  }
                }
              }
            }) :
            /* istanbul ignore next */
            (cov_1xyvz3ailp().b[60][1]++, {})]
          }]
        },
        select: {
          id: true,
          title: true,
          excerpt: true,
          slug: true,
          featuredImage: true,
          publishedAt: true,
          views: true,
          author: {
            select: {
              id: true,
              name: true
            }
          },
          categories: {
            include: {
              category: {
                select: {
                  id: true,
                  name: true,
                  slug: true
                }
              }
            }
          }
        },
        take: Number(limit),
        orderBy: {
          publishedAt: 'desc'
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[142]++;
      res.status(200).json({
        success: true,
        message: 'Artigos relacionados encontrados',
        data: {
          articles: relatedArticles
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[143]++;
      logger_1.default.error('Erro ao buscar artigos relacionados', {
        error,
        articleId: req.params.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[144]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Busca artigos populares
   */
  static async getPopularArticles(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[10]++;
    cov_1xyvz3ailp().s[145]++;
    try {
      const {
        limit =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[61][0]++, 10),
        period =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[62][0]++, '30')
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[146]++, req.query);
      // Calcular data limite baseada no período
      const periodDays =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[147]++, Number(period));
      const dateLimit =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[148]++, new Date());
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[149]++;
      dateLimit.setDate(dateLimit.getDate() - periodDays);
      const popularArticles =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[150]++, await prisma.article.findMany({
        where: {
          status: 'PUBLISHED',
          publishedAt: {
            gte: dateLimit
          }
        },
        select: {
          id: true,
          title: true,
          excerpt: true,
          slug: true,
          featuredImage: true,
          publishedAt: true,
          views: true,
          author: {
            select: {
              id: true,
              name: true
            }
          },
          categories: {
            include: {
              category: {
                select: {
                  id: true,
                  name: true,
                  slug: true
                }
              }
            }
          },
          _count: {
            select: {
              comments: true
            }
          }
        },
        take: Number(limit),
        orderBy: [{
          views: 'desc'
        }, {
          publishedAt: 'desc'
        }]
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[151]++;
      res.status(200).json({
        success: true,
        message: 'Artigos populares encontrados',
        data: {
          articles: popularArticles
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[152]++;
      logger_1.default.error('Erro ao buscar artigos populares', {
        error
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[153]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Deleta um artigo
   */
  static async deleteArticle(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[11]++;
    cov_1xyvz3ailp().s[154]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[155]++, req.params);
      const currentUser =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[156]++, req.user);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[157]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[63][0]++;
        cov_1xyvz3ailp().s[158]++;
        res.status(400).json({
          success: false,
          message: 'ID do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[159]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[63][1]++;
      }
      // Verificar se o artigo existe
      const existingArticle =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[160]++, await prisma.article.findUnique({
        where: {
          id
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[161]++;
      if (!existingArticle) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[64][0]++;
        cov_1xyvz3ailp().s[162]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[163]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[64][1]++;
      }
      // Verificar permissões (autor ou admin)
      cov_1xyvz3ailp().s[164]++;
      if (
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[66][0]++, currentUser.role !== 'ADMIN') &&
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[66][1]++, existingArticle.authorId !== currentUser.id)) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[65][0]++;
        cov_1xyvz3ailp().s[165]++;
        res.status(403).json({
          success: false,
          message: 'Sem permissão para deletar este artigo'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[166]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[65][1]++;
      }
      // Deletar artigo (cascade irá deletar relacionamentos)
      cov_1xyvz3ailp().s[167]++;
      await prisma.article.delete({
        where: {
          id
        }
      });
      // Log da ação
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[168]++;
      logger_1.default.info('Artigo deletado', {
        articleId: id,
        title: existingArticle.title,
        authorId: currentUser.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[169]++;
      res.status(200).json({
        success: true,
        message: 'Artigo deletado com sucesso'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[170]++;
      logger_1.default.error('Erro ao deletar artigo', {
        error,
        articleId: req.params.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[171]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Curtir/descurtir um artigo
   */
  static async likeArticle(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[12]++;
    cov_1xyvz3ailp().s[172]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[173]++, req.params);
      const currentUser =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[174]++, req.user);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[175]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[67][0]++;
        cov_1xyvz3ailp().s[176]++;
        res.status(400).json({
          success: false,
          message: 'ID do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[177]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[67][1]++;
      }
      // Verificar se o artigo existe
      const article =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[178]++, await prisma.article.findUnique({
        where: {
          id
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[179]++;
      if (!article) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[68][0]++;
        cov_1xyvz3ailp().s[180]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[181]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[68][1]++;
      }
      // Verificar se já curtiu
      const existingLike =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[182]++, await prisma.articleLike.findUnique({
        where: {
          userId_articleId: {
            userId: currentUser.id,
            articleId: id
          }
        }
      }));
      let liked =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[183]++, false);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[184]++;
      if (existingLike) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[69][0]++;
        cov_1xyvz3ailp().s[185]++;
        // Remover curtida
        await prisma.articleLike.delete({
          where: {
            userId_articleId: {
              userId: currentUser.id,
              articleId: id
            }
          }
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[186]++;
        liked = false;
      } else {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[69][1]++;
        cov_1xyvz3ailp().s[187]++;
        // Adicionar curtida
        await prisma.articleLike.create({
          data: {
            userId: currentUser.id,
            articleId: id
          }
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[188]++;
        liked = true;
      }
      // Contar total de curtidas
      const likesCount =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[189]++, await prisma.articleLike.count({
        where: {
          articleId: id
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[190]++;
      res.status(200).json({
        success: true,
        message: liked ?
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[70][0]++, 'Artigo curtido') :
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[70][1]++, 'Curtida removida'),
        data: {
          liked,
          likesCount
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[191]++;
      logger_1.default.error('Erro ao curtir artigo', {
        error,
        articleId: req.params.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[192]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Buscar comentários de um artigo
   */
  static async getArticleComments(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[13]++;
    cov_1xyvz3ailp().s[193]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[194]++, req.params);
      const {
        page =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[71][0]++, 1),
        limit =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[72][0]++, 10),
        sortOrder =
        /* istanbul ignore next */
        (cov_1xyvz3ailp().b[73][0]++, 'desc')
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[195]++, req.query);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[196]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[74][0]++;
        cov_1xyvz3ailp().s[197]++;
        res.status(400).json({
          success: false,
          message: 'ID do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[198]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[74][1]++;
      }
      // Verificar se o artigo existe
      const article =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[199]++, await prisma.article.findUnique({
        where: {
          id
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[200]++;
      if (!article) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[75][0]++;
        cov_1xyvz3ailp().s[201]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[202]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[75][1]++;
      }
      const skip =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[203]++, (Number(page) - 1) * Number(limit));
      const take =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[204]++, Number(limit));
      // Buscar comentários aprovados
      const [comments, total] =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[205]++, await Promise.all([prisma.comment.findMany({
        where: {
          articleId: id,
          isApproved: true
        },
        include: {
          author: {
            select: {
              id: true,
              name: true
            }
          }
        },
        skip,
        take,
        orderBy: {
          createdAt: sortOrder
        }
      }), prisma.comment.count({
        where: {
          articleId: id,
          isApproved: true
        }
      })]));
      const totalPages =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[206]++, Math.ceil(total / take));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[207]++;
      res.status(200).json({
        success: true,
        message: 'Comentários encontrados',
        data: {
          comments,
          pagination: {
            page: Number(page),
            limit: take,
            total,
            totalPages,
            hasNext: Number(page) < totalPages,
            hasPrev: Number(page) > 1
          }
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[208]++;
      logger_1.default.error('Erro ao buscar comentários', {
        error,
        articleId: req.params.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[209]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
  /**
   * Criar comentário em um artigo
   */
  static async createComment(req, res) {
    /* istanbul ignore next */
    cov_1xyvz3ailp().f[14]++;
    cov_1xyvz3ailp().s[210]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[211]++, req.params);
      const {
        content
      } =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[212]++, req.body);
      const currentUser =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[213]++, req.user);
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[214]++;
      if (!id) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[76][0]++;
        cov_1xyvz3ailp().s[215]++;
        res.status(400).json({
          success: false,
          message: 'ID do artigo é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[216]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[76][1]++;
      }
      cov_1xyvz3ailp().s[217]++;
      if (
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[78][0]++, !content) ||
      /* istanbul ignore next */
      (cov_1xyvz3ailp().b[78][1]++, content.trim().length === 0)) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[77][0]++;
        cov_1xyvz3ailp().s[218]++;
        res.status(400).json({
          success: false,
          message: 'Conteúdo do comentário é obrigatório'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[219]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[77][1]++;
      }
      // Verificar se o artigo existe
      const article =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[220]++, await prisma.article.findUnique({
        where: {
          id
        }
      }));
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[221]++;
      if (!article) {
        /* istanbul ignore next */
        cov_1xyvz3ailp().b[79][0]++;
        cov_1xyvz3ailp().s[222]++;
        res.status(404).json({
          success: false,
          message: 'Artigo não encontrado'
        });
        /* istanbul ignore next */
        cov_1xyvz3ailp().s[223]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1xyvz3ailp().b[79][1]++;
      }
      // Criar comentário
      const comment =
      /* istanbul ignore next */
      (cov_1xyvz3ailp().s[224]++, await prisma.comment.create({
        data: {
          content: content.trim(),
          articleId: id,
          authorId: currentUser.id,
          isApproved: false // Comentários precisam de aprovação
        },
        include: {
          author: {
            select: {
              id: true,
              name: true
            }
          }
        }
      }));
      // Log da ação
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[225]++;
      logger_1.default.info('Comentário criado', {
        commentId: comment.id,
        articleId: id,
        authorId: currentUser.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[226]++;
      res.status(201).json({
        success: true,
        message: 'Comentário criado com sucesso. Aguardando aprovação.',
        data: {
          comment
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[227]++;
      logger_1.default.error('Erro ao criar comentário', {
        error,
        articleId: req.params.id
      });
      /* istanbul ignore next */
      cov_1xyvz3ailp().s[228]++;
      res.status(500).json({
        success: false,
        message: 'Erro interno do servidor'
      });
    }
  }
}
/* istanbul ignore next */
cov_1xyvz3ailp().s[229]++;
exports.ArticleController = ArticleController;
/* istanbul ignore next */
cov_1xyvz3ailp().s[230]++;
exports.default = ArticleController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,