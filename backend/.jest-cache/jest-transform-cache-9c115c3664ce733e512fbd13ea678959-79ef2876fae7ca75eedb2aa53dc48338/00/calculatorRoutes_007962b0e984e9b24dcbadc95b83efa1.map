{"version":3,"names":["express_1","cov_x9zhz160e","s","require","calculatorController_1","auth_1","router","Router","post","req","res","f","calculatorController","calculateTaxes","calculateCompanyTax","calculatePayroll","calculateSimplesNacional","calculateDepreciation","calculateLoan","get","authenticate","authorize","getCalculationHistory","getCalculationStatistics","exports","default"],"sources":["D:\\dev\\contabil\\contabil-site\\backend\\src\\routes\\calculatorRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { calculatorController } from '../controllers/calculatorController';\r\nimport { authenticate, authorize } from '../middlewares/auth';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     TaxCalculationRequest:\r\n *       type: object\r\n *       required:\r\n *         - income\r\n *         - deductions\r\n *         - taxYear\r\n *       properties:\r\n *         income:\r\n *           type: number\r\n *           minimum: 0\r\n *           description: Renda bruta anual\r\n *         deductions:\r\n *           type: number\r\n *           minimum: 0\r\n *           description: Deduções totais\r\n *         taxYear:\r\n *           type: integer\r\n *           minimum: 2020\r\n *           maximum: 2030\r\n *           description: Ano fiscal\r\n *         dependents:\r\n *           type: integer\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Número de dependentes\r\n *         medicalExpenses:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Gastos médicos\r\n *         educationExpenses:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Gastos com educação\r\n *         pensionContributions:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Contribuições previdenciárias\r\n *     TaxCalculationResult:\r\n *       type: object\r\n *       properties:\r\n *         grossIncome:\r\n *           type: number\r\n *           description: Renda bruta\r\n *         taxableIncome:\r\n *           type: number\r\n *           description: Renda tributável\r\n *         totalDeductions:\r\n *           type: number\r\n *           description: Total de deduções\r\n *         incomeTax:\r\n *           type: number\r\n *           description: Imposto de renda devido\r\n *         netIncome:\r\n *           type: number\r\n *           description: Renda líquida\r\n *         effectiveRate:\r\n *           type: number\r\n *           description: Alíquota efetiva (%)\r\n *         marginalRate:\r\n *           type: number\r\n *           description: Alíquota marginal (%)\r\n *         breakdown:\r\n *           type: array\r\n *           items:\r\n *             type: object\r\n *             properties:\r\n *               bracket:\r\n *                 type: string\r\n *               rate:\r\n *                 type: number\r\n *               taxableAmount:\r\n *                 type: number\r\n *               tax:\r\n *                 type: number\r\n *         deductionsBreakdown:\r\n *           type: object\r\n *           properties:\r\n *             standard:\r\n *               type: number\r\n *             dependents:\r\n *               type: number\r\n *             medical:\r\n *               type: number\r\n *             education:\r\n *               type: number\r\n *             pension:\r\n *               type: number\r\n *             other:\r\n *               type: number\r\n *     CompanyTaxRequest:\r\n *       type: object\r\n *       required:\r\n *         - revenue\r\n *         - expenses\r\n *         - companyType\r\n *       properties:\r\n *         revenue:\r\n *           type: number\r\n *           minimum: 0\r\n *           description: Receita bruta\r\n *         expenses:\r\n *           type: number\r\n *           minimum: 0\r\n *           description: Despesas operacionais\r\n *         companyType:\r\n *           type: string\r\n *           enum: [MEI, SIMPLES, LUCRO_PRESUMIDO, LUCRO_REAL]\r\n *           description: Tipo de empresa\r\n *         employees:\r\n *           type: integer\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Número de funcionários\r\n *         sector:\r\n *           type: string\r\n *           description: Setor de atividade\r\n *     PayrollCalculationRequest:\r\n *       type: object\r\n *       required:\r\n *         - grossSalary\r\n *         - position\r\n *       properties:\r\n *         grossSalary:\r\n *           type: number\r\n *           minimum: 0\r\n *           description: Salário bruto\r\n *         position:\r\n *           type: string\r\n *           description: Cargo do funcionário\r\n *         dependents:\r\n *           type: integer\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Número de dependentes\r\n *         transportVoucher:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Vale transporte\r\n *         mealVoucher:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Vale refeição\r\n *         healthInsurance:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Plano de saúde\r\n *         lifeInsurance:\r\n *           type: number\r\n *           minimum: 0\r\n *           default: 0\r\n *           description: Seguro de vida\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/income-tax:\r\n *   post:\r\n *     summary: Calcular imposto de renda pessoa física\r\n *     tags: [Calculadora]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/TaxCalculationRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Cálculo realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/TaxCalculationResult'\r\n *                 calculatedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *       400:\r\n *         description: Dados inválidos para cálculo\r\n */\r\nrouter.post('/income-tax', (req, res) => calculatorController.calculateTaxes(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/company-tax:\r\n *   post:\r\n *     summary: Calcular impostos para pessoa jurídica\r\n *     tags: [Calculadora]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CompanyTaxRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Cálculo realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     revenue:\r\n *                       type: number\r\n *                     expenses:\r\n *                       type: number\r\n *                     profit:\r\n *                       type: number\r\n *                     taxes:\r\n *                       type: object\r\n *                       properties:\r\n *                         irpj:\r\n *                           type: number\r\n *                         csll:\r\n *                           type: number\r\n *                         pis:\r\n *                           type: number\r\n *                         cofins:\r\n *                           type: number\r\n *                         iss:\r\n *                           type: number\r\n *                         total:\r\n *                           type: number\r\n *                     netProfit:\r\n *                       type: number\r\n *                     effectiveRate:\r\n *                       type: number\r\n *                 calculatedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *       400:\r\n *         description: Dados inválidos para cálculo\r\n */\r\nrouter.post('/company-tax', (req, res) => calculatorController.calculateCompanyTax(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/payroll:\r\n *   post:\r\n *     summary: Calcular folha de pagamento\r\n *     tags: [Calculadora]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/PayrollCalculationRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Cálculo realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     grossSalary:\r\n *                       type: number\r\n *                     deductions:\r\n *                       type: object\r\n *                       properties:\r\n *                         inss:\r\n *                           type: number\r\n *                         irrf:\r\n *                           type: number\r\n *                         transportVoucher:\r\n *                           type: number\r\n *                         healthInsurance:\r\n *                           type: number\r\n *                         lifeInsurance:\r\n *                           type: number\r\n *                         other:\r\n *                           type: number\r\n *                         total:\r\n *                           type: number\r\n *                     benefits:\r\n *                       type: object\r\n *                       properties:\r\n *                         mealVoucher:\r\n *                           type: number\r\n *                         transportVoucher:\r\n *                           type: number\r\n *                         familyAllowance:\r\n *                           type: number\r\n *                         total:\r\n *                           type: number\r\n *                     netSalary:\r\n *                       type: number\r\n *                     employerCosts:\r\n *                       type: object\r\n *                       properties:\r\n *                         inss:\r\n *                           type: number\r\n *                         fgts:\r\n *                           type: number\r\n *                         rat:\r\n *                           type: number\r\n *                         salarioEducacao:\r\n *                           type: number\r\n *                         total:\r\n *                           type: number\r\n *                     totalCost:\r\n *                       type: number\r\n *                 calculatedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *       400:\r\n *         description: Dados inválidos para cálculo\r\n */\r\nrouter.post('/payroll', (req, res) => calculatorController.calculatePayroll(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/simples-nacional:\r\n *   post:\r\n *     summary: Calcular impostos do Simples Nacional\r\n *     tags: [Calculadora]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - revenue\r\n *               - annex\r\n *             properties:\r\n *               revenue:\r\n *                 type: number\r\n *                 minimum: 0\r\n *                 description: Receita bruta mensal\r\n *               annex:\r\n *                 type: string\r\n *                 enum: [I, II, III, IV, V]\r\n *                 description: Anexo do Simples Nacional\r\n *               accumulatedRevenue:\r\n *                 type: number\r\n *                 minimum: 0\r\n *                 description: Receita acumulada nos últimos 12 meses\r\n *     responses:\r\n *       200:\r\n *         description: Cálculo realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     revenue:\r\n *                       type: number\r\n *                     annex:\r\n *                       type: string\r\n *                     bracket:\r\n *                       type: string\r\n *                     rate:\r\n *                       type: number\r\n *                     tax:\r\n *                       type: number\r\n *                     netRevenue:\r\n *                       type: number\r\n *                     breakdown:\r\n *                       type: object\r\n *                       properties:\r\n *                         irpj:\r\n *                           type: number\r\n *                         csll:\r\n *                           type: number\r\n *                         pis:\r\n *                           type: number\r\n *                         cofins:\r\n *                           type: number\r\n *                         cpp:\r\n *                           type: number\r\n *                         icms:\r\n *                           type: number\r\n *                         iss:\r\n *                           type: number\r\n *                 calculatedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *       400:\r\n *         description: Dados inválidos para cálculo\r\n */\r\nrouter.post('/simples-nacional', (req, res) => calculatorController.calculateSimplesNacional(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/depreciation:\r\n *   post:\r\n *     summary: Calcular depreciação de bens\r\n *     tags: [Calculadora]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - assetValue\r\n *               - assetType\r\n *               - acquisitionDate\r\n *             properties:\r\n *               assetValue:\r\n *                 type: number\r\n *                 minimum: 0\r\n *                 description: Valor do bem\r\n *               assetType:\r\n *                 type: string\r\n *                 enum: [BUILDING, MACHINERY, VEHICLE, FURNITURE, COMPUTER, OTHER]\r\n *                 description: Tipo do bem\r\n *               acquisitionDate:\r\n *                 type: string\r\n *                 format: date\r\n *                 description: Data de aquisição\r\n *               residualValue:\r\n *                 type: number\r\n *                 minimum: 0\r\n *                 default: 0\r\n *                 description: Valor residual\r\n *               method:\r\n *                 type: string\r\n *                 enum: [LINEAR, ACCELERATED, SUM_OF_YEARS]\r\n *                 default: LINEAR\r\n *                 description: Método de depreciação\r\n *     responses:\r\n *       200:\r\n *         description: Cálculo realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     assetValue:\r\n *                       type: number\r\n *                     residualValue:\r\n *                       type: number\r\n *                     depreciableValue:\r\n *                       type: number\r\n *                     usefulLife:\r\n *                       type: integer\r\n *                     annualDepreciation:\r\n *                       type: number\r\n *                     monthlyDepreciation:\r\n *                       type: number\r\n *                     accumulatedDepreciation:\r\n *                       type: number\r\n *                     currentValue:\r\n *                       type: number\r\n *                     schedule:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           year:\r\n *                             type: integer\r\n *                           depreciation:\r\n *                             type: number\r\n *                           accumulated:\r\n *                             type: number\r\n *                           bookValue:\r\n *                             type: number\r\n *                 calculatedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *       400:\r\n *         description: Dados inválidos para cálculo\r\n */\r\nrouter.post('/depreciation', (req, res) => calculatorController.calculateDepreciation(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/loan:\r\n *   post:\r\n *     summary: Calcular financiamento/empréstimo\r\n *     tags: [Calculadora]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - principal\r\n *               - interestRate\r\n *               - term\r\n *             properties:\r\n *               principal:\r\n *                 type: number\r\n *                 minimum: 0\r\n *                 description: Valor principal\r\n *               interestRate:\r\n *                 type: number\r\n *                 minimum: 0\r\n *                 description: Taxa de juros (% ao mês)\r\n *               term:\r\n *                 type: integer\r\n *                 minimum: 1\r\n *                 description: Prazo em meses\r\n *               paymentType:\r\n *                 type: string\r\n *                 enum: [SAC, PRICE, AMERICAN]\r\n *                 default: PRICE\r\n *                 description: Sistema de amortização\r\n *     responses:\r\n *       200:\r\n *         description: Cálculo realizado com sucesso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     principal:\r\n *                       type: number\r\n *                     interestRate:\r\n *                       type: number\r\n *                     term:\r\n *                       type: integer\r\n *                     paymentType:\r\n *                       type: string\r\n *                     monthlyPayment:\r\n *                       type: number\r\n *                     totalPayment:\r\n *                       type: number\r\n *                     totalInterest:\r\n *                       type: number\r\n *                     schedule:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           month:\r\n *                             type: integer\r\n *                           payment:\r\n *                             type: number\r\n *                           principal:\r\n *                             type: number\r\n *                           interest:\r\n *                             type: number\r\n *                           balance:\r\n *                             type: number\r\n *                 calculatedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *       400:\r\n *         description: Dados inválidos para cálculo\r\n */\r\nrouter.post('/loan', (req, res) => calculatorController.calculateLoan(req, res));\r\n\r\n// Rotas administrativas\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/history:\r\n *   get:\r\n *     summary: Obter histórico de cálculos (Admin)\r\n *     tags: [Calculadora]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           default: 1\r\n *         description: Página\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           minimum: 1\r\n *           maximum: 100\r\n *           default: 20\r\n *         description: Itens por página\r\n *     responses:\r\n *       200:\r\n *         description: Histórico obtido com sucesso\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n */\r\nrouter.get('/history', authenticate, authorize('ADMIN'), (req, res) => calculatorController.getCalculationHistory(req, res));\r\n\r\n/**\r\n * @swagger\r\n * /api/v1/calculator/statistics:\r\n *   get:\r\n *     summary: Obter estatísticas de cálculos (Admin)\r\n *     tags: [Calculadora]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Estatísticas obtidas com sucesso\r\n *       401:\r\n *         description: Token inválido\r\n *       403:\r\n *         description: Sem permissão\r\n */\r\nrouter.get('/statistics', authenticate, authorize('ADMIN'), (req, res) => calculatorController.getCalculationStatistics(req, res));\r\n\r\nexport default router;"],"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","ignoreList":[]}